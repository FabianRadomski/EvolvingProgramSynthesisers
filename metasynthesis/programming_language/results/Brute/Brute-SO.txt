{"complexity": 3, "task": 1, "trial": 1, "no._explored_programs": 556, "best_cost_per_iteration": [[0, 1], [0, 0]], "no._iterations": 1, "execution_time": 0.046875, "best_program": "Program([[Drop]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 21, "trial": 1, "no._explored_programs": 4996, "best_cost_per_iteration": [[0, 21.333333333333332], [0, 20.333333333333332], [0, 19.333333333333332], [0, 10], [1, 9], [1, 8], [1, 4]], "no._iterations": 9, "execution_time": 1.109375, "best_program": "Program([LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": 5.714285714285714, "test_correct": 2, "train_cost": 4, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 41, "trial": 1, "no._explored_programs": 556, "best_cost_per_iteration": [[0, 5.333333333333333], [0, 4.333333333333333], [0, 3.3333333333333335], [0, 0]], "no._iterations": 1, "execution_time": 0.0625, "best_program": "Program([LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 61, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 45.666666666666664], [0, 44.666666666666664], [1, 43.666666666666664], [1, 42.666666666666664], [1, 37.666666666666664], [1, 36.666666666666664], [2, 35.666666666666664], [2, 34.666666666666664], [2, 31.333333333333332], [2, 7.666666666666667], [3, 6.666666666666667], [3, 5.666666666666667], [3, 4], [6, 0]], "no._iterations": 6, "execution_time": 1.0, "best_program": "Program([LoopWhileThen(IsLetter [MoveRight], [Drop]), LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 4, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 81, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 19], [0, 18], [0, 17], [0, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [2, 10], [3, 9], [3, 8], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.3125, "best_program": "Program([LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotUppercase [Drop], [MakeUppercase]), [MoveRight, Drop], LoopWhileThen(IsNotLetter [Drop], [MakeUppercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 101, "trial": 1, "no._explored_programs": 3886, "best_cost_per_iteration": [[0, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.53125, "best_program": "Program([[MoveRight], LoopWhileThen(IsLetter [MoveRight], [MakeLowercase]), [MoveRight, MakeUppercase]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 121, "trial": 1, "no._explored_programs": 1111, "best_cost_per_iteration": [[0, 7], [0, 6], [1, 5], [1, 4], [1, 0]], "no._iterations": 2, "execution_time": 0.171875, "best_program": "Program([LoopWhileThen(IsNotNumber [MoveRight], [Drop]), LoopWhileThen(IsNotLetter [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 141, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 24], [0, 23], [0, 22], [0, 19], [1, 18], [1, 17], [1, 14], [1, 13], [2, 12], [2, 11], [2, 9], [3, 8], [3, 7], [3, 0]], "no._iterations": 4, "execution_time": 0.359375, "best_program": "Program([LoopWhileThen(IsNotLetter [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotLetter [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": Infinity, "test_correct": 6, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 161, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 22.666666666666668], [0, 21.666666666666668], [0, 20.666666666666668], [0, 16.666666666666668], [0, 15.666666666666666], [1, 14.666666666666666], [1, 13.666666666666666], [1, 10], [2, 9], [2, 8], [2, 3], [2, 2.3333333333333335], [3, 0.6666666666666666], [4, 0.3333333333333333], [5, 0]], "no._iterations": 6, "execution_time": 0.703125, "best_program": "Program([LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [MakeLowercase]), If(IsNumber [MakeLowercase] [Drop]), LoopWhileThen(IsSpace [Drop], [MakeUppercase])])", "test_cost": Infinity, "test_correct": 5, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 181, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 48.333333333333336], [0, 47.333333333333336], [0, 46.333333333333336], [0, 42.666666666666664], [0, 26.666666666666668], [1, 25.666666666666668], [1, 24.666666666666668], [1, 22.666666666666668], [2, 21.666666666666668], [3, 20.666666666666668], [3, 19.666666666666668], [3, 13], [3, 0]], "no._iterations": 4, "execution_time": 0.546875, "best_program": "Program([LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsNotLetter [MoveRight], [Drop]), LoopWhileThen(IsNotNumber [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 201, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 4], [2, 3], [3, 2], [4, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.734375, "best_program": "Program([LoopWhileThen(IsNotNumber [MoveRight], [MoveLeft]), LoopWhileThen(IsNotLetter [MoveLeft], [Drop]), [Drop], [MoveLeft, Drop], [MoveLeft, Drop]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 221, "trial": 1, "no._explored_programs": 3886, "best_cost_per_iteration": [[0, 8], [0, 7], [1, 6], [4, 5.666666666666667], [7, 5.428571428571429]], "no._iterations": 7, "execution_time": 1.015625, "best_program": "Program([[Drop], LoopWhileThen(NotAtEnd [MoveRight], [Drop]), LoopWhileThen(IsLetter [MoveLeft], [MakeLowercase]), If(IsSpace [MakeLowercase] [Drop])])", "test_cost": 5.428571428571429, "test_correct": 0, "train_cost": 5.666666666666667, "train_correct": 0, "test_total": 7}
{"complexity": 3, "task": 241, "trial": 1, "no._explored_programs": 1666, "best_cost_per_iteration": [[0, 25], [0, 24], [1, 23], [1, 22], [1, 21], [1, 3.3333333333333335], [2, 2.3333333333333335], [2, 1.3333333333333333], [2, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.328125, "best_program": "Program([LoopWhileThen(IsNotLowercase [MoveRight], [Drop]), LoopWhileThen(IsNotUppercase [Drop], [Drop]), LoopWhileThen(IsNotLetter [Drop], [MakeUppercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 261, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 48], [0, 47], [0, 46], [0, 37], [0, 36], [1, 35], [1, 34], [1, 30.666666666666668], [1, 2], [2, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.546875, "best_program": "Program([LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [MakeLowercase]), LoopWhileThen(IsNotLetter [MoveRight], [Drop]), [Drop]])", "test_cost": 0, "test_correct": 10, "train_cost": 0, "train_correct": 3, "test_total": 10}
{"complexity": 3, "task": 281, "trial": 1, "no._explored_programs": 2776, "best_cost_per_iteration": [[0, 5.333333333333333], [0, 4.333333333333333], [0, 3.3333333333333335], [1, 3], [2, 1.6666666666666667], [3, 1.3333333333333333], [4, 0]], "no._iterations": 5, "execution_time": 0.484375, "best_program": "Program([[Drop, Drop], LoopWhileThen(IsLetter [Drop], [MakeLowercase]), LoopWhileThen(IsNumber [Drop], [MakeLowercase]), LoopWhileThen(IsLetter [Drop], [MakeLowercase]), LoopWhileThen(IsNumber [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 301, "trial": 1, "no._explored_programs": 6106, "best_cost_per_iteration": [[0, 10.333333333333334], [0, 10], [0, 9.666666666666666], [0, 9.333333333333334], [1, 8.666666666666666], [1, 8.333333333333334], [2, 8], [2, 7.666666666666667], [2, 7.333333333333333], [3, 7], [3, 6.666666666666667], [3, 6.333333333333333], [4, 5.666666666666667], [4, 5.333333333333333], [5, 5], [6, 4.666666666666667], [6, 4.333333333333333], [7, 4], [8, 3.6666666666666665], [9, 3.3333333333333335], [11, 1.7142857142857142]], "no._iterations": 11, "execution_time": 1.125, "best_program": "Program([LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsNotUppercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsNotUppercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(NotAtEnd [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveLeft], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveLeft], [MakeLowercase]), [MoveLeft, MakeLowercase], [MoveLeft, MakeLowercase]])", "test_cost": 1.7142857142857142, "test_correct": 4, "train_cost": 3.3333333333333335, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 321, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 6.666666666666667], [0, 5.666666666666667], [1, 4.666666666666667], [1, 3.6666666666666665], [1, 3], [2, 2], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.328125, "best_program": "Program([LoopWhileThen(IsLetter [MoveRight], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsLetter [MoveRight], [Drop]), [Drop, Drop]])", "test_cost": 0.7142857142857143, "test_correct": 2, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 1, "trial": 1, "no._explored_programs": 556, "best_cost_per_iteration": [[0, 1], [0, 0]], "no._iterations": 1, "execution_time": 0.046875, "best_program": "Program([[Drop]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 21, "trial": 1, "no._explored_programs": 4441, "best_cost_per_iteration": [[0, 21.333333333333332], [0, 20.333333333333332], [0, 19.333333333333332], [0, 10], [1, 9], [1, 8], [1, 4]], "no._iterations": 8, "execution_time": 1.03125, "best_program": "Program([LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": 5.714285714285714, "test_correct": 2, "train_cost": 4, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 41, "trial": 1, "no._explored_programs": 556, "best_cost_per_iteration": [[0, 5.333333333333333], [0, 4.333333333333333], [0, 3.3333333333333335], [0, 0]], "no._iterations": 1, "execution_time": 0.0625, "best_program": "Program([LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 61, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 45.666666666666664], [0, 44.666666666666664], [1, 43.666666666666664], [1, 42.666666666666664], [1, 37.666666666666664], [1, 36.666666666666664], [2, 35.666666666666664], [2, 34.666666666666664], [2, 31.333333333333332], [2, 7.666666666666667], [3, 6.666666666666667], [3, 5.666666666666667], [3, 4], [6, 0]], "no._iterations": 6, "execution_time": 1.078125, "best_program": "Program([LoopWhileThen(IsLetter [MoveRight], [Drop]), LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 4, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 81, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 19], [0, 18], [0, 17], [0, 16], [1, 15], [1, 14], [1, 13], [1, 12], [1, 11], [2, 10], [3, 9], [3, 8], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.328125, "best_program": "Program([LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotUppercase [Drop], [MakeUppercase]), [MoveRight, Drop], LoopWhileThen(IsNotLetter [Drop], [MakeUppercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 101, "trial": 1, "no._explored_programs": 3886, "best_cost_per_iteration": [[0, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.5625, "best_program": "Program([[MoveRight], LoopWhileThen(IsLetter [MoveRight], [MakeLowercase]), [MoveRight, MakeUppercase]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 121, "trial": 1, "no._explored_programs": 1111, "best_cost_per_iteration": [[0, 7], [0, 6], [1, 5], [1, 4], [1, 0]], "no._iterations": 2, "execution_time": 0.171875, "best_program": "Program([LoopWhileThen(IsNotNumber [MoveRight], [Drop]), LoopWhileThen(IsNotLetter [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 141, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 24], [0, 23], [0, 22], [0, 19], [1, 18], [1, 17], [1, 14], [1, 13], [2, 12], [2, 11], [2, 9], [3, 8], [3, 7], [3, 0]], "no._iterations": 4, "execution_time": 0.375, "best_program": "Program([LoopWhileThen(IsNotLetter [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotLetter [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop])])", "test_cost": Infinity, "test_correct": 6, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 161, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 22.666666666666668], [0, 21.666666666666668], [0, 20.666666666666668], [0, 16.666666666666668], [0, 15.666666666666666], [1, 14.666666666666666], [1, 13.666666666666666], [1, 10], [2, 9], [2, 8], [2, 3], [2, 2.3333333333333335], [3, 0.6666666666666666], [4, 0.3333333333333333], [5, 0]], "no._iterations": 6, "execution_time": 0.6875, "best_program": "Program([LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsLetter [Drop], [MakeLowercase]), If(IsNumber [MakeLowercase] [Drop]), LoopWhileThen(IsSpace [Drop], [MakeUppercase])])", "test_cost": Infinity, "test_correct": 5, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 181, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 48.333333333333336], [0, 47.333333333333336], [0, 46.333333333333336], [0, 42.666666666666664], [0, 26.666666666666668], [1, 25.666666666666668], [1, 24.666666666666668], [1, 22.666666666666668], [2, 21.666666666666668], [3, 20.666666666666668], [3, 19.666666666666668], [3, 13], [3, 0]], "no._iterations": 4, "execution_time": 0.59375, "best_program": "Program([LoopWhileThen(IsNotNumber [Drop], [Drop]), LoopWhileThen(IsNotSpace [Drop], [Drop]), LoopWhileThen(IsNotLetter [MoveRight], [Drop]), LoopWhileThen(IsNotNumber [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 201, "trial": 1, "no._explored_programs": 3331, "best_cost_per_iteration": [[0, 4], [2, 3], [3, 2], [4, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.75, "best_program": "Program([LoopWhileThen(IsNotNumber [MoveRight], [MoveLeft]), LoopWhileThen(IsNotLetter [MoveLeft], [Drop]), [Drop], [MoveLeft, Drop], [MoveLeft, Drop]])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 221, "trial": 1, "no._explored_programs": 3886, "best_cost_per_iteration": [[0, 8], [0, 7], [1, 6], [4, 5.666666666666667], [7, 5.428571428571429]], "no._iterations": 7, "execution_time": 1.0, "best_program": "Program([[Drop], LoopWhileThen(NotAtEnd [MoveRight], [Drop]), LoopWhileThen(IsLetter [MoveLeft], [MakeLowercase]), If(IsSpace [MakeLowercase] [Drop])])", "test_cost": 5.428571428571429, "test_correct": 0, "train_cost": 5.666666666666667, "train_correct": 0, "test_total": 7}
{"complexity": 3, "task": 241, "trial": 1, "no._explored_programs": 1666, "best_cost_per_iteration": [[0, 25], [0, 24], [1, 23], [1, 22], [1, 21], [1, 3.3333333333333335], [2, 2.3333333333333335], [2, 1.3333333333333333], [2, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.328125, "best_program": "Program([LoopWhileThen(IsNotLowercase [MoveRight], [Drop]), LoopWhileThen(IsNotUppercase [Drop], [Drop]), LoopWhileThen(IsNotLetter [Drop], [MakeUppercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 261, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 48], [0, 47], [0, 46], [0, 37], [0, 36], [1, 35], [1, 34], [1, 30.666666666666668], [1, 2], [2, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.546875, "best_program": "Program([LoopWhileThen(IsNotLowercase [Drop], [Drop]), LoopWhileThen(IsNotNumber [Drop], [MakeLowercase]), LoopWhileThen(IsNotLetter [MoveRight], [Drop]), [Drop]])", "test_cost": 0, "test_correct": 10, "train_cost": 0, "train_correct": 3, "test_total": 10}
{"complexity": 3, "task": 281, "trial": 1, "no._explored_programs": 2776, "best_cost_per_iteration": [[0, 5.333333333333333], [0, 4.333333333333333], [0, 3.3333333333333335], [1, 3], [2, 1.6666666666666667], [3, 1.3333333333333333], [4, 0]], "no._iterations": 5, "execution_time": 0.4375, "best_program": "Program([[Drop, Drop], LoopWhileThen(IsLetter [Drop], [MakeLowercase]), LoopWhileThen(IsNumber [Drop], [MakeLowercase]), LoopWhileThen(IsLetter [Drop], [MakeLowercase]), LoopWhileThen(IsNumber [Drop], [MakeLowercase])])", "test_cost": 0, "test_correct": 7, "train_cost": 0, "train_correct": 3, "test_total": 7}
{"complexity": 3, "task": 301, "trial": 1, "no._explored_programs": 5551, "best_cost_per_iteration": [[0, 10.333333333333334], [0, 10], [0, 9.666666666666666], [0, 9.333333333333334], [1, 8.666666666666666], [1, 8.333333333333334], [2, 8], [2, 7.666666666666667], [2, 7.333333333333333], [3, 7], [3, 6.666666666666667], [3, 6.333333333333333], [4, 5.666666666666667], [4, 5.333333333333333], [5, 5], [6, 4.666666666666667], [6, 4.333333333333333], [7, 4], [8, 3.6666666666666665], [9, 3.3333333333333335], [10, 1.7142857142857142]], "no._iterations": 10, "execution_time": 1.015625, "best_program": "Program([LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsNotUppercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsNotUppercase [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveRight], [MakeLowercase]), LoopWhileThen(NotAtEnd [MoveRight], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveLeft], [MakeLowercase]), LoopWhileThen(IsLowercase [MoveLeft], [MakeLowercase]), [MoveLeft, MakeLowercase], [MoveLeft, MakeLowercase]])", "test_cost": 1.7142857142857142, "test_correct": 4, "train_cost": 3.3333333333333335, "train_correct": 2, "test_total": 7}
{"complexity": 3, "task": 321, "trial": 1, "no._explored_programs": 2221, "best_cost_per_iteration": [[0, 6.666666666666667], [0, 5.666666666666667], [1, 4.666666666666667], [1, 3.6666666666666665], [1, 3], [2, 2], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.328125, "best_program": "Program([LoopWhileThen(IsLetter [MoveRight], [Drop]), LoopWhileThen(IsLetter [Drop], [Drop]), LoopWhileThen(IsLetter [MoveRight], [Drop]), [Drop, Drop]])", "test_cost": 0.7142857142857143, "test_correct": 2, "train_cost": 0, "train_correct": 3, "test_total": 7}
