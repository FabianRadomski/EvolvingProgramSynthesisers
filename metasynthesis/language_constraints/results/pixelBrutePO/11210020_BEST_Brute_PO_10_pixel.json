{"constraints": [[{"complexity": 1, "task": 0, "trial": 2, "no._explored_programs": 5416, "best_cost_per_iteration": [[0, 19.2], [0, 19.1], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.1], [3, 16.0], [3, 15.2], [4, 15.1], [4, 15.0], [4, 14.1], [5, 14.0], [5, 13.2], [6, 13.1], [6, 12.3], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.1], [9, 10.0], [9, 9.2], [10, 9.1], [10, 8.3], [10, 8.2], [11, 8.1], [11, 7.3], [11, 7.2], [12, 7.1], [12, 7.0], [12, 6.2], [13, 6.1], [13, 6.0], [13, 5.1], [14, 5.0], [14, 4.2], [15, 4.1], [15, 3.3], [16, 3.2], [16, 2.4], [17, 2.3], [17, 2.2], [17, 1.3], [18, 1.2], [18, 1.1], [18, 0]], "no._iterations": 19, "execution_time": 0.552856483, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 45}, {"complexity": 1, "task": 1, "trial": 2, "no._explored_programs": 4846, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [5, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [8, 8.2], [9, 8.1], [9, 8.0], [9, 7.1], [10, 7.0], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.1], [13, 4.0], [13, 3.3], [14, 3.2], [14, 2.2], [15, 2.1], [15, 1.3], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.464898859, "best_program": "Program([[MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 45}, {"complexity": 1, "task": 2, "trial": 2, "no._explored_programs": 3806, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.334993759, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 3, "trial": 2, "no._explored_programs": 4367, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.2], [7, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.3], [12, 3.2], [12, 3.1], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.405654758, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 239}, {"complexity": 1, "task": 4, "trial": 2, "no._explored_programs": 29413, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0]], "no._iterations": 171, "execution_time": 10.104897997999998, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(AtBottom [MoveLeft], [MoveUp]), [MoveLeft]])", "test_cost": 1.0, "test_correct": 0, "train_cost": 1.0, "train_correct": 0, "test_total": 1, "prune_count": 19653}], [{"complexity": 1, "task": 0, "trial": 3, "no._explored_programs": 4082, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [14, 0]], "no._iterations": 15, "execution_time": 0.365913457, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 239}, {"complexity": 1, "task": 1, "trial": 3, "no._explored_programs": 4561, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.2], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.1], [4, 12.0], [4, 11.2], [5, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [9, 7.1], [9, 7.0], [9, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.3], [13, 3.2], [13, 2.2], [14, 2.1], [14, 1.3], [14, 1.2], [15, 1.1], [15, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.42339231699999996, "best_program": "Program([[MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 45}, {"complexity": 1, "task": 2, "trial": 3, "no._explored_programs": 4757, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 8.2], [8, 8.1], [8, 7.2], [9, 7.1], [9, 6.3], [10, 6.2], [10, 6.1], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.2], [13, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [14, 1.2], [15, 1.1], [15, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.459803066, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 134}, {"complexity": 1, "task": 3, "trial": 3, "no._explored_programs": 4661, "best_cost_per_iteration": [[0, 16.1], [0, 16.0], [0, 15.1], [0, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.2], [6, 10.1], [6, 10.0], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.3], [12, 4.2], [12, 4.1], [12, 3.2], [13, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.458595915, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 4, "trial": 3, "no._explored_programs": 5703, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.2], [8, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [23, 0]], "no._iterations": 24, "execution_time": 0.6738946610000001, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], [MoveDown, MoveLeft], [MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 1183}], [{"complexity": 1, "task": 0, "trial": 4, "no._explored_programs": 3324, "best_cost_per_iteration": [[0, 12.1], [0, 12.0], [0, 11.1], [0, 11.0], [1, 10.1], [2, 10.0], [2, 9.1], [3, 9.0], [3, 8.2], [3, 8.1], [4, 8.0], [4, 7.2], [4, 7.1], [5, 7.0], [5, 6.1], [6, 6.0], [6, 5.1], [7, 5.0], [7, 4.1], [8, 4.0], [8, 3.1], [9, 3.0], [9, 2.2], [10, 2.1], [10, 2.0], [10, 1.1], [11, 1.0], [11, 0]], "no._iterations": 12, "execution_time": 0.26237737699999997, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 142}, {"complexity": 1, "task": 1, "trial": 4, "no._explored_programs": 3521, "best_cost_per_iteration": [[0, 12.1], [0, 12.0], [0, 11.1], [0, 11.0], [1, 10.1], [2, 10.0], [2, 9.2], [2, 9.1], [3, 9.0], [3, 8.1], [4, 8.0], [4, 7.2], [4, 7.1], [5, 7.0], [5, 6.1], [6, 6.0], [6, 5.2], [7, 5.1], [7, 5.0], [7, 4.1], [8, 4.0], [8, 3.1], [9, 3.0], [9, 2.1], [10, 2.0], [11, 1.1], [12, 1.0], [12, 0]], "no._iterations": 13, "execution_time": 0.296430919, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 2, "trial": 4, "no._explored_programs": 4564, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [14, 2.1], [15, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.435878058, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 327}, {"complexity": 1, "task": 3, "trial": 4, "no._explored_programs": 3806, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.330634984, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 4, "trial": 4, "no._explored_programs": 4807, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.2], [1, 14.1], [2, 14.0], [2, 13.2], [2, 13.1], [3, 13.0], [3, 12.1], [4, 12.0], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.2], [10, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [13, 3.1], [14, 3.0], [14, 2.1], [15, 2.0], [16, 1.2], [17, 1.1], [17, 0]], "no._iterations": 18, "execution_time": 0.49404303200000005, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveRight], [MoveUp, Draw], [MoveUp, Draw], [MoveRight], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 369}], [{"complexity": 1, "task": 0, "trial": 5, "no._explored_programs": 5042, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 9.2], [8, 9.1], [8, 8.2], [9, 8.1], [9, 7.3], [10, 7.2], [10, 7.1], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.509782777, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 134}, {"complexity": 1, "task": 1, "trial": 5, "no._explored_programs": 4564, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [14, 2.1], [15, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.43480932, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 327}, {"complexity": 1, "task": 2, "trial": 5, "no._explored_programs": 5607, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [6, 10.1], [7, 10.0], [7, 9.2], [8, 9.1], [8, 9.0], [8, 8.1], [9, 8.0], [9, 7.2], [10, 7.1], [10, 7.0], [15, 6.1], [16, 6.0], [16, 5.2], [17, 5.1], [17, 5.0], [17, 4.1], [18, 4.0], [18, 3.2], [19, 3.1], [19, 3.0], [19, 2.1], [20, 2.0], [20, 1.2], [21, 1.1], [21, 0]], "no._iterations": 22, "execution_time": 0.6404523860000001, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], [MoveUp, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 709}, {"complexity": 1, "task": 3, "trial": 5, "no._explored_programs": 5416, "best_cost_per_iteration": [[0, 19.3], [0, 19.2], [0, 18.3], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.2], [3, 16.1], [3, 15.3], [3, 15.1], [4, 15.0], [4, 14.2], [4, 14.1], [5, 14.0], [5, 13.2], [5, 13.1], [6, 13.0], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.2], [9, 10.1], [9, 9.2], [10, 9.1], [10, 8.3], [11, 8.2], [11, 8.1], [11, 7.3], [12, 7.2], [12, 7.1], [12, 6.2], [13, 6.1], [13, 6.0], [13, 5.1], [14, 5.0], [14, 4.1], [15, 4.0], [15, 3.2], [16, 3.1], [16, 3.0], [16, 2.3], [17, 2.2], [17, 1.2], [18, 1.1], [18, 0]], "no._iterations": 19, "execution_time": 0.5816657159999999, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 45}, {"complexity": 1, "task": 4, "trial": 5, "no._explored_programs": 6462, "best_cost_per_iteration": [[0, 20.2], [0, 20.1], [0, 19.2], [0, 19.1], [1, 19.0], [1, 18.2], [1, 18.1], [2, 18.0], [2, 17.1], [3, 17.0], [3, 16.2], [4, 16.1], [4, 16.0], [4, 15.1], [5, 15.0], [5, 14.2], [5, 14.1], [6, 14.0], [6, 13.2], [6, 13.1], [7, 13.0], [7, 12.2], [8, 12.1], [8, 12.0], [8, 11.1], [9, 11.0], [9, 10.2], [10, 10.1], [10, 9.3], [10, 9.1], [11, 9.0], [11, 8.2], [12, 8.1], [12, 8.0], [12, 7.3], [13, 7.2], [13, 7.1], [13, 6.2], [14, 6.1], [14, 6.0], [14, 5.1], [15, 5.0], [15, 4.2], [15, 4.1], [16, 4.0], [16, 3.2], [17, 3.1], [17, 3.0], [17, 2.2], [18, 2.1], [18, 2.0], [23, 1.2], [24, 1.1], [24, 0]], "no._iterations": 25, "execution_time": 0.807067801, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 709}], [{"complexity": 1, "task": 0, "trial": 6, "no._explored_programs": 4499, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.2], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.3], [6, 8.2], [6, 8.1], [6, 7.2], [7, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.44999109200000004, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveDown, MoveDown], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 392}, {"complexity": 1, "task": 1, "trial": 6, "no._explored_programs": 4376, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [5, 9.1], [6, 9.0], [6, 8.2], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.2], [11, 3.1], [12, 3.0], [12, 2.2], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.40052022800000003, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 2, "trial": 6, "no._explored_programs": 5042, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 9.2], [8, 9.1], [8, 8.2], [9, 8.1], [9, 7.3], [10, 7.2], [10, 7.1], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.507652993, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 134}, {"complexity": 1, "task": 3, "trial": 6, "no._explored_programs": 3806, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.33187852500000004, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 4, "trial": 6, "no._explored_programs": 5701, "best_cost_per_iteration": [[0, 20.2], [0, 20.1], [0, 19.2], [0, 19.1], [1, 19.0], [1, 18.2], [1, 18.1], [2, 18.0], [2, 17.2], [3, 17.1], [3, 16.3], [3, 16.1], [4, 16.0], [4, 15.2], [4, 15.1], [5, 15.0], [5, 14.2], [5, 14.1], [6, 14.0], [6, 13.1], [7, 13.0], [7, 12.2], [8, 12.1], [8, 12.0], [8, 11.1], [9, 11.0], [9, 10.2], [10, 10.1], [10, 10.0], [10, 9.1], [11, 9.0], [11, 8.2], [12, 8.1], [12, 7.3], [12, 7.1], [13, 7.0], [13, 6.2], [14, 6.1], [14, 5.3], [15, 5.2], [15, 5.1], [15, 4.2], [16, 4.1], [16, 3.2], [17, 3.1], [17, 2.3], [18, 2.2], [18, 2.1], [18, 1.3], [19, 1.2], [19, 1.1], [19, 0]], "no._iterations": 20, "execution_time": 0.628026034, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 45}], [{"complexity": 1, "task": 0, "trial": 7, "no._explored_programs": 5112, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [4, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.3], [9, 5.2], [9, 5.1], [9, 4.2], [10, 4.1], [10, 4.0], [10, 3.2], [11, 3.1], [11, 3.0], [11, 2.2], [12, 2.1], [12, 2.0], [17, 1.1], [18, 1.0], [20, 0]], "no._iterations": 21, "execution_time": 0.52814932, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveDown], [MoveRight, Draw], [MoveDown], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 919}, {"complexity": 1, "task": 1, "trial": 7, "no._explored_programs": 5157, "best_cost_per_iteration": [[0, 17.3], [0, 17.2], [0, 16.3], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.2], [7, 9.1], [8, 9.0], [8, 8.2], [9, 8.1], [9, 7.1], [10, 7.0], [10, 6.1], [11, 6.0], [11, 5.2], [12, 5.1], [12, 5.0], [12, 4.3], [13, 4.2], [13, 4.1], [13, 3.2], [14, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [15, 1.3], [16, 1.2], [16, 1.1], [17, 1.0], [18, 0]], "no._iterations": 19, "execution_time": 0.532312517, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveRight], [Draw, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 304}, {"complexity": 1, "task": 2, "trial": 7, "no._explored_programs": 5740, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 8.2], [8, 8.1], [8, 7.2], [9, 7.1], [9, 6.3], [10, 6.2], [10, 6.1], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [14, 1.2], [15, 1.1], [15, 1.0], [21, 0]], "no._iterations": 22, "execution_time": 0.645714178, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveUp, MoveLeft], [MoveLeft], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 576}, {"complexity": 1, "task": 3, "trial": 7, "no._explored_programs": 5319, "best_cost_per_iteration": [[0, 18.2], [0, 18.1], [0, 17.2], [0, 17.1], [1, 17.0], [1, 16.1], [2, 16.0], [2, 15.2], [3, 15.1], [3, 14.3], [3, 14.1], [4, 14.0], [4, 13.2], [4, 13.1], [5, 13.0], [5, 12.2], [5, 12.1], [6, 12.0], [6, 11.2], [7, 11.1], [7, 11.0], [7, 10.1], [8, 10.0], [8, 9.1], [9, 9.0], [9, 8.2], [9, 8.1], [10, 8.0], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 6.0], [12, 5.4], [13, 5.3], [13, 5.2], [13, 4.3], [13, 4.2], [14, 4.1], [14, 3.2], [15, 3.1], [15, 2.3], [16, 2.2], [16, 2.1], [17, 2.0], [17, 1.2], [18, 1.1], [18, 1.0], [18, 0]], "no._iterations": 19, "execution_time": 0.558810489, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, MoveDown], [MoveRight, Draw], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 142}, {"complexity": 1, "task": 4, "trial": 7, "no._explored_programs": 4367, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.2], [7, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.3], [12, 3.2], [12, 3.1], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.403759945, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 239}], [{"complexity": 1, "task": 0, "trial": 8, "no._explored_programs": 4749, "best_cost_per_iteration": [[0, 17.1], [0, 17.0], [0, 16.1], [0, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [6, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [8, 8.2], [8, 8.1], [9, 8.0], [9, 7.2], [9, 7.1], [10, 7.0], [10, 6.2], [10, 6.1], [11, 6.0], [11, 5.2], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 1.2], [16, 1.1], [16, 0]], "no._iterations": 17, "execution_time": 0.453164711, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 142}, {"complexity": 1, "task": 1, "trial": 8, "no._explored_programs": 5613, "best_cost_per_iteration": [[0, 19.2], [0, 19.1], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.2], [2, 16.1], [3, 16.0], [3, 15.1], [4, 15.0], [4, 14.2], [5, 14.1], [5, 14.0], [5, 13.1], [6, 13.0], [6, 12.2], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.2], [9, 10.1], [9, 9.2], [10, 9.1], [10, 8.3], [11, 8.2], [11, 7.4], [11, 7.2], [12, 7.1], [12, 6.3], [12, 6.1], [13, 6.0], [13, 5.2], [13, 5.1], [14, 5.0], [14, 4.2], [15, 4.1], [15, 4.0], [15, 3.2], [16, 3.1], [16, 3.0], [16, 2.3], [17, 2.2], [17, 2.1], [17, 1.4], [18, 1.3], [18, 1.2], [18, 1.1], [19, 1.0], [19, 0]], "no._iterations": 20, "execution_time": 0.611933226, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 133}, {"complexity": 1, "task": 2, "trial": 8, "no._explored_programs": 5607, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [6, 10.1], [7, 10.0], [7, 9.2], [8, 9.1], [8, 9.0], [8, 8.1], [9, 8.0], [9, 7.2], [10, 7.1], [10, 7.0], [15, 6.1], [16, 6.0], [16, 5.2], [17, 5.1], [17, 5.0], [17, 4.1], [18, 4.0], [18, 3.2], [19, 3.1], [19, 3.0], [19, 2.1], [20, 2.0], [20, 1.2], [21, 1.1], [21, 0]], "no._iterations": 22, "execution_time": 0.638558829, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], [MoveUp, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 709}, {"complexity": 1, "task": 3, "trial": 8, "no._explored_programs": 4473, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.2], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [9, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 3.0], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.433534485, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveLeft], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 133}, {"complexity": 1, "task": 4, "trial": 8, "no._explored_programs": 5807, "best_cost_per_iteration": [[0, 16.1], [0, 16.0], [0, 15.1], [0, 15.0], [1, 14.1], [2, 14.0], [2, 13.2], [3, 13.1], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.1], [5, 11.0], [5, 10.2], [5, 10.1], [6, 10.0], [6, 9.2], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.2], [10, 6.1], [10, 5.3], [10, 5.2], [11, 5.1], [11, 4.3], [12, 4.2], [12, 4.1], [12, 3.3], [12, 3.2], [13, 3.1], [13, 3.0], [19, 2.1], [20, 2.0], [21, 1.2], [22, 1.1], [22, 0]], "no._iterations": 23, "execution_time": 0.6855027029999999, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveLeft, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, MoveLeft], [MoveLeft], [MoveDown, Draw], [MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 794}], [{"complexity": 1, "task": 0, "trial": 9, "no._explored_programs": 4865, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [4, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.3], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 2.3], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.3], [14, 1.2], [14, 1.1], [14, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.48573763099999995, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [MoveLeft, MoveUp], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 311}, {"complexity": 1, "task": 1, "trial": 9, "no._explored_programs": 9489, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [8, 9.1], [9, 9.0], [9, 8.2], [9, 8.1], [10, 8.0], [10, 7.2], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 5.2], [12, 5.1], [13, 5.0], [13, 4.2], [13, 4.1], [14, 4.0], [14, 3.2], [15, 3.1], [15, 3.0], [15, 2.2], [16, 2.1], [16, 2.0], [43, 1.1], [44, 1.0], [44, 0]], "no._iterations": 45, "execution_time": 1.6733459419999999, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveRight], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(AtRight [MoveLeft], [MoveDown]), LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 3382}, {"complexity": 1, "task": 2, "trial": 9, "no._explored_programs": 5157, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [3, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [10, 8.1], [11, 8.0], [11, 7.1], [12, 7.0], [12, 6.2], [13, 6.1], [13, 5.3], [14, 5.2], [14, 5.1], [14, 4.2], [15, 4.1], [15, 4.0], [15, 3.1], [16, 3.0], [16, 2.1], [17, 2.0], [17, 1.1], [18, 1.0], [18, 0]], "no._iterations": 19, "execution_time": 0.5362218879999999, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 304}, {"complexity": 1, "task": 3, "trial": 9, "no._explored_programs": 3806, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.33548827999999997, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 230}, {"complexity": 1, "task": 4, "trial": 9, "no._explored_programs": 4499, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.2], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.3], [6, 8.2], [6, 8.1], [6, 7.2], [7, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.45001404500000003, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveDown, MoveDown], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 392}], [{"complexity": 1, "task": 0, "trial": 10, "no._explored_programs": 5458, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.1], [2, 12.0], [2, 11.2], [2, 11.1], [3, 11.0], [3, 10.2], [4, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.2], [9, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.2], [11, 3.1], [12, 3.0], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [21, 0]], "no._iterations": 22, "execution_time": 0.631127129, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, MoveLeft], [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveLeft, MoveUp], [MoveLeft], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 858}, {"complexity": 1, "task": 1, "trial": 10, "no._explored_programs": 5157, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [3, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [10, 8.1], [11, 8.0], [11, 7.1], [12, 7.0], [12, 6.2], [13, 6.1], [13, 5.3], [14, 5.2], [14, 5.1], [14, 4.2], [15, 4.1], [15, 4.0], [15, 3.1], [16, 3.0], [16, 2.1], [17, 2.0], [17, 1.1], [18, 1.0], [18, 0]], "no._iterations": 19, "execution_time": 0.534149718, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 304}, {"complexity": 1, "task": 2, "trial": 10, "no._explored_programs": 4082, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [14, 0]], "no._iterations": 15, "execution_time": 0.370462777, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 239}, {"complexity": 1, "task": 3, "trial": 10, "no._explored_programs": 4865, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [4, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.3], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 2.3], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.3], [14, 1.2], [14, 1.1], [14, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.48227609800000004, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [MoveLeft, MoveUp], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 311}, {"complexity": 1, "task": 4, "trial": 10, "no._explored_programs": 3894, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [9, 4.1], [10, 4.0], [10, 3.2], [11, 3.1], [11, 3.0], [11, 2.1], [12, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.338564572, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 142}]], "normal": [[{"complexity": 1, "task": 0, "trial": 2, "no._explored_programs": 6271, "best_cost_per_iteration": [[0, 19.2], [0, 19.1], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.1], [3, 16.0], [3, 15.2], [4, 15.1], [4, 15.0], [4, 14.1], [5, 14.0], [5, 13.2], [6, 13.1], [6, 12.3], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.1], [9, 10.0], [9, 9.2], [10, 9.1], [10, 8.3], [10, 8.2], [11, 8.1], [11, 7.3], [11, 7.2], [12, 7.1], [12, 7.0], [12, 6.2], [13, 6.1], [13, 6.0], [13, 5.1], [14, 5.0], [14, 4.2], [15, 4.1], [15, 3.3], [16, 3.2], [16, 2.4], [17, 2.3], [17, 2.2], [17, 1.3], [18, 1.2], [18, 1.1], [18, 0]], "no._iterations": 19, "execution_time": 0.5219181350000001, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 2, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [5, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [8, 8.2], [9, 8.1], [9, 8.0], [9, 7.1], [10, 7.0], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.1], [13, 4.0], [13, 3.3], [14, 3.2], [14, 3.1], [14, 2.2], [15, 2.1], [15, 1.3], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.435715651, "best_program": "Program([[MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 2, "no._explored_programs": 4621, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.322464486, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 2, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.2], [7, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.3], [12, 3.2], [12, 3.1], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.39958356500000003, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 2, "no._explored_programs": 33661, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0]], "no._iterations": 101, "execution_time": 10.15201977, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(AtRight [MoveRight], [MoveLeft]), [MoveDown]])", "test_cost": 1.0, "test_correct": 0, "train_cost": 1.0, "train_correct": 0, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 3, "no._explored_programs": 4951, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [14, 0]], "no._iterations": 15, "execution_time": 0.359337644, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 3, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.2], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.1], [4, 12.0], [4, 11.2], [5, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [9, 7.1], [9, 7.0], [9, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.3], [13, 3.2], [13, 3.1], [13, 2.2], [14, 2.1], [14, 1.3], [14, 1.2], [15, 1.1], [15, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.393972953, "best_program": "Program([[MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 3, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 8.2], [8, 8.1], [8, 7.2], [9, 7.1], [9, 6.3], [10, 6.2], [10, 6.1], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.2], [13, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [14, 1.2], [15, 1.1], [15, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.44187740799999997, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 3, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 16.1], [0, 16.0], [0, 15.1], [0, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.2], [6, 10.1], [6, 10.0], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.3], [12, 4.2], [12, 4.1], [12, 3.2], [13, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.443121818, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 3, "no._explored_programs": 8581, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.2], [8, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [25, 0]], "no._iterations": 26, "execution_time": 0.918700332, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 4, "no._explored_programs": 3961, "best_cost_per_iteration": [[0, 12.1], [0, 12.0], [0, 11.1], [0, 11.0], [1, 10.1], [2, 10.0], [2, 9.1], [3, 9.0], [3, 8.2], [3, 8.1], [4, 8.0], [4, 7.2], [4, 7.1], [5, 7.0], [5, 6.1], [6, 6.0], [6, 5.1], [7, 5.0], [7, 4.1], [8, 4.0], [8, 3.1], [9, 3.0], [9, 2.2], [10, 2.1], [10, 2.0], [10, 1.1], [11, 1.0], [11, 0]], "no._iterations": 12, "execution_time": 0.245620214, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 4, "no._explored_programs": 4291, "best_cost_per_iteration": [[0, 12.1], [0, 12.0], [0, 11.1], [0, 11.0], [1, 10.1], [2, 10.0], [2, 9.2], [2, 9.1], [3, 9.0], [3, 8.1], [4, 8.0], [4, 7.2], [4, 7.1], [5, 7.0], [5, 6.1], [6, 6.0], [6, 5.2], [7, 5.1], [7, 5.0], [7, 4.1], [8, 4.0], [8, 3.1], [9, 3.0], [9, 2.1], [10, 2.0], [11, 1.1], [12, 1.0], [12, 0]], "no._iterations": 13, "execution_time": 0.287023374, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 4, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [14, 2.1], [15, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.435728088, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 4, "no._explored_programs": 4621, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.320248724, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 4, "no._explored_programs": 5941, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.2], [1, 14.1], [2, 14.0], [2, 13.2], [2, 13.1], [3, 13.0], [3, 12.1], [4, 12.0], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.2], [10, 6.1], [10, 6.0], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [13, 3.1], [14, 3.0], [14, 2.1], [15, 2.0], [16, 1.2], [17, 1.1], [17, 0]], "no._iterations": 18, "execution_time": 0.493399639, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveRight], [MoveUp, Draw], [MoveUp, Draw], [MoveRight], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 5, "no._explored_programs": 5941, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 9.2], [8, 9.1], [8, 8.2], [9, 8.1], [9, 7.3], [10, 7.2], [10, 7.1], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.485086052, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 5, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [14, 2.1], [15, 2.0], [15, 1.2], [16, 1.1], [16, 1.0], [16, 0]], "no._iterations": 17, "execution_time": 0.43478228999999996, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 5, "no._explored_programs": 7261, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [6, 10.1], [7, 10.0], [7, 9.2], [8, 9.1], [8, 9.0], [8, 8.1], [9, 8.0], [9, 7.2], [10, 7.1], [10, 7.0], [15, 6.1], [16, 6.0], [16, 5.2], [17, 5.1], [17, 5.0], [17, 4.1], [18, 4.0], [18, 3.2], [19, 3.1], [19, 3.0], [19, 2.1], [20, 2.0], [20, 1.2], [21, 1.1], [21, 0]], "no._iterations": 22, "execution_time": 0.694850811, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], [MoveUp, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 5, "no._explored_programs": 6271, "best_cost_per_iteration": [[0, 19.3], [0, 19.2], [0, 18.3], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.2], [3, 16.1], [3, 15.3], [3, 15.1], [4, 15.0], [4, 14.2], [4, 14.1], [5, 14.0], [5, 13.2], [5, 13.1], [6, 13.0], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.2], [9, 10.1], [9, 9.2], [10, 9.1], [10, 8.3], [11, 8.2], [11, 8.1], [11, 7.3], [12, 7.2], [12, 7.1], [12, 6.2], [13, 6.1], [13, 6.0], [13, 5.1], [14, 5.0], [14, 4.1], [15, 4.0], [15, 3.2], [16, 3.1], [16, 3.0], [16, 2.3], [17, 2.2], [17, 2.1], [17, 1.2], [18, 1.1], [18, 0]], "no._iterations": 19, "execution_time": 0.5468614390000001, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 5, "no._explored_programs": 8251, "best_cost_per_iteration": [[0, 20.2], [0, 20.1], [0, 19.2], [0, 19.1], [1, 19.0], [1, 18.2], [1, 18.1], [2, 18.0], [2, 17.1], [3, 17.0], [3, 16.2], [4, 16.1], [4, 16.0], [4, 15.1], [5, 15.0], [5, 14.2], [5, 14.1], [6, 14.0], [6, 13.2], [6, 13.1], [7, 13.0], [7, 12.2], [8, 12.1], [8, 12.0], [8, 11.1], [9, 11.0], [9, 10.2], [10, 10.1], [10, 9.3], [10, 9.1], [11, 9.0], [11, 8.2], [12, 8.1], [12, 8.0], [12, 7.3], [13, 7.2], [13, 7.1], [13, 6.2], [14, 6.1], [14, 6.0], [14, 5.1], [15, 5.0], [15, 4.2], [15, 4.1], [16, 4.0], [16, 3.2], [17, 3.1], [17, 3.0], [17, 2.2], [18, 2.1], [18, 2.0], [23, 1.2], [24, 1.1], [24, 0]], "no._iterations": 25, "execution_time": 0.86966793, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 6, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.2], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.3], [6, 8.2], [6, 8.1], [6, 7.2], [7, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.409758685, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveRight, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 6, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.2], [5, 9.1], [6, 9.0], [6, 8.2], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.2], [10, 5.1], [10, 5.0], [10, 4.1], [11, 4.0], [11, 3.2], [11, 3.1], [12, 3.0], [12, 2.2], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.389779203, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 6, "no._explored_programs": 5941, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 9.2], [8, 9.1], [8, 8.2], [9, 8.1], [9, 7.3], [10, 7.2], [10, 7.1], [10, 6.2], [11, 6.1], [11, 6.0], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.487419758, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, MoveUp], [MoveUp, Draw], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 6, "no._explored_programs": 4621, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.324873831, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 6, "no._explored_programs": 6601, "best_cost_per_iteration": [[0, 20.2], [0, 20.1], [0, 19.2], [0, 19.1], [1, 19.0], [1, 18.2], [1, 18.1], [2, 18.0], [2, 17.2], [3, 17.1], [3, 16.3], [3, 16.1], [4, 16.0], [4, 15.2], [4, 15.1], [5, 15.0], [5, 14.2], [5, 14.1], [6, 14.0], [6, 13.1], [7, 13.0], [7, 12.2], [8, 12.1], [8, 12.0], [8, 11.1], [9, 11.0], [9, 10.2], [10, 10.1], [10, 10.0], [10, 9.1], [11, 9.0], [11, 8.2], [12, 8.1], [12, 7.3], [12, 7.1], [13, 7.0], [13, 6.2], [14, 6.1], [14, 5.3], [15, 5.2], [15, 5.1], [15, 4.2], [16, 4.1], [16, 3.2], [17, 3.1], [17, 2.3], [18, 2.2], [18, 2.1], [18, 1.3], [19, 1.2], [19, 1.1], [19, 0]], "no._iterations": 20, "execution_time": 0.58796176, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 7, "no._explored_programs": 6601, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [4, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.3], [9, 5.2], [9, 5.1], [9, 4.2], [10, 4.1], [10, 4.0], [10, 3.2], [11, 3.1], [11, 3.0], [11, 2.2], [12, 2.1], [12, 2.0], [16, 1.1], [17, 1.0], [19, 0]], "no._iterations": 20, "execution_time": 0.568385399, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveRight], [MoveDown, Draw], [MoveDown], [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 7, "no._explored_programs": 6271, "best_cost_per_iteration": [[0, 17.3], [0, 17.2], [0, 16.3], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.2], [7, 9.1], [8, 9.0], [8, 8.2], [9, 8.1], [9, 8.0], [9, 7.1], [10, 7.0], [10, 6.1], [11, 6.0], [11, 5.2], [12, 5.1], [12, 5.0], [12, 4.3], [13, 4.2], [13, 4.1], [13, 3.2], [14, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 2.0], [15, 1.3], [16, 1.2], [16, 1.1], [16, 1.0], [18, 0]], "no._iterations": 19, "execution_time": 0.53145162, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [MoveRight], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 7, "no._explored_programs": 7261, "best_cost_per_iteration": [[0, 16.2], [0, 16.1], [0, 15.2], [0, 15.1], [1, 15.0], [1, 14.1], [2, 14.0], [2, 13.1], [3, 13.0], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.2], [4, 11.1], [5, 11.0], [5, 10.1], [6, 10.0], [6, 9.2], [7, 9.1], [7, 8.2], [8, 8.1], [8, 7.2], [9, 7.1], [9, 6.3], [10, 6.2], [10, 6.1], [10, 5.2], [11, 5.1], [11, 5.0], [11, 4.1], [12, 4.0], [12, 3.1], [13, 3.0], [13, 2.1], [14, 2.0], [14, 1.2], [15, 1.1], [15, 1.0], [21, 0]], "no._iterations": 22, "execution_time": 0.689878235, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(AtBottom [MoveUp], [MoveLeft]), [MoveLeft], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 7, "no._explored_programs": 33331, "best_cost_per_iteration": [[0, 18.2], [0, 18.1], [0, 17.2], [0, 17.1], [1, 17.0], [1, 16.1], [2, 16.0], [2, 15.2], [3, 15.1], [3, 14.3], [3, 14.1], [4, 14.0], [4, 13.2], [4, 13.1], [5, 13.0], [5, 12.2], [5, 12.1], [6, 12.0], [6, 11.2], [7, 11.1], [7, 11.0], [7, 10.1], [8, 10.0], [8, 9.1], [9, 9.0], [9, 8.2], [9, 8.1], [10, 8.0], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 6.0], [12, 5.4], [13, 5.3], [13, 5.2], [13, 4.3], [13, 4.2], [14, 4.1], [14, 3.2], [15, 3.1], [15, 2.3], [16, 2.2], [16, 2.1], [16, 2.0]], "no._iterations": 100, "execution_time": 10.152448068, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [MoveUp], If(AtBottom [MoveRight] [])])", "test_cost": 2.0, "test_correct": 0, "train_cost": 2.0, "train_correct": 0, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 7, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 15.1], [0, 15.0], [0, 14.1], [0, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.2], [7, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.3], [12, 3.2], [12, 3.1], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.396470875, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveDown, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 8, "no._explored_programs": 5611, "best_cost_per_iteration": [[0, 17.1], [0, 17.0], [0, 16.1], [0, 16.0], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [6, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [8, 8.2], [8, 8.1], [9, 8.0], [9, 7.2], [9, 7.1], [10, 7.0], [10, 6.2], [10, 6.1], [11, 6.0], [11, 5.2], [11, 5.1], [12, 5.0], [12, 4.2], [13, 4.1], [13, 4.0], [13, 3.1], [14, 3.0], [14, 2.2], [15, 2.1], [15, 1.2], [16, 1.1], [16, 0]], "no._iterations": 17, "execution_time": 0.439000293, "best_program": "Program([[Draw, MoveDown], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveLeft, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 8, "no._explored_programs": 6601, "best_cost_per_iteration": [[0, 19.2], [0, 19.1], [0, 18.2], [0, 18.1], [1, 18.0], [1, 17.1], [2, 17.0], [2, 16.2], [2, 16.1], [3, 16.0], [3, 15.1], [4, 15.0], [4, 14.2], [5, 14.1], [5, 14.0], [5, 13.1], [6, 13.0], [6, 12.2], [6, 12.1], [7, 12.0], [7, 11.2], [7, 11.1], [8, 11.0], [8, 10.2], [9, 10.1], [9, 9.2], [10, 9.1], [10, 8.3], [11, 8.2], [11, 7.4], [11, 7.2], [12, 7.1], [12, 6.3], [12, 6.1], [13, 6.0], [13, 5.2], [13, 5.1], [14, 5.0], [14, 4.2], [15, 4.1], [15, 4.0], [15, 3.2], [16, 3.1], [16, 3.0], [16, 2.3], [17, 2.2], [17, 2.1], [17, 1.4], [18, 1.3], [18, 1.2], [18, 1.1], [19, 1.0], [19, 0]], "no._iterations": 20, "execution_time": 0.584811887, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveUp, Draw], LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 8, "no._explored_programs": 7261, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.2], [1, 15.1], [2, 15.0], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [6, 10.1], [7, 10.0], [7, 9.2], [8, 9.1], [8, 9.0], [8, 8.1], [9, 8.0], [9, 7.2], [10, 7.1], [10, 7.0], [15, 6.1], [16, 6.0], [16, 5.2], [17, 5.1], [17, 5.0], [17, 4.1], [18, 4.0], [18, 3.2], [19, 3.1], [19, 3.0], [19, 2.1], [20, 2.0], [20, 1.2], [21, 1.1], [21, 0]], "no._iterations": 22, "execution_time": 0.6926251, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, MoveUp], [MoveRight], [MoveUp, Draw], [MoveRight, Draw], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 8, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.2], [2, 12.1], [3, 12.0], [3, 11.2], [3, 11.1], [4, 11.0], [4, 10.2], [4, 10.1], [5, 10.0], [5, 9.2], [6, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.2], [9, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 3.0], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.409164757, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveLeft], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 8, "no._explored_programs": 7591, "best_cost_per_iteration": [[0, 16.1], [0, 16.0], [0, 15.1], [0, 15.0], [1, 14.1], [2, 14.0], [2, 13.2], [3, 13.1], [3, 12.2], [3, 12.1], [4, 12.0], [4, 11.1], [5, 11.0], [5, 10.2], [5, 10.1], [6, 10.0], [6, 9.2], [6, 9.1], [7, 9.0], [7, 8.1], [8, 8.0], [8, 7.2], [8, 7.1], [9, 7.0], [9, 6.2], [10, 6.1], [10, 5.3], [10, 5.2], [11, 5.1], [11, 4.3], [12, 4.2], [12, 4.1], [12, 3.3], [12, 3.2], [13, 3.1], [13, 3.0], [19, 2.1], [20, 2.0], [21, 1.2], [22, 1.1], [22, 0]], "no._iterations": 23, "execution_time": 0.753260543, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveLeft, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(AtTop [MoveDown], [MoveLeft]), [MoveLeft], [MoveDown, Draw], [MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 9, "no._explored_programs": 8581, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [4, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.3], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 2.3], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.3], [14, 1.2], [14, 1.1], [14, 1.0], [25, 0]], "no._iterations": 26, "execution_time": 0.9144270299999999, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [MoveUp], [MoveLeft], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 9, "no._explored_programs": 19141, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [2, 14.1], [3, 14.0], [3, 13.2], [4, 13.1], [4, 13.0], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.1], [7, 10.0], [8, 9.1], [9, 9.0], [9, 8.2], [9, 8.1], [10, 8.0], [10, 7.2], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 5.2], [12, 5.1], [13, 5.0], [13, 4.2], [13, 4.1], [14, 4.0], [14, 3.2], [15, 3.1], [15, 3.0], [15, 2.2], [16, 2.1], [16, 2.0], [56, 1.1], [57, 1.0], [57, 0]], "no._iterations": 58, "execution_time": 3.784550464, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], [MoveRight], [MoveUp, Draw], [MoveUp, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(AtRight [MoveLeft], [MoveDown]), LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveDown, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 9, "no._explored_programs": 5941, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [3, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [9, 8.1], [10, 8.0], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 5.3], [13, 5.2], [13, 5.1], [13, 4.2], [14, 4.1], [14, 4.0], [14, 3.1], [15, 3.0], [15, 2.1], [16, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.494818737, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveRight], [MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 9, "no._explored_programs": 4621, "best_cost_per_iteration": [[0, 13.1], [0, 13.0], [0, 12.1], [0, 12.0], [1, 11.1], [2, 11.0], [2, 10.1], [3, 10.0], [3, 9.2], [3, 9.1], [4, 9.0], [4, 8.1], [5, 8.0], [5, 7.2], [5, 7.1], [6, 7.0], [6, 6.1], [7, 6.0], [7, 5.2], [8, 5.1], [8, 5.0], [8, 4.1], [9, 4.0], [9, 3.1], [10, 3.0], [10, 2.1], [11, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.320286237, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 9, "no._explored_programs": 5281, "best_cost_per_iteration": [[0, 14.2], [0, 14.1], [0, 13.2], [0, 13.1], [1, 13.0], [1, 12.2], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.3], [6, 8.2], [6, 8.1], [6, 7.2], [7, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [10, 4.2], [11, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [15, 0]], "no._iterations": 16, "execution_time": 0.409593067, "best_program": "Program([[MoveRight, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveUp, Draw], [MoveRight, MoveDown], [MoveDown, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}], [{"complexity": 1, "task": 0, "trial": 10, "no._explored_programs": 7261, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.1], [2, 12.0], [2, 11.2], [2, 11.1], [3, 11.0], [3, 10.2], [4, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.1], [8, 6.0], [8, 5.2], [9, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.2], [11, 3.1], [12, 3.0], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.2], [14, 1.1], [14, 1.0], [21, 0]], "no._iterations": 22, "execution_time": 0.699877526, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], [MoveLeft, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], [MoveRight, Draw], [MoveDown, MoveLeft], [MoveDown, Draw], [MoveDown, Draw], [MoveRight, Draw], [MoveUp, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveRight], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 1, "trial": 10, "no._explored_programs": 5941, "best_cost_per_iteration": [[0, 17.2], [0, 17.1], [0, 16.2], [0, 16.1], [1, 16.0], [1, 15.1], [2, 15.0], [2, 14.2], [3, 14.1], [3, 14.0], [3, 13.1], [4, 13.0], [4, 12.2], [4, 12.1], [5, 12.0], [5, 11.2], [5, 11.1], [6, 11.0], [6, 10.2], [7, 10.1], [7, 10.0], [7, 9.1], [8, 9.0], [9, 8.1], [10, 8.0], [10, 7.1], [11, 7.0], [11, 6.2], [12, 6.1], [12, 5.3], [13, 5.2], [13, 5.1], [13, 4.2], [14, 4.1], [14, 4.0], [14, 3.1], [15, 3.0], [15, 2.1], [16, 2.0], [16, 1.1], [17, 1.0], [17, 0]], "no._iterations": 18, "execution_time": 0.488549711, "best_program": "Program([[MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveRight], [MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], [MoveLeft, Draw], [MoveUp, Draw], [MoveRight, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 2, "trial": 10, "no._explored_programs": 4951, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.2], [2, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [6, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 5.3], [8, 5.1], [9, 5.0], [10, 4.1], [11, 4.0], [11, 3.1], [12, 3.0], [12, 2.1], [13, 2.0], [13, 1.1], [14, 1.0], [14, 0]], "no._iterations": 15, "execution_time": 0.35778661500000003, "best_program": "Program([[Draw, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown], [MoveLeft, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 3, "trial": 10, "no._explored_programs": 8581, "best_cost_per_iteration": [[0, 15.2], [0, 15.1], [0, 14.2], [0, 14.1], [1, 14.0], [1, 13.1], [2, 13.0], [2, 12.1], [3, 12.0], [3, 11.2], [4, 11.1], [4, 11.0], [4, 10.1], [5, 10.0], [5, 9.1], [6, 9.0], [6, 8.1], [7, 8.0], [7, 7.1], [8, 7.0], [8, 6.3], [8, 6.1], [9, 6.0], [9, 5.1], [10, 5.0], [10, 4.2], [11, 4.1], [11, 3.2], [12, 3.1], [12, 2.3], [12, 2.2], [13, 2.1], [13, 2.0], [13, 1.3], [14, 1.2], [14, 1.1], [14, 1.0], [25, 0]], "no._iterations": 26, "execution_time": 0.912574843, "best_program": "Program([[MoveDown, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveRight, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveRight, Draw], LoopWhileThen(NotAtLeft [MoveLeft], [Draw]), LoopWhileThen(NotAtRight [MoveRight], [Draw]), LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [MoveUp], [MoveLeft], [MoveUp, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}, {"complexity": 1, "task": 4, "trial": 10, "no._explored_programs": 4621, "best_cost_per_iteration": [[0, 14.1], [0, 14.0], [0, 13.1], [0, 13.0], [1, 12.1], [2, 12.0], [2, 11.1], [3, 11.0], [3, 10.2], [3, 10.1], [4, 10.0], [4, 9.1], [5, 9.0], [5, 8.2], [5, 8.1], [6, 8.0], [6, 7.1], [7, 7.0], [7, 6.2], [8, 6.1], [8, 6.0], [8, 5.1], [9, 5.0], [9, 4.1], [10, 4.0], [10, 3.2], [11, 3.1], [11, 3.0], [11, 2.1], [12, 2.0], [12, 1.1], [13, 1.0], [13, 0]], "no._iterations": 14, "execution_time": 0.321808195, "best_program": "Program([[Draw, MoveDown], [MoveRight, Draw], [MoveDown, Draw], LoopWhileThen(NotAtBottom [MoveDown], [Draw]), [MoveUp, Draw], LoopWhileThen(NotAtRight [MoveRight], [Draw]), [MoveDown, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveDown, Draw], [MoveDown, Draw], [MoveDown, Draw], [MoveLeft, Draw], LoopWhileThen(NotAtTop [MoveUp], [Draw]), [MoveLeft, Draw]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1, "prune_count": 0}]]}