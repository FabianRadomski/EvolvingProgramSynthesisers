{"complexity": 2, "task": 0, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 5], [0, 3], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.010311999999999988, "best_program": "Program([[MoveUp, Grab], [MoveDown, Drop], [MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 1, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 6], [0, 4], [1, 2], [2, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.016276999999999986, "best_program": "Program([[MoveLeft, Grab], [MoveRight, Drop], [MoveLeft, MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 2, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 6], [0, 4], [1, 2], [2, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.01266299999999998, "best_program": "Program([[MoveUp, Grab], [MoveLeft, Drop], [MoveDown, MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 3, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 6], [0, 5], [0, 3], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.012159000000000031, "best_program": "Program([[MoveUp, MoveRight], [Grab, MoveDown], [Drop, MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 4, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 4], [0, 2], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.01075200000000004, "best_program": "Program([[Grab, MoveUp], [Drop, MoveRight], [MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 5, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 4], [0, 2], [1, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.015048000000000006, "best_program": "Program([[MoveUp, Drop], [MoveLeft, MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 6, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 5], [0, 3], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.012446000000000013, "best_program": "Program([[MoveRight, Grab], [MoveLeft, Drop], [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 7, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 5], [0, 3], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.012399000000000049, "best_program": "Program([[MoveRight, Grab], [MoveLeft, Drop], [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 8, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 4], [0, 3], [0, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.007340999999999986, "best_program": "Program([[MoveDown, MoveRight], [Drop, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 2, "task": 9, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 3], [0, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.007213999999999998, "best_program": "Program([[MoveRight, Drop], [MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 0, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 12], [0, 11], [0, 10], [0, 8], [1, 7], [2, 6], [2, 4], [3, 3], [4, 2], [4, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.02310300000000004, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [Grab, MoveRight], [MoveUp, MoveUp], [Drop, MoveDown], LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 1, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 9], [0, 8], [0, 7], [0, 5], [1, 4], [1, 2], [2, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.01875199999999999, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [Grab]), [MoveDown, MoveDown], [Drop, MoveRight], [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 2, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 6], [0, 5], [1, 3], [2, 2], [2, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.014523000000000008, "best_program": "Program([[Grab, MoveUp], [MoveUp, Drop], LoopWhileThen(NotAtBottom [MoveDown], [MoveRight])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 3, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 5], [0, 3], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.01912400000000003, "best_program": "Program([[MoveUp, Grab], [MoveUp, Drop], [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 4, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 10], [0, 9], [0, 7], [1, 6], [2, 4], [3, 3], [3, 2], [3, 0]], "no._iterations": 4, "execution_time": 0.016892000000000018, "best_program": "Program([[MoveDown, MoveRight], [Grab, MoveRight], [MoveDown, Drop], LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 5, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 2], [0, 1], [0, 0]], "no._iterations": 1, "execution_time": 0.006511999999999962, "best_program": "Program([[MoveLeft, MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 6, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 3], [0, 2], [0, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.01172899999999999, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 7, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 15], [0, 14], [0, 13], [0, 10], [1, 9], [2, 8], [2, 7], [2, 6], [3, 4], [4, 3], [4, 2], [4, 0]], "no._iterations": 5, "execution_time": 0.024643000000000026, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp]), [Grab, MoveRight], LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [MoveRight, Drop], LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 8, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 5], [0, 4], [0, 3], [0, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.015467999999999982, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveDown]), [Drop, MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 4, "task": 9, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 4], [0, 3], [0, 2], [1, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.007203000000000015, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), [MoveLeft, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 0, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 11], [0, 9], [1, 8], [1, 7], [1, 3], [2, 2], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.022480999999999973, "best_program": "Program([[MoveUp, Grab], LoopWhileThen(NotAtRight [MoveRight], [MoveDown]), [Drop, MoveUp], [MoveUp, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 1, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 10], [0, 8], [1, 7], [1, 6], [1, 4], [2, 3], [3, 2], [3, 1], [4, 0]], "no._iterations": 5, "execution_time": 0.02152799999999999, "best_program": "Program([[MoveDown, Grab], LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), [Drop, MoveDown], [MoveRight, MoveDown], [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 2, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 13], [0, 12], [0, 11], [1, 10], [1, 8], [2, 7], [3, 6], [3, 5], [3, 4], [3, 2], [4, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.032611999999999974, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveDown]), [MoveLeft, MoveDown], [Grab, MoveLeft], LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp]), [Drop, MoveRight], [MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 3, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 22], [0, 21], [0, 20], [0, 17], [1, 16], [1, 15], [1, 13], [2, 12], [2, 11], [2, 10], [2, 9], [3, 8], [3, 7], [4, 5], [5, 4], [5, 3], [5, 2], [6, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.030573000000000017, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), LoopWhileThen(NotAtLeft [MoveLeft], [Grab]), LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [MoveRight, MoveRight], [MoveUp, Drop], LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [MoveDown, MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 4, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 10], [0, 9], [0, 8], [0, 5], [1, 4], [2, 3], [2, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.020257999999999998, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), [Grab, MoveRight], [MoveDown, MoveDown], [Drop, MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 5, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 8], [0, 7], [0, 6], [0, 4], [0, 2], [1, 1], [1, 0]], "no._iterations": 2, "execution_time": 0.018735, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [MoveRight, MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 6, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 9], [0, 8], [0, 7], [1, 5], [2, 4], [2, 2], [3, 1], [4, 0]], "no._iterations": 5, "execution_time": 0.027529000000000026, "best_program": "Program([[MoveDown, MoveRight], [MoveDown, Grab], [MoveDown, MoveDown], [Drop, MoveLeft], [MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 7, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 17], [0, 16], [0, 15], [0, 12], [1, 11], [1, 9], [2, 8], [2, 7], [3, 6], [3, 5], [4, 3], [5, 2], [5, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.044576000000000005, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), LoopWhileThen(NotAtBottom [MoveDown], [Grab]), LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), [MoveLeft, MoveUp], [MoveLeft, Drop], LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), [MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 8, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 9], [0, 8], [0, 6], [1, 4], [2, 3], [3, 2], [3, 1], [4, 0]], "no._iterations": 5, "execution_time": 0.02779499999999996, "best_program": "Program([[MoveDown, MoveLeft], [Grab, MoveDown], [Drop, MoveUp], LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 6, "task": 9, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 8], [0, 6], [1, 5], [1, 4], [2, 2], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.01868900000000001, "best_program": "Program([[MoveRight, Grab], [MoveLeft, MoveLeft], [MoveDown, Drop], [MoveLeft, MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 0, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 18], [0, 17], [0, 15], [1, 14], [2, 13], [2, 12], [2, 11], [2, 10], [3, 9], [3, 7], [4, 6], [5, 5], [5, 4], [5, 0]], "no._iterations": 6, "execution_time": 0.030647999999999953, "best_program": "Program([[MoveUp, MoveRight], [Grab, MoveRight], LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveUp, MoveUp], [Drop, MoveLeft], LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 1, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 17], [0, 16], [0, 15], [0, 11], [1, 10], [2, 9], [2, 8], [3, 7], [3, 5], [4, 4], [5, 3], [5, 2], [6, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.033054999999999946, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp]), [Grab, MoveDown], LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveLeft, MoveLeft], [Drop, MoveLeft], LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), [MoveDown, MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 2, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 22], [0, 21], [0, 20], [0, 15], [1, 13], [2, 12], [2, 11], [2, 8], [2, 7], [3, 5], [4, 4], [4, 3], [4, 2], [5, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.025527999999999995, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveDown]), [MoveDown, Grab], LoopWhileThen(NotAtTop [MoveUp], [MoveLeft]), [MoveDown, Drop], LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [MoveRight, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 3, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 29], [0, 28], [0, 27], [1, 26], [1, 25], [2, 23], [3, 22], [3, 21], [3, 18], [3, 17], [4, 16], [4, 15], [4, 14], [4, 12], [5, 11], [6, 10], [6, 9], [6, 6], [6, 4], [7, 3], [7, 2], [7, 0]], "no._iterations": 8, "execution_time": 0.03126200000000001, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveDown]), [MoveDown, MoveDown], [MoveRight, Grab], LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [Drop, MoveUp], LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), LoopWhileThen(NotAtTop [MoveUp], [MoveDown])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 4, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 13], [0, 12], [0, 11], [1, 10], [1, 9], [2, 8], [2, 6], [3, 4], [4, 3], [5, 2], [5, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.03076699999999999, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [MoveDown, MoveRight], [MoveDown, MoveDown], [Grab, MoveDown], [Drop, MoveLeft], LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight]), [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 5, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 29], [0, 28], [0, 27], [0, 22], [1, 21], [1, 20], [2, 18], [3, 17], [3, 16], [3, 14], [3, 12], [4, 11], [4, 10], [5, 8], [6, 7], [6, 6], [6, 5], [6, 4], [7, 3], [7, 2], [7, 1], [8, 0]], "no._iterations": 9, "execution_time": 0.027448000000000028, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [MoveUp, Grab], LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), [MoveUp, MoveUp], [MoveLeft, Drop], LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight]), [MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 6, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 20], [0, 19], [0, 18], [0, 16], [1, 15], [1, 14], [2, 13], [2, 11], [3, 10], [4, 9], [4, 8], [4, 7], [4, 5], [5, 4], [6, 3], [6, 2], [6, 1], [7, 0]], "no._iterations": 8, "execution_time": 0.03294400000000003, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), [MoveUp, MoveUp], [MoveLeft, MoveLeft], [Grab, MoveDown], LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight]), [Drop, MoveUp], LoopWhileThen(NotAtTop [MoveUp], [MoveDown]), [MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 7, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 24], [0, 23], [0, 22], [0, 21], [0, 19], [0, 17], [1, 16], [1, 14], [2, 13], [3, 12], [3, 11], [3, 8], [3, 7], [3, 6], [4, 4], [5, 3], [5, 2], [5, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.03187500000000004, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveDown, MoveDown], [Grab, MoveRight], LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [MoveRight, Drop], LoopWhileThen(NotAtRight [MoveRight], [MoveDown]), [MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 8, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 10], [0, 9], [0, 8], [1, 6], [2, 5], [2, 4], [2, 2], [3, 1], [4, 0]], "no._iterations": 5, "execution_time": 0.035372000000000015, "best_program": "Program([[MoveUp, MoveUp], [MoveRight, Grab], LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight]), [Drop, MoveLeft], [MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 8, "task": 9, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 10], [0, 9], [0, 8], [0, 6], [0, 3], [1, 2], [2, 0]], "no._iterations": 3, "execution_time": 0.011441999999999952, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [Grab, MoveRight], [MoveDown, Drop]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 0, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 24], [0, 23], [0, 22], [0, 17], [1, 16], [1, 15], [1, 12], [2, 11], [3, 10], [3, 9], [3, 8], [4, 7], [4, 6], [5, 4], [6, 3], [6, 2], [7, 1], [7, 0]], "no._iterations": 8, "execution_time": 0.026553999999999967, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [Grab, MoveUp], LoopWhileThen(NotAtTop [MoveUp], [MoveDown]), [MoveDown, MoveDown], [MoveRight, Drop], LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveLeft, MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 1, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 13], [0, 12], [0, 11], [0, 5], [0, 3], [1, 2], [1, 1], [2, 0]], "no._iterations": 3, "execution_time": 0.009707000000000021, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 2, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 18], [0, 17], [0, 16], [1, 15], [1, 13], [2, 12], [3, 11], [3, 10], [4, 9], [4, 7], [5, 6], [6, 5], [6, 4], [6, 2], [7, 1], [7, 0]], "no._iterations": 8, "execution_time": 0.049226999999999965, "best_program": "Program([[MoveRight, MoveRight], [MoveRight, MoveRight], [Grab, MoveDown], LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight]), [MoveDown, MoveRight], [Drop, MoveRight], LoopWhileThen(NotAtBottom [MoveDown], [MoveRight]), [MoveUp, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 3, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 20], [0, 19], [0, 18], [0, 14], [0, 12], [1, 11], [1, 10], [2, 9], [2, 7], [3, 6], [4, 5], [4, 4], [4, 2], [4, 0]], "no._iterations": 5, "execution_time": 0.016099000000000085, "best_program": "Program([LoopWhileThen(NotAtBottom [MoveDown], [Grab]), [MoveUp, MoveUp], [MoveUp, MoveUp], [Drop, MoveDown], LoopWhileThen(NotAtLeft [MoveLeft], [MoveRight])])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 4, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 24], [0, 23], [0, 22], [0, 20], [1, 19], [2, 18], [2, 17], [2, 16], [2, 14], [3, 13], [3, 11], [4, 10], [5, 9], [5, 8], [5, 2], [6, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.021897999999999973, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveRight]), [Grab, MoveDown], LoopWhileThen(NotAtBottom [MoveDown], [MoveUp]), [MoveLeft, MoveUp], [Drop, MoveUp], LoopWhileThen(NotAtRight [MoveRight], [MoveUp]), [MoveLeft, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 5, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 14], [0, 13], [0, 12], [1, 11], [1, 10], [2, 8], [3, 6], [4, 5], [4, 4], [4, 2], [5, 1], [5, 0]], "no._iterations": 6, "execution_time": 0.019275000000000042, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveDown]), [MoveDown, MoveDown], [MoveDown, Grab], [MoveDown, Drop], LoopWhileThen(NotAtLeft [MoveLeft], [MoveUp]), [MoveRight, MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 6, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 8], [0, 6], [1, 5], [1, 4], [2, 2], [3, 1], [3, 0]], "no._iterations": 4, "execution_time": 0.013661000000000034, "best_program": "Program([[MoveDown, Grab], [MoveUp, MoveLeft], [MoveUp, Drop], [MoveRight, MoveUp]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 7, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 18], [0, 17], [0, 16], [0, 15], [1, 13], [2, 12], [2, 11], [3, 9], [4, 8], [4, 7], [4, 6], [4, 4], [5, 3], [5, 2], [6, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.027861000000000025, "best_program": "Program([LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveLeft, Grab], [MoveLeft, MoveLeft], [MoveLeft, Drop], LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveDown, MoveDown], [MoveDown, MoveDown]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 8, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 22], [0, 21], [0, 20], [0, 14], [1, 12], [2, 11], [2, 10], [2, 7], [3, 6], [3, 4], [4, 3], [5, 2], [5, 1], [6, 0]], "no._iterations": 7, "execution_time": 0.02251000000000003, "best_program": "Program([LoopWhileThen(NotAtLeft [MoveLeft], [MoveDown]), [MoveRight, Grab], LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveDown, MoveLeft], [Drop, MoveUp], [MoveUp, MoveUp], [MoveLeft]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
{"complexity": 10, "task": 9, "trial": 1, "no._explored_programs": 1, "best_cost_per_iteration": [[0, 33], [0, 32], [0, 31], [0, 29], [0, 25], [1, 24], [1, 23], [1, 21], [2, 19], [3, 18], [3, 17], [3, 12], [3, 10], [4, 9], [4, 8], [5, 6], [6, 5], [6, 4], [7, 3], [7, 2], [8, 1], [8, 0]], "no._iterations": 9, "execution_time": 0.027264000000000066, "best_program": "Program([LoopWhileThen(NotAtTop [MoveUp], [MoveDown]), LoopWhileThen(NotAtRight [MoveRight], [MoveLeft]), [MoveLeft, Grab], LoopWhileThen(NotAtBottom [MoveDown], [MoveLeft]), [MoveLeft, MoveLeft], [MoveLeft, Drop], [MoveUp, MoveUp], [MoveRight, MoveUp], [MoveRight, MoveRight]])", "test_cost": 0, "test_correct": 1, "train_cost": 0, "train_correct": 1, "test_total": 1}
