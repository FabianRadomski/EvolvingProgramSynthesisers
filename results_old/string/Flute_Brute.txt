{"file": "strings/1-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05834, "program_length": 2, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 1, 0, 3, 3, 4, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 5, 3, 4, 3], "program": "Program([Drop, MoveRight])", "cost_per_iteration": [[14, 0]], "number_of_iterations": 15}
{"file": "strings/1-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.054652000000000034, "program_length": 6, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([LoopWhile(IsSpace [If(IsLetter [MoveRight] [MakeLowercase])]), Drop, MakeLowercase])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/1-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06449499999999997, "program_length": 5, "number_of_explored_programs": 18, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 1, 0, 3, 4, 3, 0, 1, 2, 0, 0, 2], "explored_per_size_sequence": [0, 3, 5, 6, 4], "program": "Program([Drop, LoopWhile(IsSpace [If(AtEnd [MakeLowercase] [MakeUppercase])])])", "cost_per_iteration": [[18, 0]], "number_of_iterations": 19}
{"file": "strings/1-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06446799999999997, "program_length": 5, "number_of_explored_programs": 13, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 2, 0, 3, 1, 0, 1, 2, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 5, 4, 2], "program": "Program([LoopWhile(IsLowercase [If(NotAtEnd [MakeLowercase] [Drop])]), Drop])", "cost_per_iteration": [[12, 0]], "number_of_iterations": 13}
{"file": "strings/1-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05582300000000001, "program_length": 10, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 2, 0, 1, 2], "program": "Program([LoopWhile(IsUppercase [If(IsSpace [MoveRight] [Drop])]), Drop, MakeLowercase, LoopWhile(IsSpace [If(IsNotNumber [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/1-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06655599999999995, "program_length": 6, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(IsLowercase [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/1-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04587899999999995, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 1, 1], "explored_per_size_sequence": [0, 1, 2, 0, 1], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/1-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.049714999999999954, "program_length": 2, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 2, 2, 1], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/1-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06341400000000008, "program_length": 2, "number_of_explored_programs": 18, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 0, 5, 1, 4, 2, 1, 2, 1], "explored_per_size_sequence": [0, 4, 4, 4, 6], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[17, 0]], "number_of_iterations": 18}
{"file": "strings/1-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.039695, "program_length": 19, "number_of_explored_programs": 75, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 1, 0, 1, 2, 5, 2, 3, 1, 3, 4, 0, 1, 1, 2, 3, 2, 1, 2, 6, 5, 5, 2, 4, 4, 4, 1, 5, 2, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 3, 1, 2, 6, 6, 4, 2, 2, 4, 8, 11, 9, 5, 5, 6, 1], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveLeft])]), Drop, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), MakeUppercase, Drop, Drop, MakeUppercase, MakeLowercase, Drop, MakeLowercase, Drop, MoveRight])", "cost_per_iteration": [[5, 9], [15, 8], [22, 7], [24, 5], [34, 1], [75, 0]], "number_of_iterations": 76}
{"file": "strings/1-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.136964, "program_length": 30, "number_of_explored_programs": 145, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.01, "explored_per_size_tokens": [0, 2, 3, 0, 4, 5, 4, 5, 2, 8, 6, 3, 2, 5, 5, 2, 1, 1, 7, 6, 7, 5, 12, 6, 9, 8, 4, 5, 3, 4, 4, 2, 1, 1, 2, 1], "explored_per_size_sequence": [0, 3, 8, 7, 9, 4, 10, 10, 12, 19, 26, 15, 14, 5, 2, 1], "program": "Program([Drop, MoveRight, Drop, LoopWhile(IsLowercase [If(IsNumber [Drop] [MoveRight])]), Drop, LoopWhile(IsLowercase [If(AtStart [MakeUppercase] [MoveLeft])]), Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MoveLeft])]), LoopWhile(IsUppercase [If(NotAtStart [MoveLeft] [Drop])]), Drop, LoopWhile(IsSpace [If(IsNotUppercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsNumber [If(IsNotNumber [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[0, 10], [9, 9], [24, 8], [31, 6], [40, 4], [61, 1], [144, 0]], "number_of_iterations": 145}
{"file": "strings/1-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.15248, "program_length": 34, "number_of_explored_programs": 205, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.025, "explored_per_size_tokens": [0, 0, 1, 0, 3, 0, 3, 1, 4, 3, 4, 4, 1, 2, 7, 2, 6, 6, 9, 4, 8, 12, 11, 9, 7, 14, 6, 8, 8, 14, 13, 6, 7, 3, 3, 2, 6, 2, 2, 0, 2, 1, 0, 1], "explored_per_size_sequence": [0, 2, 4, 5, 4, 9, 9, 7, 9, 12, 16, 32, 18, 20, 22, 14, 9, 10, 3], "program": "Program([LoopWhile(IsNotSpace [MoveRight, MakeLowercase]), Drop, MoveLeft, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [MoveRight])]), MakeUppercase, LoopWhile(IsUppercase [If(IsSpace [MoveLeft] [Drop])]), MakeUppercase, Drop, Drop, MoveLeft, LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [Drop])]), Drop, MoveLeft, Drop, LoopWhile(IsUppercase [If(NotAtEnd [MoveRight] [MakeLowercase])]), MakeLowercase])", "cost_per_iteration": [[7, 10], [9, 9], [12, 8], [39, 5], [50, 4], [51, 3], [90, 2], [141, 1], [206, 0]], "number_of_iterations": 207}
{"file": "strings/1-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.113593999999999, "program_length": 22, "number_of_explored_programs": 169, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.015, "explored_per_size_tokens": [0, 1, 0, 0, 0, 1, 2, 1, 6, 5, 8, 11, 9, 14, 10, 11, 11, 11, 6, 12, 13, 9, 11, 6, 3, 2, 2, 1, 1, 1, 1], "explored_per_size_sequence": [0, 1, 0, 1, 3, 8, 9, 21, 30, 26, 31, 20, 11, 4, 4], "program": "Program([MakeUppercase, Drop, Drop, Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeUppercase])]), MakeLowercase, Drop, LoopWhile(IsSpace [If(IsNotNumber [Drop] [MoveRight])]), LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [MakeUppercase])]), Drop, Drop, Drop])", "cost_per_iteration": [[1, 10], [15, 8], [87, 6], [106, 5], [110, 1], [168, 0]], "number_of_iterations": 169}
{"file": "strings/1-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.071112, "program_length": 27, "number_of_explored_programs": 151, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.012, "explored_per_size_tokens": [0, 2, 0, 0, 2, 1, 0, 0, 2, 3, 2, 5, 3, 2, 4, 7, 5, 5, 3, 5, 4, 8, 2, 10, 3, 8, 2, 5, 7, 8, 3, 5, 4, 10, 2, 3, 5, 5, 3, 1, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 0, 3, 13, 14, 8, 17, 15, 17, 19, 20, 11, 4, 5], "program": "Program([LoopWhile(IsLetter [If(AtEnd [MoveLeft] [MoveRight])]), Drop, MakeLowercase, LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), Drop, MakeLowercase, MoveLeft, MoveLeft, MakeLowercase, LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [MakeUppercase])]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotLetter [Drop] [MoveLeft])])])", "cost_per_iteration": [[0, 6], [25, 5], [26, 4], [54, 3], [70, 2], [102, 1], [150, 0]], "number_of_iterations": 151}
{"file": "strings/1-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.129564, "program_length": 23, "number_of_explored_programs": 134, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.01, "explored_per_size_tokens": [0, 1, 3, 2, 0, 1, 4, 2, 3, 1, 2, 5, 6, 2, 7, 3, 6, 6, 8, 7, 5, 6, 5, 8, 3, 3, 2, 7, 8, 2, 5, 4, 1, 1, 1, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 1, 4, 6, 6, 6, 3, 2, 6, 4, 15, 22, 18, 20, 10, 7, 4], "program": "Program([Drop, Drop, LoopWhile(IsUppercase [If(IsNumber [MakeUppercase] [MakeLowercase])]), Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MoveLeft])]), Drop, LoopWhile(IsSpace [If(IsUppercase [Drop] [MakeLowercase])]), Drop, LoopWhile(IsUppercase [If(IsNotNumber [MoveLeft] [MakeLowercase])]), Drop, Drop])", "cost_per_iteration": [[4, 9], [18, 8], [29, 7], [30, 6], [33, 4], [123, 1], [133, 0]], "number_of_iterations": 134}
{"file": "strings/1-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.116311000000001, "program_length": 29, "number_of_explored_programs": 103, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 2, 3, 1, 5, 4, 3, 2, 5, 2, 4, 0, 3, 0, 5, 3, 3, 0, 2, 4, 3, 4, 2, 4, 2, 6, 3, 4, 7, 6, 3, 1, 2, 0, 0, 2, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 10, 5, 8, 5, 4, 3, 5, 4, 2, 5, 4, 8, 15, 12, 3, 3, 3, 1], "program": "Program([Drop, Drop, MoveRight, LoopWhile(NotAtStart [Drop, MoveLeft]), MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsSpace [MakeLowercase] [Drop])]), LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsNumber [If(IsLowercase [MakeUppercase] [Drop])]), Drop, Drop, MakeLowercase, Drop, LoopWhile(IsLowercase [If(AtStart [MoveRight] [MakeLowercase])]), Drop])", "cost_per_iteration": [[2, 10], [21, 9], [34, 8], [41, 4], [53, 3], [66, 2], [75, 1], [104, 0]], "number_of_iterations": 105}
{"file": "strings/1-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.100870999999998, "program_length": 26, "number_of_explored_programs": 175, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.011, "explored_per_size_tokens": [0, 1, 1, 0, 4, 9, 2, 3, 9, 5, 6, 5, 4, 6, 8, 5, 5, 3, 3, 1, 6, 8, 7, 7, 3, 9, 10, 5, 8, 5, 5, 5, 3, 3, 0, 4, 1, 0, 1, 2, 1, 0, 2], "explored_per_size_sequence": [0, 3, 12, 7, 11, 15, 10, 11, 9, 15, 6, 3, 4, 6, 11, 9, 11, 12, 10, 9, 1], "program": "Program([LoopWhile(IsUppercase [If(NotAtStart [MakeLowercase] [Drop])]), LoopWhile(IsNotSpace [MoveRight, Drop]), MakeLowercase, Drop, MoveLeft, Drop, LoopWhile(IsLowercase [If(IsNotLetter [MoveRight] [Drop])]), MakeUppercase, Drop, MakeUppercase, MakeLowercase, MoveLeft, Drop, MakeUppercase, MoveLeft, MakeLowercase, Drop, MakeUppercase])", "cost_per_iteration": [[5, 10], [17, 9], [34, 8], [58, 7], [86, 5], [87, 4], [106, 3], [108, 2], [147, 1], [176, 0]], "number_of_iterations": 177}
{"file": "strings/1-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.10648, "program_length": 24, "number_of_explored_programs": 216, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.011, "explored_per_size_tokens": [0, 1, 2, 2, 3, 2, 2, 1, 1, 5, 5, 4, 4, 8, 10, 12, 9, 7, 16, 10, 15, 10, 13, 12, 12, 11, 8, 8, 6, 5, 3, 0, 4, 1, 0, 1, 0, 1, 0, 1, 1], "explored_per_size_sequence": [0, 2, 5, 7, 7, 4, 6, 12, 20, 35, 30, 23, 17, 13, 8, 14, 9, 3, 1], "program": "Program([MakeLowercase, Drop, LoopWhile(IsNumber [If(NotAtEnd [Drop] [MoveRight])]), Drop, Drop, Drop, LoopWhile(IsLowercase [Drop, Drop]), LoopWhile(AtEnd [If(IsNotLowercase [MoveRight] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MoveLeft])]), LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [Drop])])])", "cost_per_iteration": [[2, 10], [16, 9], [22, 8], [24, 7], [49, 6], [51, 4], [162, 3], [170, 2], [179, 1], [216, 0]], "number_of_iterations": 217}
{"file": "strings/2-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06434300000000004, "program_length": 5, "number_of_explored_programs": 13, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 4, 1, 1, 3, 0, 1, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 1, 5, 4, 3], "program": "Program([Drop, MakeLowercase, LoopWhile(NotAtStart [MakeUppercase, Drop])])", "cost_per_iteration": [[12, 0]], "number_of_iterations": 13}
{"file": "strings/2-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05116900000000002, "program_length": 1, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 2, 0, 2, 2], "program": "Program([Drop])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/2-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.088638, "program_length": 9, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 1, 1, 1, 0, 0, 2], "explored_per_size_sequence": [0, 2, 1, 3], "program": "Program([LoopWhile(IsNumber [If(IsNotUppercase [MakeLowercase] [MakeUppercase])]), Drop, LoopWhile(AtEnd [If(IsNotUppercase [MoveLeft] [MakeLowercase])])])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/2-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05874299999999999, "program_length": 1, "number_of_explored_programs": 28, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 2, 0, 5, 6, 2, 1, 4, 2, 0, 2, 0, 1, 0, 1], "explored_per_size_sequence": [0, 6, 13, 6, 3], "program": "Program([Drop])", "cost_per_iteration": [[27, 0]], "number_of_iterations": 28}
{"file": "strings/2-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.059057999999999944, "program_length": 6, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 2, 1], "program": "Program([LoopWhile(AtEnd [If(IsNotLowercase [Drop] [MakeLowercase])]), MakeLowercase, Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/2-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06581099999999995, "program_length": 6, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 3, 0, 2, 0, 1, 0, 1, 0, 1], "explored_per_size_sequence": [0, 4, 1, 2, 2], "program": "Program([MakeLowercase, Drop, LoopWhile(IsNumber [If(NotAtEnd [MakeUppercase] [MoveLeft])])])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/2-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.07760800000000001, "program_length": 13, "number_of_explored_programs": 41, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 6, 1, 7, 3, 2, 1, 6, 3, 3, 1, 3, 3], "explored_per_size_sequence": [0, 9, 15, 8, 9], "program": "Program([LoopWhile(IsLowercase [If(AtEnd [MakeUppercase] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotUppercase [MakeUppercase] [Drop])]), Drop, LoopWhile(IsSpace [If(IsNotNumber [Drop] [MoveLeft])])])", "cost_per_iteration": [[40, 0]], "number_of_iterations": 41}
{"file": "strings/2-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.062132999999999994, "program_length": 1, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 1, 2, 0, 1, 2, 1, 0, 1, 0, 2], "explored_per_size_sequence": [0, 2, 4, 3, 2], "program": "Program([Drop])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/2-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05557000000000001, "program_length": 6, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 3, 2, 1, 2, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 2, 3, 3, 3], "program": "Program([Drop, MoveRight, LoopWhile(IsSpace [If(NotAtEnd [MoveRight] [MakeLowercase])])])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/2-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.570758, "program_length": 26, "number_of_explored_programs": 330, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.017, "time_cost": 0.039, "explored_per_size_tokens": [0, 0, 0, 1, 3, 1, 3, 0, 4, 6, 1, 5, 3, 0, 1, 3, 6, 11, 4, 7, 5, 2, 6, 8, 5, 10, 10, 9, 15, 8, 12, 6, 15, 14, 14, 14, 10, 12, 12, 15, 16, 12, 7, 4, 7, 8, 5, 2, 3, 3, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 2, 3, 4, 8, 10, 10, 23, 4, 17, 5, 20, 19, 36, 45, 50, 32, 29, 9, 4], "program": "Program([MakeUppercase, Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [Drop])]), MakeUppercase, Drop, LoopWhile(IsNotLowercase [MoveLeft, MakeLowercase]), LoopWhile(IsSpace [If(IsNumber [MoveLeft] [MakeLowercase])]), LoopWhile(IsLowercase [If(NotAtStart [MoveLeft] [Drop])]), MakeLowercase, LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [Drop])])])", "cost_per_iteration": [[4, 10], [7, 9], [16, 5], [39, 4], [84, 3], [91, 2], [120, 1], [330, 0]], "number_of_iterations": 331}
{"file": "strings/2-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.148637, "program_length": 16, "number_of_explored_programs": 58, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.007, "explored_per_size_tokens": [0, 0, 1, 2, 0, 3, 3, 3, 1, 5, 3, 3, 1, 2, 6, 0, 4, 1, 4, 2, 1, 1, 3, 0, 0, 1, 3, 3, 0, 0, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 2, 9, 7, 11, 7, 3, 7, 5, 3, 3, 1], "program": "Program([LoopWhile(IsLetter [Drop, MakeUppercase]), MakeUppercase, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), LoopWhile(AtStart [If(IsNotUppercase [Drop] [MoveRight])]), LoopWhile(AtStart [If(IsNotNumber [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[1, 10], [10, 9], [11, 8], [14, 5], [44, 4], [54, 1], [58, 0]], "number_of_iterations": 59}
{"file": "strings/2-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.097686999999999, "program_length": 24, "number_of_explored_programs": 68, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.007, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 0, 1, 2, 5, 7, 2, 1, 3, 3, 6, 4, 4, 3, 4, 3, 1, 4, 1, 3, 2, 0, 1, 3], "explored_per_size_sequence": [0, 0, 0, 0, 2, 0, 4, 11, 10, 14, 7, 6, 6, 6, 1, 1], "program": "Program([Drop, LoopWhile(IsNumber [If(IsSpace [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(AtStart [MoveRight] [Drop])]), LoopWhile(IsNotUppercase [MakeLowercase, Drop]), LoopWhile(IsUppercase [If(IsNotLowercase [MoveLeft] [Drop])]), LoopWhile(IsSpace [If(IsNotNumber [Drop] [MakeUppercase])])])", "cost_per_iteration": [[0, 10], [1, 9], [4, 8], [7, 7], [13, 4.5], [16, 4], [21, 2], [41, 1], [67, 0]], "number_of_iterations": 68}
{"file": "strings/2-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.423922, "program_length": 9, "number_of_explored_programs": 22, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 2, 3, 1, 2, 3, 2, 2, 1, 0, 1, 0, 1, 1, 1], "explored_per_size_sequence": [0, 3, 2, 8, 5, 2, 1, 1], "program": "Program([LoopWhile(IsUppercase [If(IsLowercase [MoveLeft] [Drop])]), LoopWhile(AtStart [If(IsNotUppercase [Drop] [MoveRight])]), MakeLowercase])", "cost_per_iteration": [[2, 10], [17, 9], [22, 0]], "number_of_iterations": 23}
{"file": "strings/2-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.467972, "program_length": 25, "number_of_explored_programs": 399, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.016, "time_cost": 0.04, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 2, 1, 3, 9, 14, 16, 8, 20, 12, 14, 25, 35, 29, 23, 33, 28, 24, 27, 13, 16, 12, 9, 7, 5, 2, 1, 1, 2, 0, 2, 1], "explored_per_size_sequence": [0, 0, 1, 2, 1, 3, 5, 2, 11, 17, 19, 40, 54, 66, 50, 56, 39, 19, 14], "program": "Program([MoveRight, MoveRight, LoopWhile(AtEnd [If(IsSpace [MakeLowercase] [MoveRight])]), LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), MoveLeft, MoveLeft, Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveRight])]), Drop, MakeLowercase, Drop, Drop, Drop, MoveRight])", "cost_per_iteration": [[0, 10], [6, 9], [15, 8], [35, 7], [53, 3], [77, 2], [95, 1], [400, 0]], "number_of_iterations": 401}
{"file": "strings/2-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.098047999999999, "program_length": 37, "number_of_explored_programs": 92, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.008, "explored_per_size_tokens": [0, 3, 0, 4, 6, 2, 6, 5, 7, 7, 4, 6, 4, 7, 3, 2, 1, 0, 0, 3, 3, 2, 0, 2, 6, 1, 0, 2, 1, 2, 0, 0, 0, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 9, 2, 14, 14, 13, 5, 6, 4, 3, 2, 1, 3, 6, 3, 3, 2, 2], "program": "Program([Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsSpace [MoveLeft] [Drop])]), LoopWhile(IsLetter [If(AtEnd [Drop] [MoveRight])]), MakeUppercase, LoopWhile(AtEnd [If(IsNotUppercase [Drop] [MoveLeft])]), Drop, LoopWhile(AtEnd [If(IsNotUppercase [MoveLeft] [Drop])]), Drop, MakeLowercase, Drop, MakeLowercase, LoopWhile(IsNumber [MoveLeft, MoveRight]), LoopWhile(AtEnd [If(IsLowercase [Drop] [MakeLowercase])]), LoopWhile(AtEnd [If(IsNotLowercase [MakeLowercase] [Drop])]), Drop])", "cost_per_iteration": [[14, 10], [28, 9], [60, 8], [71, 6], [73, 3], [80, 2], [91, 1], [92, 0]], "number_of_iterations": 93}
{"file": "strings/2-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.130621000000001, "program_length": 8, "number_of_explored_programs": 277, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.021, "explored_per_size_tokens": [0, 4, 7, 3, 31, 32, 20, 27, 22, 33, 33, 6, 25, 12, 3, 6, 12, 0, 1], "explored_per_size_sequence": [0, 19, 66, 62, 77, 53], "program": "Program([LoopWhile(IsUppercase [If(AtStart [Drop] [MakeUppercase])]), LoopWhile(IsNotUppercase [MakeLowercase, Drop]), MoveRight])", "cost_per_iteration": [[0, 4], [303, 0]], "number_of_iterations": 304}
{"file": "strings/2-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.170427, "program_length": 10, "number_of_explored_programs": 61, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.004, "explored_per_size_tokens": [0, 3, 0, 0, 1, 1, 2, 2, 1, 5, 4, 7, 5, 6, 5, 5, 3, 2, 4, 1, 1, 2, 0, 1], "explored_per_size_sequence": [0, 3, 0, 3, 5, 4, 8, 12, 10, 11, 4, 1], "program": "Program([MakeUppercase, MakeUppercase, Drop, Drop, MakeUppercase, Drop, MakeLowercase, LoopWhile(IsNotUppercase [MakeLowercase, Drop])])", "cost_per_iteration": [[0, 10], [5, 9], [19, 1], [62, 0]], "number_of_iterations": 63}
{"file": "strings/2-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.12698, "program_length": 19, "number_of_explored_programs": 125, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.011, "explored_per_size_tokens": [0, 1, 1, 1, 3, 4, 4, 6, 2, 5, 7, 2, 3, 5, 3, 7, 9, 3, 4, 8, 8, 2, 4, 4, 3, 3, 2, 5, 6, 3, 2, 2, 2, 1], "explored_per_size_sequence": [0, 1, 4, 6, 11, 8, 5, 5, 4, 11, 17, 16, 20, 11, 4, 2], "program": "Program([Drop, Drop, LoopWhile(IsSpace [Drop, MoveRight]), Drop, MakeLowercase, MoveLeft, MakeLowercase, MakeLowercase, LoopWhile(IsLowercase [If(IsNumber [MakeUppercase] [Drop])]), Drop, MakeUppercase, Drop, Drop, Drop])", "cost_per_iteration": [[0, 9], [10, 8], [32, 7], [44, 4], [48, 3], [114, 2], [125, 0]], "number_of_iterations": 126}
{"file": "strings/3-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.07132499999999997, "program_length": 8, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 1, 2, 0, 1, 0, 1, 1], "explored_per_size_sequence": [0, 3, 0, 4], "program": "Program([LoopWhile(IsSpace [If(NotAtEnd [Drop] [MoveLeft])]), LoopWhile(IsLetter [MakeLowercase, MoveLeft]), Drop])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/3-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0777770000000001, "program_length": 2, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 1, 1, 3, 0, 1, 0, 1], "explored_per_size_sequence": [0, 2, 4, 0, 2], "program": "Program([MakeLowercase, Drop])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/3-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.076982, "program_length": 1, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 0, 1], "explored_per_size_sequence": [0, 1, 2], "program": "Program([Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/3-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.07117099999999998, "program_length": 9, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 0, 2], "explored_per_size_sequence": [0, 0, 0, 2], "program": "Program([LoopWhile(IsSpace [If(IsNotSpace [MoveLeft] [MakeLowercase])]), Drop, LoopWhile(IsSpace [If(AtStart [MakeUppercase] [MoveRight])])])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/3-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.09107399999999999, "program_length": 9, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 2, 1], "program": "Program([LoopWhile(IsNumber [If(IsNotLetter [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsNumber [If(AtStart [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/3-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.08304800000000001, "program_length": 9, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([Drop, LoopWhile(IsSpace [If(IsNotSpace [MakeLowercase] [Drop])]), LoopWhile(IsNumber [If(IsNotLetter [MoveLeft] [MakeLowercase])])])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/3-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06923699999999999, "program_length": 5, "number_of_explored_programs": 18, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 2, 2, 2, 2, 0, 1, 3, 3, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 5, 3, 4, 6], "program": "Program([LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[19, 0]], "number_of_iterations": 20}
{"file": "strings/3-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06996499999999994, "program_length": 1, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 5, 2, 1, 0, 0, 1, 2, 3], "explored_per_size_sequence": [0, 5, 1, 4, 5], "program": "Program([Drop])", "cost_per_iteration": [[14, 0]], "number_of_iterations": 15}
{"file": "strings/3-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.08258200000000004, "program_length": 3, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 1, 1, 1, 1, 0, 0, 4, 1, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 2, 4, 5], "program": "Program([Drop, MoveRight, MakeLowercase])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/3-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.183436, "program_length": 16, "number_of_explored_programs": 104, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.011, "explored_per_size_tokens": [0, 0, 1, 1, 6, 7, 4, 6, 5, 6, 5, 6, 9, 7, 11, 4, 10, 3, 2, 3, 1, 4, 1, 0, 2], "explored_per_size_sequence": [0, 3, 5, 9, 11, 14, 17, 16, 17, 6, 6], "program": "Program([Drop, Drop, Drop, LoopWhile(IsLetter [If(AtEnd [MoveLeft] [Drop])]), LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveRight])]), Drop, LoopWhile(AtStart [If(IsNotUppercase [Drop] [MoveRight])])])", "cost_per_iteration": [[18, 9], [19, 8], [30, 6], [34, 5], [46, 4], [100, 3], [103, 2], [104, 0]], "number_of_iterations": 105}
{"file": "strings/3-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.055531000000002, "program_length": 32, "number_of_explored_programs": 109, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.012, "explored_per_size_tokens": [0, 0, 3, 0, 2, 0, 5, 3, 3, 2, 6, 3, 2, 3, 7, 2, 6, 5, 2, 8, 3, 5, 3, 4, 2, 4, 4, 3, 4, 2, 3, 1, 2, 3, 2, 1, 0, 1], "explored_per_size_sequence": [0, 1, 4, 3, 6, 2, 9, 12, 18, 7, 12, 7, 8, 9, 3, 6, 2], "program": "Program([Drop, Drop, Drop, Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeUppercase])]), LoopWhile(IsUppercase [If(IsNumber [MakeLowercase] [MakeUppercase])]), Drop, LoopWhile(IsNumber [If(NotAtEnd [MoveLeft] [MoveRight])]), LoopWhile(IsNotLetter [Drop, MoveRight]), LoopWhile(IsNumber [If(IsNotNumber [Drop] [MoveLeft])]), MakeUppercase, Drop, LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MoveLeft])]), Drop, Drop])", "cost_per_iteration": [[6, 9], [9, 7], [20, 4], [23, 3], [37, 2], [83, 1], [108, 0]], "number_of_iterations": 109}
{"file": "strings/3-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.203213000000002, "program_length": 32, "number_of_explored_programs": 263, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.037, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 8, 1, 6, 3, 5, 6, 3, 6, 13, 12, 14, 18, 18, 18, 13, 20, 13, 10, 9, 15, 6, 11, 7, 7, 4, 1, 4, 3, 4, 2], "explored_per_size_sequence": [0, 0, 1, 1, 3, 2, 4, 13, 15, 39, 30, 46, 34, 33, 20, 17, 5], "program": "Program([Drop, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeUppercase])]), MoveRight, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MoveRight])]), Drop, MakeLowercase, Drop, LoopWhile(IsLowercase [Drop, MakeUppercase]), LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [MakeUppercase])]), Drop, MakeUppercase, LoopWhile(IsSpace [If(IsNumber [Drop] [MoveLeft])]), MoveLeft, Drop, LoopWhile(IsSpace [If(NotAtStart [MakeUppercase] [Drop])])])", "cost_per_iteration": [[0, 10], [2, 8], [24, 7], [32, 6], [36, 4], [65, 3], [140, 2], [184, 1], [262, 0]], "number_of_iterations": 263}
{"file": "strings/3-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.124296000000001, "program_length": 23, "number_of_explored_programs": 57, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.009, "explored_per_size_tokens": [0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 2, 1, 1, 3, 1, 3, 4, 5, 4, 5, 5, 1, 5, 4, 1, 2, 0, 3, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 2, 2, 3, 1, 6, 9, 9, 11, 8, 4, 2], "program": "Program([Drop, LoopWhile(IsNumber [If(AtEnd [Drop] [MoveRight])]), Drop, LoopWhile(AtStart [If(NotAtEnd [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(IsNumber [MakeLowercase] [Drop])]), MoveLeft, LoopWhile(IsSpace [If(AtEnd [MakeLowercase] [Drop])]), Drop, Drop, MakeUppercase, Drop])", "cost_per_iteration": [[1, 9], [2, 8], [21, 4], [26, 3], [27, 2], [56, 0]], "number_of_iterations": 57}
{"file": "strings/3-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.125683999999996, "program_length": 41, "number_of_explored_programs": 183, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.024, "explored_per_size_tokens": [0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 2, 0, 2, 2, 1, 2, 0, 1, 0, 0, 2, 2, 2, 4, 0, 6, 1, 4, 1, 2, 8, 2, 6, 6, 4, 7, 10, 9, 7, 10, 10, 13, 8, 8, 9, 6, 7, 4, 4, 1, 0, 3, 1, 0, 2], "explored_per_size_sequence": [0, 0, 3, 1, 4, 1, 2, 1, 1, 2, 0, 5, 1, 9, 3, 2, 1, 4, 7, 3, 4, 10, 8, 22, 20, 31, 21, 11, 6], "program": "Program([LoopWhile(IsLowercase [If(IsSpace [MakeLowercase] [MoveRight])]), Drop, MakeUppercase, MakeLowercase, Drop, Drop, Drop, Drop, MakeUppercase, MakeLowercase, Drop, MakeLowercase, MakeLowercase, MakeUppercase, Drop, LoopWhile(IsUppercase [If(AtStart [MoveRight] [MakeUppercase])]), Drop, MakeUppercase, MakeUppercase, Drop, Drop, MakeLowercase, LoopWhile(AtEnd [If(NotAtStart [MoveLeft] [Drop])]), LoopWhile(IsNumber [If(IsNotSpace [MoveRight] [MakeUppercase])]), Drop, LoopWhile(AtEnd [If(IsUppercase [MoveLeft] [MakeLowercase])])])", "cost_per_iteration": [[2, 10], [9, 9], [11, 8], [17, 7], [33, 6], [37, 5], [50, 4], [60, 3], [63, 2], [138, 1], [182, 0]], "number_of_iterations": 183}
{"file": "strings/3-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.047049000000005, "program_length": 36, "number_of_explored_programs": 82, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.014, "explored_per_size_tokens": [0, 1, 0, 0, 0, 4, 1, 3, 1, 1, 0, 1, 3, 0, 2, 0, 1, 1, 1, 2, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 5, 0, 0, 3, 1, 2, 2, 6, 5, 3, 2, 4, 7, 4, 1, 5, 4, 0, 2], "explored_per_size_sequence": [0, 1, 3, 2, 4, 5, 2, 1, 4, 0, 3, 1, 0, 2, 3, 1, 4, 10, 10, 14, 8, 3, 1], "program": "Program([Drop, Drop, MakeLowercase, MoveRight, LoopWhile(IsLetter [If(AtStart [MakeUppercase] [Drop])]), Drop, Drop, LoopWhile(AtEnd [If(IsLetter [MoveRight] [MakeUppercase])]), MakeUppercase, LoopWhile(IsSpace [If(IsLowercase [MoveRight] [MoveLeft])]), Drop, MoveLeft, MakeUppercase, LoopWhile(AtEnd [If(IsLowercase [MoveLeft] [Drop])]), LoopWhile(IsUppercase [If(IsNotNumber [MakeLowercase] [MoveLeft])]), Drop, Drop, LoopWhile(IsNumber [If(AtEnd [MoveLeft] [MoveRight])])])", "cost_per_iteration": [[3, 10], [9, 9], [20, 8], [23, 7], [27, 6], [29, 5], [31, 4], [42, 1], [81, 0]], "number_of_iterations": 82}
{"file": "strings/3-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.161865000000002, "program_length": 30, "number_of_explored_programs": 341, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.014, "time_cost": 0.041, "explored_per_size_tokens": [0, 3, 3, 2, 7, 12, 6, 5, 8, 6, 8, 3, 15, 16, 9, 2, 10, 4, 8, 5, 6, 17, 8, 8, 7, 15, 14, 18, 18, 14, 10, 10, 16, 11, 10, 6, 14, 2, 1, 2, 0, 1, 0, 1], "explored_per_size_sequence": [0, 9, 23, 19, 37, 18, 17, 24, 18, 13, 24, 40, 32, 31, 22, 9, 5], "program": "Program([LoopWhile(IsNumber [If(IsNotLowercase [MakeLowercase] [MoveRight])]), Drop, Drop, Drop, LoopWhile(IsNumber [If(IsNotLowercase [MakeLowercase] [MoveLeft])]), LoopWhile(AtStart [If(IsLetter [Drop] [MoveRight])]), MoveRight, MoveRight, LoopWhile(AtEnd [If(IsNotSpace [MakeLowercase] [Drop])]), LoopWhile(NotAtStart [MoveLeft, Drop]), MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[18, 10], [27, 9], [102, 8], [129, 7], [137, 6], [165, 5], [166, 4], [219, 3], [221, 1], [344, 0]], "number_of_iterations": 345}
{"file": "strings/3-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.467272999999999, "program_length": 27, "number_of_explored_programs": 178, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.02, "explored_per_size_tokens": [0, 0, 3, 1, 2, 0, 3, 3, 10, 8, 10, 5, 10, 10, 15, 7, 13, 11, 6, 8, 7, 10, 4, 7, 4, 3, 9, 2, 1, 1, 3, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 5, 8, 12, 39, 27, 22, 15, 12, 12, 8, 11, 3, 3, 1], "program": "Program([LoopWhile(AtEnd [MoveRight, MakeUppercase]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveRight])]), MoveRight, LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [Drop])]), Drop, LoopWhile(IsUppercase [Drop, MakeUppercase]), Drop, MakeLowercase, Drop, Drop, MoveLeft, LoopWhile(AtStart [If(IsSpace [MoveRight] [MoveLeft])]), MoveLeft, Drop])", "cost_per_iteration": [[2, 9], [20, 7], [29, 4], [117, 3], [137, 2], [156, 1], [179, 0]], "number_of_iterations": 180}
{"file": "strings/3-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.175969000000002, "program_length": 23, "number_of_explored_programs": 287, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.041, "explored_per_size_tokens": [0, 0, 0, 0, 1, 1, 2, 2, 1, 1, 1, 2, 3, 2, 5, 6, 3, 4, 3, 4, 7, 9, 6, 15, 12, 9, 15, 13, 15, 9, 13, 18, 11, 13, 15, 12, 11, 9, 13, 3, 2, 5, 1, 1, 2, 3, 2, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 3, 1, 3, 4, 4, 1, 7, 5, 12, 16, 19, 25, 30, 42, 30, 33, 33, 11, 6], "program": "Program([MoveRight, MoveRight, LoopWhile(IsLowercase [If(IsSpace [MakeLowercase] [MoveLeft])]), Drop, MoveLeft, MoveLeft, LoopWhile(IsLetter [If(IsSpace [MoveRight] [Drop])]), Drop, MakeLowercase, Drop, Drop, MakeLowercase, LoopWhile(IsNumber [If(IsNotLetter [MoveLeft] [MakeUppercase])]), Drop])", "cost_per_iteration": [[4, 10], [5, 9], [14, 8], [23, 7], [27, 6], [35, 5], [38, 3], [40, 2], [43, 1], [289, 0]], "number_of_iterations": 290}
{"file": "strings/4-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.07788300000000004, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 0, 1], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/4-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.08901000000000003, "program_length": 2, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 1], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/4-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10044399999999998, "program_length": 3, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 3, 2, 1], "program": "Program([MakeLowercase, Drop, MoveRight])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/4-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.106267, "program_length": 6, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 3, 1, 0, 0, 1, 3, 1, 1, 2, 2, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 5, 5], "program": "Program([MakeUppercase, LoopWhile(IsSpace [If(IsNotLowercase [MoveRight] [MoveLeft])]), Drop])", "cost_per_iteration": [[16, 0]], "number_of_iterations": 17}
{"file": "strings/4-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10824999999999996, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 0, 1, 1], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/4-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10493700000000006, "program_length": 1, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 1, 2], "program": "Program([Drop])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/4-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10600599999999993, "program_length": 9, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 0, 1, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 1, 2, 1, 1], "program": "Program([Drop, LoopWhile(AtEnd [If(IsUppercase [MoveLeft] [Drop])]), LoopWhile(AtEnd [If(IsNotLetter [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/4-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10965599999999998, "program_length": 5, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 2, 1, 1, 1, 1, 0, 3], "explored_per_size_sequence": [0, 0, 4, 1, 4], "program": "Program([Drop, LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [Drop])])])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/4-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10531100000000004, "program_length": 7, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 3, 1, 2], "program": "Program([MakeUppercase, MakeLowercase, LoopWhile(IsLowercase [If(IsNotLowercase [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/4-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.164673000000004, "program_length": 29, "number_of_explored_programs": 186, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.03, "explored_per_size_tokens": [0, 2, 1, 0, 3, 3, 1, 0, 1, 4, 2, 1, 4, 1, 4, 1, 2, 4, 5, 1, 3, 9, 7, 5, 2, 5, 2, 7, 12, 11, 13, 9, 10, 12, 4, 9, 4, 6, 4, 6, 1, 1, 0, 4], "explored_per_size_sequence": [0, 4, 4, 0, 4, 3, 7, 0, 3, 5, 7, 8, 8, 16, 12, 30, 22, 22, 11, 11, 9], "program": "Program([Drop, MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), Drop, MoveRight, Drop, MakeLowercase, Drop, MakeLowercase, LoopWhile(AtEnd [If(IsNumber [Drop] [MakeUppercase])]), Drop, Drop, MakeLowercase, MoveLeft, LoopWhile(AtEnd [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(IsLowercase [If(IsSpace [MoveLeft] [Drop])]), Drop])", "cost_per_iteration": [[7, 10], [11, 9], [13, 8], [28, 7], [29, 5], [38, 4], [73, 2], [82, 1], [185, 0]], "number_of_iterations": 186}
{"file": "strings/4-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.460571999999999, "program_length": 14, "number_of_explored_programs": 88, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.012, "explored_per_size_tokens": [0, 0, 1, 3, 5, 3, 6, 6, 6, 2, 8, 7, 7, 5, 6, 5, 3, 4, 3, 2, 2, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 2, 5, 12, 15, 14, 9, 18, 8, 3, 2], "program": "Program([Drop, LoopWhile(IsLowercase [Drop, Drop]), LoopWhile(IsNotLowercase [MakeUppercase, Drop]), Drop, Drop, MakeUppercase, MakeUppercase, MakeUppercase, Drop, MakeUppercase])", "cost_per_iteration": [[13, 10], [17, 9], [43, 3], [64, 2], [88, 0]], "number_of_iterations": 89}
{"file": "strings/4-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.121226999999998, "program_length": 45, "number_of_explored_programs": 160, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.019, "explored_per_size_tokens": [0, 2, 2, 2, 1, 4, 8, 7, 5, 10, 10, 5, 7, 0, 1, 8, 3, 4, 2, 8, 3, 2, 3, 6, 8, 5, 5, 2, 3, 5, 3, 1, 2, 1, 4, 1, 3, 1, 2, 0, 2, 1, 0, 2, 1, 3, 0, 0, 0, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 2, 6, 13, 15, 15, 8, 16, 10, 9, 12, 13, 6, 9, 8, 2, 6, 3, 3, 2, 0, 2], "program": "Program([MakeUppercase, Drop, Drop, MakeUppercase, MakeUppercase, Drop, LoopWhile(IsLowercase [If(IsSpace [MoveLeft] [Drop])]), LoopWhile(IsNumber [If(IsLetter [MoveLeft] [MoveRight])]), LoopWhile(AtEnd [If(IsLowercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsNumber [If(AtStart [MakeUppercase] [MakeLowercase])]), LoopWhile(IsLetter [If(NotAtStart [MakeUppercase] [Drop])]), Drop, Drop, Drop, LoopWhile(AtEnd [If(IsNotLetter [Drop] [MakeUppercase])]), LoopWhile(IsLetter [If(IsNotSpace [MoveRight] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsSpace [MoveRight] [MakeUppercase])]), LoopWhile(IsSpace [If(NotAtStart [MoveRight] [Drop])])])", "cost_per_iteration": [[0, 10], [14, 9], [16, 8], [69, 7], [78, 5], [85, 4], [94, 3], [135, 2], [153, 1], [161, 0]], "number_of_iterations": 162}
{"file": "strings/4-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.098216, "program_length": 18, "number_of_explored_programs": 306, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.011, "time_cost": 0.04, "explored_per_size_tokens": [0, 0, 2, 0, 1, 1, 0, 2, 5, 6, 10, 5, 12, 12, 16, 15, 19, 26, 21, 29, 22, 19, 9, 13, 18, 10, 9, 5, 10, 4, 3, 2], "explored_per_size_sequence": [0, 1, 4, 7, 21, 27, 46, 41, 37, 46, 37, 23, 15, 1], "program": "Program([LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeUppercase])]), LoopWhile(IsNotSpace [Drop, MoveRight]), Drop, MoveLeft, LoopWhile(IsLetter [Drop, Drop]), LoopWhile(IsLowercase [If(IsLetter [MakeUppercase] [MoveLeft])]), Drop, MakeUppercase])", "cost_per_iteration": [[2, 10], [12, 9], [31, 4], [41, 3], [65, 2], [67, 1], [305, 0]], "number_of_iterations": 306}
{"file": "strings/4-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.493116999999998, "program_length": 36, "number_of_explored_programs": 268, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.016, "time_cost": 0.257, "explored_per_size_tokens": [0, 1, 0, 1, 1, 0, 1, 1, 0, 2, 2, 2, 4, 6, 5, 2, 5, 14, 14, 7, 21, 13, 17, 12, 23, 16, 18, 17, 10, 5, 9, 9, 10, 3, 4, 3, 4, 2, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 1, 0, 2, 4, 5, 9, 10, 24, 39, 34, 43, 42, 24, 15, 11, 4, 0, 0, 1], "program": "Program([Drop, MoveRight, Drop, MakeUppercase, Drop, LoopWhile(IsLetter [If(AtStart [MakeUppercase] [Drop])]), Drop, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeLowercase])]), MakeUppercase, Drop, LoopWhile(AtStart [If(NotAtEnd [MoveLeft] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotNumber [MoveLeft] [Drop])]), LoopWhile(IsUppercase [If(IsNotLowercase [MoveLeft] [MoveRight])]), LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [Drop])]), LoopWhile(AtStart [If(IsNotLetter [MakeLowercase] [Drop])])])", "cost_per_iteration": [[4, 9], [21, 8], [31, 7], [51, 6], [57, 5], [109, 4], [116, 3], [145, 2], [172, 1], [267, 0]], "number_of_iterations": 268}
{"file": "strings/4-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.102133000000002, "program_length": 19, "number_of_explored_programs": 98, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.019, "explored_per_size_tokens": [0, 0, 0, 2, 2, 3, 3, 3, 3, 2, 2, 4, 3, 1, 3, 6, 6, 1, 3, 6, 3, 4, 5, 6, 4, 2, 6, 2, 2, 3, 4, 2, 0, 0, 1, 1], "explored_per_size_sequence": [0, 3, 4, 7, 9, 5, 4, 2, 7, 7, 5, 4, 4, 10, 11, 5, 7, 2, 2], "program": "Program([MakeLowercase, MakeLowercase, MakeUppercase, Drop, MoveRight, Drop, Drop, MoveLeft, MakeLowercase, LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), MoveLeft, MakeUppercase])", "cost_per_iteration": [[16, 9], [18, 8], [25, 7], [33, 4], [61, 3], [97, 0]], "number_of_iterations": 98}
{"file": "strings/4-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.357050000000001, "program_length": 35, "number_of_explored_programs": 169, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.031, "explored_per_size_tokens": [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 3, 1, 1, 4, 2, 1, 3, 5, 3, 1, 5, 7, 6, 3, 5, 3, 4, 4, 4, 4, 4, 4, 3, 0, 3, 3, 3, 6, 2, 2, 4, 2, 9, 7, 8, 9, 6, 1, 6, 2, 4, 1, 4, 1, 0, 2], "explored_per_size_sequence": [0, 0, 2, 0, 3, 3, 2, 7, 6, 10, 4, 6, 10, 6, 7, 7, 3, 3, 4, 13, 15, 7, 13, 17, 7, 9, 5], "program": "Program([LoopWhile(IsNumber [If(IsUppercase [MoveLeft] [MakeLowercase])]), Drop, Drop, LoopWhile(IsLowercase [If(IsLetter [MoveRight] [MoveLeft])]), LoopWhile(IsSpace [If(AtEnd [MoveLeft] [Drop])]), MoveRight, LoopWhile(AtEnd [If(IsNotSpace [MakeUppercase] [MoveLeft])]), MoveLeft, MakeLowercase, Drop, Drop, Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MakeUppercase])]), MakeLowercase, MakeLowercase, Drop, MakeUppercase, MoveRight])", "cost_per_iteration": [[1, 10], [4, 9], [12, 8], [33, 7], [35, 5], [76, 3], [81, 2], [101, 1], [170, 0]], "number_of_iterations": 171}
{"file": "strings/4-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.373361000000003, "program_length": 23, "number_of_explored_programs": 41, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.009, "explored_per_size_tokens": [0, 1, 0, 0, 0, 1, 2, 2, 5, 2, 1, 0, 0, 1, 0, 1, 2, 0, 0, 0, 0, 1, 2, 3, 0, 1, 1, 2, 1, 0, 1, 1, 3, 1, 3, 1, 0, 1, 1], "explored_per_size_sequence": [0, 1, 1, 2, 4, 4, 2, 0, 1, 1, 0, 4, 2, 2, 1, 5, 3, 2, 4, 2], "program": "Program([Drop, LoopWhile(IsSpace [If(IsNumber [MoveLeft] [Drop])]), Drop, MakeUppercase, MakeLowercase, Drop, Drop, LoopWhile(IsLetter [Drop, MakeUppercase]), Drop, LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), Drop])", "cost_per_iteration": [[3, 10], [8, 9], [12, 8], [15, 4], [16, 3], [23, 2], [31, 1], [41, 0]], "number_of_iterations": 42}
{"file": "strings/4-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.21049, "program_length": 35, "number_of_explored_programs": 61, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.006, "explored_per_size_tokens": [0, 0, 1, 2, 0, 3, 4, 2, 6, 3, 3, 2, 4, 2, 0, 2, 3, 3, 4, 0, 1, 2, 3, 1, 3, 2, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], "explored_per_size_sequence": [0, 1, 7, 9, 2, 5, 6, 4, 3, 1, 1, 2, 2, 4, 6, 4, 2, 1, 1], "program": "Program([MoveRight, Drop, Drop, MoveLeft, MakeUppercase, MoveRight, LoopWhile(IsLowercase [Drop, MakeLowercase]), MoveLeft, Drop, LoopWhile(IsNumber [If(IsUppercase [MakeUppercase] [Drop])]), MakeUppercase, Drop, LoopWhile(IsUppercase [If(AtStart [MakeUppercase] [Drop])]), LoopWhile(IsLowercase [If(IsSpace [MakeLowercase] [Drop])]), LoopWhile(IsLetter [If(IsNotLowercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotNumber [MakeUppercase] [MakeLowercase])]), MakeLowercase, Drop])", "cost_per_iteration": [[3, 10], [27, 9], [32, 8], [37, 7], [41, 6], [42, 5], [48, 4], [56, 3], [57, 1], [60, 0]], "number_of_iterations": 61}
{"file": "strings/5-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.12920799999999988, "program_length": 5, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 1, 2], "explored_per_size_sequence": [0, 0, 3], "program": "Program([LoopWhile(IsUppercase [If(IsLetter [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/5-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.11206399999999994, "program_length": 1, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 1, 0, 2, 0, 0, 2, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 4, 2, 2], "program": "Program([Drop])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/5-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.09542699999999993, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 2, 1], "explored_per_size_sequence": [0, 3, 1], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/5-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10144500000000001, "program_length": 1, "number_of_explored_programs": 19, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 1, 3, 1, 1, 3, 1, 1, 0, 1, 2, 1, 1, 0, 1], "explored_per_size_sequence": [0, 3, 2, 8, 6], "program": "Program([Drop])", "cost_per_iteration": [[18, 0]], "number_of_iterations": 19}
{"file": "strings/5-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13125900000000001, "program_length": 3, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 3, 1], "program": "Program([MakeUppercase, Drop, MoveRight])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/5-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.11729600000000007, "program_length": 9, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 1, 1, 0, 1, 0, 2], "explored_per_size_sequence": [0, 1, 1, 2, 1], "program": "Program([Drop, LoopWhile(IsSpace [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(IsNumber [If(IsNotSpace [Drop] [MakeUppercase])])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/5-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10510099999999989, "program_length": 5, "number_of_explored_programs": 13, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 0, 3, 1, 1, 1, 0, 1, 1, 0, 2, 1], "explored_per_size_sequence": [0, 3, 3, 1, 6], "program": "Program([LoopWhile(IsSpace [If(NotAtStart [MakeUppercase] [MoveLeft])]), Drop])", "cost_per_iteration": [[12, 0]], "number_of_iterations": 13}
{"file": "strings/5-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10303899999999999, "program_length": 2, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 1, 0, 1], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/5-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.11859699999999995, "program_length": 3, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 1, 2], "program": "Program([Drop, MoveRight, MoveRight])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/5-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.427464, "program_length": 20, "number_of_explored_programs": 232, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.042, "explored_per_size_tokens": [0, 1, 0, 3, 3, 4, 3, 3, 3, 3, 7, 10, 3, 5, 3, 5, 12, 12, 8, 14, 6, 13, 18, 9, 8, 7, 13, 5, 7, 6, 8, 3, 7, 5, 0, 2, 2, 6, 0, 0, 1, 0, 3, 0, 0, 1], "explored_per_size_sequence": [0, 1, 2, 5, 10, 4, 3, 10, 14, 9, 29, 22, 25, 19, 17, 23, 17, 12, 5, 5], "program": "Program([Drop, MoveRight, Drop, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeLowercase])]), MoveLeft, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [MoveRight])]), Drop])", "cost_per_iteration": [[9, 10], [13, 9], [28, 8], [29, 5], [34, 4], [38, 3], [61, 2], [80, 1], [232, 0]], "number_of_iterations": 233}
{"file": "strings/5-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.199088999999994, "program_length": 33, "number_of_explored_programs": 124, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.026, "explored_per_size_tokens": [0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 2, 4, 1, 0, 0, 2, 2, 5, 3, 4, 2, 2, 4, 3, 8, 9, 10, 7, 8, 4, 6, 5, 8, 3, 4, 1, 4, 2, 0, 1, 0, 1, 0, 2, 2, 1], "explored_per_size_sequence": [0, 1, 2, 1, 1, 3, 3, 1, 3, 13, 15, 23, 18, 19, 10, 5, 5, 0, 1], "program": "Program([MoveRight, MakeLowercase, MoveLeft, LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsNumber [MoveLeft] [Drop])]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [MoveLeft])]), Drop, MakeLowercase, LoopWhile(IsLetter [If(AtEnd [MoveRight] [Drop])]), Drop, LoopWhile(IsLetter [If(IsNotLowercase [MoveRight] [Drop])]), MakeLowercase, Drop, MakeUppercase, LoopWhile(IsSpace [If(IsLowercase [MoveLeft] [MakeLowercase])])])", "cost_per_iteration": [[4, 9], [10, 8], [20, 4], [35, 3], [115, 2], [123, 0]], "number_of_iterations": 124}
{"file": "strings/5-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.411538, "program_length": 31, "number_of_explored_programs": 788, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.031, "time_cost": 0.158, "explored_per_size_tokens": [0, 2, 0, 0, 2, 2, 4, 9, 18, 30, 23, 25, 54, 45, 50, 57, 48, 50, 46, 43, 41, 27, 32, 28, 33, 22, 16, 10, 9, 3, 5, 9, 3, 9, 9, 5, 3, 5, 3, 2, 2, 2, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 9, 30, 47, 83, 104, 129, 104, 100, 71, 35, 35, 17, 11, 6, 2], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), MoveRight, Drop, LoopWhile(AtEnd [If(IsNotNumber [MoveRight] [MakeLowercase])]), LoopWhile(IsLetter [If(IsSpace [MoveLeft] [Drop])]), Drop, LoopWhile(AtStart [If(IsNumber [MoveRight] [MoveLeft])]), Drop, LoopWhile(AtStart [If(IsNotLowercase [MakeUppercase] [MoveLeft])]), LoopWhile(IsLetter [Drop, MoveLeft]), LoopWhile(IsNotLetter [MakeLowercase, Drop]), MakeUppercase])", "cost_per_iteration": [[1, 10], [14, 5.4], [21, 5.2], [28, 4.8], [47, 4.6], [349, 4.4], [641, 4.2], [690, 4], [694, 3], [697, 2], [738, 1], [798, 0]], "number_of_iterations": 799}
{"file": "strings/5-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.188423, "program_length": 22, "number_of_explored_programs": 119, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.013, "explored_per_size_tokens": [0, 1, 2, 0, 0, 2, 5, 0, 3, 2, 9, 11, 10, 5, 9, 10, 4, 5, 8, 6, 5, 4, 8, 1, 2, 0, 4, 2, 0, 1], "explored_per_size_sequence": [0, 1, 4, 5, 12, 21, 17, 22, 10, 13, 7, 7], "program": "Program([LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsNumber [MoveLeft] [Drop])]), LoopWhile(IsSpace [MoveLeft, MakeUppercase]), MoveRight, Drop, Drop, MoveLeft, Drop, MoveRight])", "cost_per_iteration": [[4, 9], [7, 8], [11, 7], [26, 6], [42, 3], [65, 2], [120, 1], [121, 0]], "number_of_iterations": 122}
{"file": "strings/5-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.054929000000001, "program_length": 21, "number_of_explored_programs": 121, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.016, "explored_per_size_tokens": [0, 0, 0, 1, 2, 3, 2, 4, 10, 7, 9, 15, 16, 12, 2, 7, 8, 5, 3, 3, 4, 5, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 3, 3, 9, 8, 9, 22, 16, 27, 12, 7, 0, 3], "program": "Program([Drop, Drop, LoopWhile(IsLowercase [If(IsUppercase [MakeUppercase] [Drop])]), Drop, LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), Drop, Drop, Drop, Drop, MoveRight, MoveLeft, LoopWhile(IsSpace [If(IsNotNumber [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[6, 7], [13, 5], [104, 4], [108, 1], [120, 0]], "number_of_iterations": 121}
{"file": "strings/5-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.076538999999997, "program_length": 20, "number_of_explored_programs": 70, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.019, "explored_per_size_tokens": [0, 1, 1, 0, 2, 0, 3, 2, 1, 2, 1, 0, 0, 0, 2, 2, 2, 1, 1, 1, 4, 5, 0, 2, 4, 3, 1, 3, 4, 3, 3, 6, 3, 2, 0, 1, 2, 1, 1], "explored_per_size_sequence": [0, 3, 1, 5, 2, 2, 0, 5, 5, 6, 7, 8, 11, 6, 7, 1, 1], "program": "Program([MoveRight, Drop, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [Drop])]), Drop, MoveLeft, Drop, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeUppercase])]), MakeUppercase, LoopWhile(IsUppercase [MoveRight, Drop]), Drop])", "cost_per_iteration": [[6, 10], [10, 9], [15, 5], [18, 4], [22, 3], [69, 0]], "number_of_iterations": 70}
{"file": "strings/5-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.118032, "program_length": 29, "number_of_explored_programs": 140, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.026, "explored_per_size_tokens": [0, 1, 0, 0, 0, 2, 2, 2, 2, 0, 2, 1, 4, 1, 1, 3, 4, 2, 4, 5, 7, 12, 8, 5, 9, 8, 6, 14, 8, 6, 6, 3, 1, 2, 3, 0, 1, 3, 0, 2], "explored_per_size_sequence": [0, 1, 4, 2, 7, 1, 7, 6, 5, 12, 17, 20, 12, 19, 14, 4, 5, 2, 2], "program": "Program([LoopWhile(AtEnd [If(IsNotLowercase [Drop] [MakeLowercase])]), MakeUppercase, Drop, Drop, Drop, LoopWhile(IsNotSpace [Drop, MakeLowercase]), LoopWhile(IsLowercase [If(NotAtEnd [MakeUppercase] [MoveRight])]), LoopWhile(IsUppercase [If(IsLetter [MoveLeft] [MakeUppercase])]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsSpace [MoveRight] [Drop])]), MakeUppercase, MakeLowercase, Drop, MakeUppercase])", "cost_per_iteration": [[5, 10], [10, 9], [15, 8], [17, 6], [28, 5], [30, 4], [65, 3], [86, 2], [98, 1], [139, 0]], "number_of_iterations": 140}
{"file": "strings/5-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.243504999999999, "program_length": 19, "number_of_explored_programs": 324, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.014, "time_cost": 0.063, "explored_per_size_tokens": [0, 0, 1, 1, 0, 2, 2, 2, 2, 2, 5, 7, 12, 15, 18, 15, 22, 21, 26, 23, 12, 13, 16, 14, 11, 9, 14, 11, 3, 7, 9, 11, 7, 3, 4, 2, 1, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 3, 3, 5, 18, 27, 23, 36, 40, 41, 42, 30, 28, 16, 9, 1, 1], "program": "Program([Drop, MakeUppercase, MakeLowercase, Drop, Drop, LoopWhile(IsNotSpace [MakeLowercase, Drop]), Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MakeUppercase])]), MakeUppercase, LoopWhile(AtEnd [If(IsNotSpace [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[2, 10], [4, 9], [9, 8], [22, 7], [29, 3], [50, 2], [59, 1], [327, 0]], "number_of_iterations": 328}
{"file": "strings/5-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.289750999999995, "program_length": 20, "number_of_explored_programs": 387, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.014, "time_cost": 0.062, "explored_per_size_tokens": [0, 1, 2, 0, 0, 4, 6, 7, 6, 10, 11, 12, 14, 16, 23, 12, 27, 25, 27, 33, 30, 23, 25, 21, 16, 13, 4, 5, 3, 6, 2, 2, 1], "explored_per_size_sequence": [0, 1, 6, 10, 18, 23, 29, 49, 66, 64, 48, 45, 21, 4, 2, 1], "program": "Program([Drop, MoveRight, Drop, LoopWhile(IsLetter [If(AtStart [Drop] [MoveLeft])]), LoopWhile(AtStart [MoveRight, Drop]), Drop, MakeUppercase, MakeUppercase, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), Drop, MoveLeft, Drop])", "cost_per_iteration": [[4, 9], [7, 8], [11, 7], [22, 4], [106, 3], [148, 2], [171, 1], [389, 0]], "number_of_iterations": 390}
{"file": "strings/6-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13637899999999992, "program_length": 1, "number_of_explored_programs": 39, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.004, "explored_per_size_tokens": [0, 4, 0, 1, 8, 7, 3, 2, 4, 5, 3, 0, 0, 2], "explored_per_size_sequence": [0, 10, 9, 8, 12], "program": "Program([Drop])", "cost_per_iteration": [[41, 0]], "number_of_iterations": 42}
{"file": "strings/6-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13671699999999998, "program_length": 10, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 1, 2], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MoveRight] [MoveLeft])]), Drop, MakeLowercase, LoopWhile(IsSpace [If(AtStart [MoveRight] [Drop])])])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/6-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1072010000000001, "program_length": 3, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([Drop, MakeLowercase, MoveRight])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/6-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1415820000000001, "program_length": 4, "number_of_explored_programs": 18, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 0, 7, 4, 2, 0, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 7, 7, 3, 1], "program": "Program([LoopWhile(IsNumber [MakeLowercase, MoveLeft]), Drop])", "cost_per_iteration": [[17, 0]], "number_of_iterations": 18}
{"file": "strings/6-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13039500000000004, "program_length": 13, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 0, 2, 2, 0, 1, 1, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 3, 1, 3], "program": "Program([Drop, LoopWhile(AtStart [If(IsNumber [Drop] [MoveRight])]), LoopWhile(IsNumber [If(AtEnd [MoveRight] [Drop])]), LoopWhile(IsUppercase [If(IsNotNumber [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/6-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10649200000000003, "program_length": 8, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 2, 2, 1, 0, 0, 1, 0, 2, 0, 1], "explored_per_size_sequence": [0, 4, 1, 3, 2], "program": "Program([LoopWhile(IsLowercase [MoveLeft, MoveRight]), LoopWhile(AtEnd [If(IsNotUppercase [MoveLeft] [Drop])]), Drop])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/6-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1122240000000001, "program_length": 1, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1], "explored_per_size_sequence": [0, 1], "program": "Program([Drop])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/6-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1197490000000001, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1], "explored_per_size_sequence": [0, 1, 1, 0, 2], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/6-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13578, "program_length": 1, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 1, 1, 1], "program": "Program([Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/6-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.364222000000005, "program_length": 33, "number_of_explored_programs": 67, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.016, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 0, 1, 2, 0, 2, 0, 1, 2, 0, 1, 1, 1, 0, 0, 2, 1, 0, 2, 3, 5, 3, 2, 6, 7, 5, 3, 3, 1, 3, 3, 1, 0, 3, 0, 1], "explored_per_size_sequence": [0, 2, 0, 1, 2, 1, 1, 3, 0, 1, 2, 4, 6, 6, 9, 10, 5, 10, 4], "program": "Program([LoopWhile(IsUppercase [If(IsNotSpace [Drop] [MoveRight])]), Drop, MoveRight, MakeLowercase, LoopWhile(IsLetter [If(IsNotLetter [MakeUppercase] [Drop])]), MoveRight, Drop, Drop, LoopWhile(IsLowercase [If(NotAtStart [MoveRight] [MakeLowercase])]), Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MakeUppercase])]), MoveLeft, LoopWhile(AtEnd [If(IsLowercase [Drop] [MoveRight])]), MoveRight, MoveLeft, MoveLeft, Drop, Drop])", "cost_per_iteration": [[4, 9], [6, 5], [9, 3], [18, 2], [32, 1], [67, 0]], "number_of_iterations": 68}
{"file": "strings/6-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.358332999999995, "program_length": 24, "number_of_explored_programs": 144, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.022, "explored_per_size_tokens": [0, 1, 3, 1, 6, 3, 4, 6, 4, 3, 4, 8, 3, 5, 5, 5, 2, 7, 4, 12, 6, 5, 5, 4, 10, 5, 8, 2, 5, 3, 0, 0, 1, 2, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 7, 5, 11, 13, 6, 3, 13, 6, 6, 5, 4, 5, 15, 18, 7, 10, 8, 1], "program": "Program([Drop, MoveRight, MoveRight, MakeUppercase, MoveLeft, MoveRight, MakeLowercase, Drop, MakeUppercase, LoopWhile(IsNotSpace [Drop, Drop]), MoveLeft, Drop, MakeUppercase, Drop, LoopWhile(IsSpace [If(IsNotLetter [MakeUppercase] [MoveLeft])]), MoveLeft, Drop, MakeUppercase, MoveRight])", "cost_per_iteration": [[4, 10], [16, 9], [23, 8], [37, 7], [67, 6], [77, 5], [97, 3], [101, 1], [144, 0]], "number_of_iterations": 145}
{"file": "strings/6-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.103082, "program_length": 18, "number_of_explored_programs": 147, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.029, "explored_per_size_tokens": [0, 2, 0, 4, 5, 3, 6, 4, 4, 3, 3, 3, 5, 11, 2, 5, 7, 10, 5, 3, 7, 3, 7, 9, 6, 9, 6, 5, 3, 1, 1, 1, 2, 0, 0, 2], "explored_per_size_sequence": [0, 6, 4, 13, 10, 5, 16, 13, 13, 18, 19, 14, 15, 1], "program": "Program([LoopWhile(AtStart [If(IsSpace [MoveRight] [Drop])]), Drop, LoopWhile(IsLetter [If(NotAtStart [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(NotAtStart [Drop] [MoveRight])]), MoveLeft, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[22, 10], [23, 9], [38, 8], [46, 7], [47, 6], [56, 3], [114, 1], [146, 0]], "number_of_iterations": 147}
{"file": "strings/6-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.446039999999996, "program_length": 7, "number_of_explored_programs": 861, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.029, "time_cost": 0.132, "explored_per_size_tokens": [0, 5, 18, 25, 57, 74, 83, 66, 85, 86, 75, 58, 55, 59, 32, 19, 23, 19, 9, 7, 2, 4], "explored_per_size_sequence": [0, 38, 82, 157, 206, 154, 117, 59, 23, 17, 4, 3, 0, 1], "program": "Program([Drop, LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), MoveLeft, MoveRight])", "cost_per_iteration": [[4, 10], [16, 9], [26, 8], [35, 7], [47, 4.67], [53, 4.33], [923, 0]], "number_of_iterations": 924}
{"file": "strings/6-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.348444999999998, "program_length": 31, "number_of_explored_programs": 151, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.035, "explored_per_size_tokens": [0, 1, 0, 1, 1, 1, 2, 1, 0, 3, 0, 3, 1, 3, 5, 2, 0, 0, 0, 2, 3, 0, 3, 1, 3, 4, 8, 10, 5, 12, 10, 14, 10, 9, 2, 6, 5, 4, 6, 4, 2, 0, 2, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 3, 1, 4, 3, 7, 3, 0, 3, 1, 3, 3, 3, 3, 5, 4, 10, 16, 18, 20, 19, 13, 4, 3, 2], "program": "Program([LoopWhile(IsSpace [If(NotAtEnd [MakeLowercase] [MakeUppercase])]), Drop, Drop, LoopWhile(IsUppercase [If(IsNotLetter [Drop] [MoveLeft])]), Drop, MoveRight, Drop, MakeUppercase, Drop, MakeLowercase, Drop, Drop, Drop, MakeUppercase, MoveLeft, Drop, LoopWhile(IsNumber [If(IsNotSpace [Drop] [MakeLowercase])]), LoopWhile(IsUppercase [Drop, MakeLowercase]), Drop, MoveRight])", "cost_per_iteration": [[2, 10], [9, 9], [21, 8], [25, 7], [28, 6], [41, 5], [43, 4], [45, 3], [64, 2], [66, 1], [152, 0]], "number_of_iterations": 153}
{"file": "strings/6-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.17726900000001, "program_length": 36, "number_of_explored_programs": 133, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.022, "explored_per_size_tokens": [0, 3, 3, 1, 4, 3, 3, 7, 7, 6, 11, 6, 10, 3, 5, 6, 7, 6, 2, 8, 2, 3, 1, 5, 3, 2, 3, 1, 1, 1, 3, 0, 3, 1, 1, 0, 1, 1], "explored_per_size_sequence": [0, 7, 10, 9, 17, 11, 6, 6, 8, 10, 8, 6, 2, 7, 5, 6, 6, 4, 3, 1, 1], "program": "Program([LoopWhile(IsNotLowercase [MoveRight, Drop]), MoveLeft, Drop, Drop, Drop, Drop, MakeLowercase, MakeLowercase, Drop, MoveRight, MakeUppercase, Drop, LoopWhile(NotAtStart [MoveLeft, Drop]), LoopWhile(IsLowercase [If(IsNumber [MakeLowercase] [MoveLeft])]), LoopWhile(IsNotSpace [MoveRight, MoveRight]), LoopWhile(IsLetter [If(AtEnd [MoveLeft] [Drop])]), LoopWhile(IsUppercase [If(IsNumber [MakeLowercase] [Drop])]), Drop, LoopWhile(IsNumber [Drop, Drop])])", "cost_per_iteration": [[9, 10], [11, 9], [37, 8], [53, 7], [59, 6], [65, 5], [67, 4], [88, 3], [102, 2], [113, 1], [134, 0]], "number_of_iterations": 135}
{"file": "strings/6-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.146656000000007, "program_length": 27, "number_of_explored_programs": 111, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.032, "explored_per_size_tokens": [0, 2, 0, 0, 3, 1, 2, 1, 1, 0, 2, 0, 1, 0, 1, 0, 1, 2, 2, 0, 3, 2, 2, 2, 3, 9, 1, 7, 4, 6, 4, 5, 5, 8, 10, 3, 5, 1, 1, 3, 4, 4], "explored_per_size_sequence": [0, 5, 1, 2, 3, 1, 2, 1, 2, 1, 4, 11, 14, 17, 14, 16, 13, 4], "program": "Program([LoopWhile(IsUppercase [If(NotAtStart [MakeUppercase] [Drop])]), MoveRight, Drop, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveRight])]), Drop, MakeUppercase, Drop, LoopWhile(IsUppercase [If(IsNumber [MakeLowercase] [MoveLeft])]), LoopWhile(IsNumber [If(AtStart [MakeUppercase] [Drop])]), MakeUppercase, Drop, MoveLeft, Drop, MakeUppercase, Drop])", "cost_per_iteration": [[4, 10], [5, 9], [13, 4], [17, 3], [24, 1], [110, 0]], "number_of_iterations": 111}
{"file": "strings/6-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.161772, "program_length": 18, "number_of_explored_programs": 17, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 0, 0, 2, 1, 2, 0, 4, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], "explored_per_size_sequence": [0, 2, 3, 6, 1, 3, 1, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MakeUppercase])]), LoopWhile(IsNotUppercase [MakeUppercase, Drop]), MoveRight, LoopWhile(AtStart [If(AtEnd [Drop] [MakeLowercase])]), MoveLeft, MakeUppercase, LoopWhile(IsLowercase [If(IsNotUppercase [MakeUppercase] [MoveRight])])])", "cost_per_iteration": [[4, 9], [11, 3.33], [12, 2.5], [16, 0]], "number_of_iterations": 17}
{"file": "strings/6-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.177573999999993, "program_length": 25, "number_of_explored_programs": 190, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.033, "explored_per_size_tokens": [0, 0, 2, 0, 5, 5, 6, 0, 4, 4, 1, 2, 5, 5, 4, 4, 11, 6, 7, 6, 8, 12, 11, 10, 12, 13, 13, 6, 7, 2, 6, 3, 3, 3, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 2, 7, 7, 15, 6, 9, 5, 5, 8, 6, 3, 4, 8, 16, 18, 15, 22, 9, 12, 7, 6], "program": "Program([Drop, MoveRight, Drop, MoveRight, MakeUppercase, Drop, MakeLowercase, Drop, Drop, LoopWhile(NotAtStart [MakeUppercase, MoveLeft]), Drop, MoveRight, Drop, MakeLowercase, MoveLeft, LoopWhile(IsUppercase [If(IsNotSpace [Drop] [MoveLeft])]), MakeUppercase, Drop, Drop, Drop])", "cost_per_iteration": [[6, 10], [26, 9], [41, 8], [61, 6], [68, 5], [71, 4], [83, 3], [107, 2], [124, 1], [190, 0]], "number_of_iterations": 191}
{"file": "strings/7-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1266609999999999, "program_length": 1, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 0, 0, 2, 0, 0, 0, 2, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 1, 2, 1], "program": "Program([Drop])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/7-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.12394600000000011, "program_length": 1, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 1, 3, 2, 0, 2, 1, 0, 2, 0, 1, 0, 0, 0, 2], "explored_per_size_sequence": [0, 4, 4, 2, 5], "program": "Program([Drop])", "cost_per_iteration": [[14, 0]], "number_of_iterations": 15}
{"file": "strings/7-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13261500000000015, "program_length": 4, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 0, 2, 2, 1], "program": "Program([Drop, LoopWhile(IsNotLetter [MoveLeft, MoveLeft])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/7-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13082399999999983, "program_length": 5, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 2, 0, 3, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "explored_per_size_sequence": [0, 0, 3, 4, 4], "program": "Program([LoopWhile(AtEnd [If(AtStart [MoveLeft] [MakeLowercase])]), Drop])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/7-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.12341700000000011, "program_length": 4, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 1, 0, 1, 1], "explored_per_size_sequence": [0, 0, 1, 1, 2], "program": "Program([MakeLowercase, MakeUppercase, MakeLowercase, Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/7-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13609500000000008, "program_length": 1, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2], "explored_per_size_sequence": [0, 2], "program": "Program([Drop])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/7-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13344699999999987, "program_length": 1, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 0, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 3], "program": "Program([Drop])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/7-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13337300000000019, "program_length": 1, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1], "explored_per_size_sequence": [0, 1], "program": "Program([Drop])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/7-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13047300000000006, "program_length": 6, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 0, 1, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 2], "program": "Program([MakeUppercase, Drop, LoopWhile(IsSpace [If(IsNotUppercase [MoveRight] [Drop])])])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/7-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.140257000000005, "program_length": 23, "number_of_explored_programs": 250, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.054, "explored_per_size_tokens": [0, 3, 1, 1, 3, 7, 6, 5, 3, 4, 3, 10, 2, 8, 6, 1, 5, 7, 9, 6, 4, 11, 11, 13, 10, 11, 13, 12, 8, 11, 12, 9, 6, 6, 6, 4, 4, 2, 0, 5, 2], "explored_per_size_sequence": [0, 5, 8, 8, 9, 5, 4, 6, 7, 4, 14, 17, 23, 29, 31, 27, 19, 14, 14, 6], "program": "Program([Drop, MakeLowercase, Drop, Drop, MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(AtEnd [If(IsLetter [MakeUppercase] [MoveLeft])]), LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [MakeLowercase])]), Drop, Drop, MakeLowercase, Drop, Drop])", "cost_per_iteration": [[11, 10], [32, 9], [38, 8], [45, 6], [57, 4], [75, 3], [88, 1], [253, 0]], "number_of_iterations": 254}
{"file": "strings/7-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.305181000000005, "program_length": 31, "number_of_explored_programs": 163, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.038, "explored_per_size_tokens": [0, 0, 2, 0, 2, 2, 2, 1, 1, 2, 1, 1, 3, 3, 0, 0, 1, 1, 3, 1, 0, 6, 5, 2, 11, 7, 13, 10, 4, 8, 8, 11, 13, 7, 3, 4, 6, 6, 4, 5, 0, 2, 1, 1], "explored_per_size_sequence": [0, 1, 5, 6, 6, 1, 4, 1, 1, 11, 11, 18, 19, 23, 20, 17, 10, 8, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotLetter [MakeLowercase] [Drop])]), Drop, MakeUppercase, LoopWhile(IsNotUppercase [MoveLeft, MakeUppercase]), LoopWhile(IsNumber [If(IsNotUppercase [MakeUppercase] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLowercase [If(AtStart [MakeUppercase] [Drop])]), LoopWhile(AtEnd [If(NotAtEnd [MoveLeft] [MakeUppercase])]), MakeUppercase, Drop, Drop, MakeLowercase, Drop])", "cost_per_iteration": [[10, 9], [20, 8], [22, 7], [33, 5], [63, 4], [69, 2], [135, 1], [165, 0]], "number_of_iterations": 166}
{"file": "strings/7-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.449257000000003, "program_length": 22, "number_of_explored_programs": 211, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.045, "explored_per_size_tokens": [0, 0, 1, 0, 1, 2, 2, 3, 8, 10, 14, 5, 10, 5, 4, 13, 16, 15, 14, 19, 10, 8, 8, 7, 8, 2, 5, 4, 3, 3, 4, 1, 2, 0, 2, 0, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 1, 9, 10, 16, 11, 23, 33, 29, 19, 22, 17, 11, 6, 3, 1], "program": "Program([MoveRight, MoveLeft, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MoveRight])]), Drop, LoopWhile(IsLowercase [MakeLowercase, Drop]), Drop, Drop, LoopWhile(IsSpace [If(AtStart [Drop] [MoveLeft])]), Drop, LoopWhile(IsUppercase [If(IsNotLetter [Drop] [MakeLowercase])]), Drop])", "cost_per_iteration": [[0, 10], [5, 8], [67, 4], [68, 3], [70, 2], [155, 1], [215, 0]], "number_of_iterations": 216}
{"file": "strings/7-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.39083699999999, "program_length": 15, "number_of_explored_programs": 159, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.034, "explored_per_size_tokens": [0, 2, 4, 2, 4, 3, 4, 3, 5, 6, 8, 10, 3, 3, 10, 10, 5, 14, 11, 9, 7, 7, 7, 4, 2, 6, 4, 1, 1, 2, 0, 0, 2], "explored_per_size_sequence": [0, 4, 10, 10, 14, 11, 11, 13, 14, 17, 20, 6, 14, 9, 6], "program": "Program([Drop, Drop, LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MakeLowercase])]), LoopWhile(IsNotSpace [MakeUppercase, Drop]), Drop, MakeUppercase, MakeLowercase, Drop, Drop, Drop])", "cost_per_iteration": [[6, 10], [9, 9], [44, 8], [45, 7], [64, 3], [77, 2], [84, 1], [159, 0]], "number_of_iterations": 160}
{"file": "strings/7-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.484122999999997, "program_length": 25, "number_of_explored_programs": 239, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.01, "time_cost": 0.053, "explored_per_size_tokens": [0, 1, 0, 2, 2, 1, 2, 4, 3, 7, 3, 3, 7, 12, 4, 9, 13, 13, 17, 19, 10, 11, 21, 16, 10, 10, 12, 5, 10, 4, 3, 3, 0, 0, 2], "explored_per_size_sequence": [0, 2, 2, 8, 4, 7, 14, 22, 23, 35, 51, 32, 17, 18, 4], "program": "Program([Drop, LoopWhile(IsNumber [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(IsLetter [If(AtStart [MoveRight] [MakeLowercase])]), MoveLeft, Drop, Drop, LoopWhile(IsLowercase [If(IsNotLowercase [MakeLowercase] [Drop])]), Drop, LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), Drop, LoopWhile(NotAtStart [MakeUppercase, MakeUppercase])])", "cost_per_iteration": [[0, 10], [9, 9], [14, 8], [26, 4], [36, 3], [52, 2], [185, 1], [238, 0]], "number_of_iterations": 239}
{"file": "strings/7-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.217297000000002, "program_length": 23, "number_of_explored_programs": 176, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.037, "explored_per_size_tokens": [0, 1, 2, 3, 1, 1, 3, 3, 1, 4, 0, 0, 1, 0, 2, 2, 0, 2, 5, 3, 10, 7, 15, 18, 8, 13, 11, 13, 12, 6, 4, 6, 9, 4, 1, 2, 1, 1, 0, 1], "explored_per_size_sequence": [0, 2, 3, 7, 4, 1, 3, 0, 2, 9, 12, 38, 28, 24, 21, 16, 5, 1], "program": "Program([Drop, Drop, MoveRight, MoveLeft, MakeLowercase, Drop, Drop, LoopWhile(IsSpace [If(IsLowercase [MoveLeft] [MoveRight])]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeUppercase])]), Drop, MakeUppercase, LoopWhile(IsLetter [If(IsSpace [MoveLeft] [Drop])]), Drop, MakeUppercase])", "cost_per_iteration": [[0, 10], [2, 9], [17, 8], [21, 7], [22, 3], [37, 1], [177, 0]], "number_of_iterations": 178}
{"file": "strings/7-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.531327000000005, "program_length": 22, "number_of_explored_programs": 194, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.045, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 3, 2, 0, 4, 8, 4, 4, 5, 3, 14, 11, 18, 15, 11, 16, 12, 14, 8, 10, 4, 5, 7, 5, 4, 2, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 2, 4, 4, 7, 10, 13, 26, 35, 34, 22, 17, 14, 5, 1], "program": "Program([LoopWhile(IsNumber [MoveRight, MakeLowercase]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveRight])]), MakeUppercase, Drop, MakeLowercase, MakeLowercase, LoopWhile(IsLowercase [If(IsNumber [MakeUppercase] [Drop])]), Drop, MakeLowercase, LoopWhile(IsLowercase [If(AtStart [Drop] [MakeLowercase])]), Drop])", "cost_per_iteration": [[2, 10], [3, 9], [9, 8], [22, 7], [31, 6], [45, 5], [50, 4], [51, 3], [100, 2], [193, 0]], "number_of_iterations": 194}
{"file": "strings/7-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.193567999999999, "program_length": 26, "number_of_explored_programs": 271, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.012, "time_cost": 0.07, "explored_per_size_tokens": [0, 0, 1, 2, 1, 3, 3, 1, 2, 1, 0, 3, 1, 4, 5, 6, 4, 7, 7, 11, 18, 13, 15, 14, 25, 18, 16, 23, 15, 10, 8, 8, 9, 6, 5, 3, 0, 2, 1], "explored_per_size_sequence": [0, 1, 3, 7, 2, 7, 5, 3, 6, 16, 21, 32, 44, 43, 38, 26, 13, 4], "program": "Program([Drop, LoopWhile(IsNotSpace [Drop, MakeLowercase]), MakeLowercase, LoopWhile(IsUppercase [If(AtEnd [MoveRight] [MakeLowercase])]), MoveRight, LoopWhile(IsLowercase [If(AtStart [MakeLowercase] [Drop])]), Drop, MoveLeft, Drop, MoveRight, MoveLeft, Drop, Drop, MakeUppercase, LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MakeLowercase])])])", "cost_per_iteration": [[3, 10], [5, 9], [12, 8], [27, 7], [40, 4], [47, 3], [51, 2], [165, 1], [275, 0]], "number_of_iterations": 276}
{"file": "strings/7-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.19171999999999, "program_length": 20, "number_of_explored_programs": 174, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.032, "explored_per_size_tokens": [0, 0, 1, 1, 4, 3, 8, 4, 14, 12, 14, 12, 17, 22, 8, 13, 5, 9, 10, 4, 5, 4, 3, 0, 0, 1], "explored_per_size_sequence": [0, 0, 2, 10, 13, 19, 40, 34, 28, 17, 10, 1], "program": "Program([MoveRight, Drop, Drop, MoveLeft, LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), Drop, LoopWhile(IsLetter [If(IsNotLetter [MakeLowercase] [Drop])]), Drop, LoopWhile(IsLowercase [If(IsLetter [MakeLowercase] [Drop])]), MakeUppercase, MakeUppercase])", "cost_per_iteration": [[3, 10], [19, 9], [26, 8], [30, 3], [128, 1], [177, 0]], "number_of_iterations": 178}
{"file": "strings/8-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.15595399999999993, "program_length": 1, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 0, 1], "program": "Program([Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/8-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1489879999999999, "program_length": 7, "number_of_explored_programs": 43, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.005, "explored_per_size_tokens": [0, 3, 4, 0, 8, 3, 0, 3, 9, 7, 2, 0, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 10, 13, 10, 10], "program": "Program([MoveRight, LoopWhile(AtStart [If(IsUppercase [Drop] [MakeLowercase])]), MoveLeft, Drop])", "cost_per_iteration": [[44, 0]], "number_of_iterations": 45}
{"file": "strings/8-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.12134899999999993, "program_length": 1, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 3, 0, 0, 0, 2, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 4, 1], "program": "Program([Drop])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/8-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.16032099999999994, "program_length": 4, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 0, 1, 1, 1, 1], "explored_per_size_sequence": [0, 0, 2, 2, 1], "program": "Program([Drop, LoopWhile(IsUppercase [Drop, MoveLeft])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/8-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.183384, "program_length": 9, "number_of_explored_programs": 23, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.006, "explored_per_size_tokens": [0, 1, 1, 2, 2, 3, 6, 1, 2, 3, 1, 0, 0, 1], "explored_per_size_sequence": [0, 4, 5, 8, 6], "program": "Program([LoopWhile(IsUppercase [If(IsNotUppercase [MakeLowercase] [MoveRight])]), LoopWhile(AtEnd [If(IsNotSpace [MakeUppercase] [MakeLowercase])]), Drop])", "cost_per_iteration": [[22, 0]], "number_of_iterations": 23}
{"file": "strings/8-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.149656, "program_length": 2, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 2, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 1, 4, 1, 2], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/8-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1547670000000001, "program_length": 7, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 0, 3, 1, 0, 1, 2, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 5, 0, 3], "program": "Program([LoopWhile(IsNumber [If(NotAtEnd [MakeLowercase] [MoveRight])]), Drop, MakeLowercase, MakeLowercase])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/8-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.15211300000000016, "program_length": 2, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 0, 3], "program": "Program([MakeLowercase, Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/8-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.15555000000000008, "program_length": 1, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 0, 1], "program": "Program([Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/8-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.329858000000002, "program_length": 37, "number_of_explored_programs": 142, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.034, "explored_per_size_tokens": [0, 1, 2, 1, 2, 2, 5, 3, 3, 5, 6, 5, 7, 3, 6, 2, 5, 2, 5, 3, 6, 4, 1, 4, 2, 4, 3, 3, 4, 11, 4, 3, 1, 5, 4, 5, 3, 4, 1, 0, 2], "explored_per_size_sequence": [0, 2, 3, 7, 7, 13, 18, 12, 8, 5, 2, 6, 9, 8, 11, 10, 6, 10, 5], "program": "Program([Drop, Drop, LoopWhile(IsSpace [If(IsLowercase [MoveRight] [Drop])]), LoopWhile(AtStart [If(IsNotSpace [Drop] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [Drop])]), MakeLowercase, MakeLowercase, MakeLowercase, LoopWhile(IsUppercase [MoveRight, MakeUppercase]), Drop, MakeLowercase, LoopWhile(AtStart [If(IsNotLowercase [MoveLeft] [Drop])]), MakeUppercase, LoopWhile(IsLetter [If(AtStart [Drop] [MoveLeft])]), LoopWhile(IsLowercase [If(IsNotSpace [MakeUppercase] [MakeLowercase])]), Drop])", "cost_per_iteration": [[0, 9], [3, 7], [35, 4], [75, 3], [78, 2], [80, 1], [141, 0]], "number_of_iterations": 142}
{"file": "strings/8-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.422075000000007, "program_length": 25, "number_of_explored_programs": 158, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.04, "explored_per_size_tokens": [0, 0, 0, 1, 0, 1, 3, 4, 2, 3, 5, 13, 9, 7, 13, 9, 10, 10, 10, 9, 7, 8, 6, 3, 5, 5, 3, 3, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 1, 7, 13, 16, 16, 14, 25, 16, 15, 8, 17, 2, 6, 1, 1], "program": "Program([LoopWhile(IsUppercase [If(IsNotUppercase [MoveRight] [Drop])]), Drop, MakeLowercase, Drop, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveRight])]), Drop, Drop, Drop, MakeUppercase, MakeLowercase, LoopWhile(IsLetter [If(IsLowercase [MakeLowercase] [MakeUppercase])]), MoveLeft, Drop, MakeUppercase, Drop, MakeUppercase])", "cost_per_iteration": [[1, 10], [16, 9], [59, 8], [66, 7], [80, 6], [99, 5], [102, 3], [122, 2], [137, 1], [157, 0]], "number_of_iterations": 158}
{"file": "strings/8-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.313429, "program_length": 22, "number_of_explored_programs": 289, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.054, "explored_per_size_tokens": [0, 2, 2, 2, 3, 4, 9, 4, 13, 14, 15, 17, 18, 29, 24, 25, 22, 15, 13, 16, 13, 8, 7, 2, 3, 4, 2, 2, 1], "explored_per_size_sequence": [0, 3, 4, 5, 8, 10, 28, 43, 51, 52, 32, 33, 12, 6, 2], "program": "Program([MakeUppercase, Drop, Drop, Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsLetter [Drop] [MakeLowercase])]), Drop, Drop, LoopWhile(IsNotUppercase [MakeUppercase, MakeUppercase]), Drop, LoopWhile(AtEnd [If(IsSpace [MoveLeft] [Drop])]), Drop, MoveRight, MoveRight])", "cost_per_iteration": [[3, 10], [13, 9], [21, 7], [26, 6], [31, 5], [33, 4], [36, 3], [152, 2], [281, 1], [289, 0]], "number_of_iterations": 290}
{"file": "strings/8-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.570329000000001, "program_length": 48, "number_of_explored_programs": 208, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.015, "time_cost": 0.086, "explored_per_size_tokens": [0, 2, 3, 2, 7, 2, 4, 3, 2, 8, 4, 4, 4, 4, 2, 1, 6, 7, 1, 3, 0, 0, 1, 0, 3, 1, 1, 0, 0, 1, 1, 0, 1, 3, 1, 0, 1, 6, 4, 7, 4, 4, 4, 8, 7, 1, 11, 6, 8, 6, 4, 5, 1, 2, 5, 3, 2, 6, 2, 4, 3, 1, 2, 1, 4, 0, 0, 1, 0, 1, 0, 1, 1], "explored_per_size_sequence": [0, 5, 4, 9, 13, 9, 7, 8, 9, 2, 4, 1, 2, 1, 3, 5, 3, 6, 12, 16, 20, 21, 18, 14, 8, 3, 3, 2], "program": "Program([MakeLowercase, Drop, LoopWhile(IsSpace [If(AtEnd [MakeLowercase] [Drop])]), LoopWhile(IsLowercase [If(NotAtStart [MakeUppercase] [MoveRight])]), MoveRight, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), Drop, Drop, LoopWhile(IsUppercase [If(IsLowercase [Drop] [MoveLeft])]), MoveLeft, MoveLeft, LoopWhile(AtStart [If(IsSpace [MakeLowercase] [MoveRight])]), Drop, Drop, Drop, LoopWhile(AtEnd [If(IsNotLowercase [MoveRight] [MakeUppercase])]), LoopWhile(IsUppercase [If(IsNotNumber [MoveLeft] [MakeUppercase])]), LoopWhile(AtEnd [If(IsLetter [MakeLowercase] [Drop])]), MakeLowercase, LoopWhile(IsUppercase [If(IsNumber [MakeUppercase] [MoveRight])]), Drop])", "cost_per_iteration": [[10, 9], [41, 8], [43, 7], [65, 6], [73, 5], [80, 4], [83, 3.88], [92, 2.88], [98, 1.88], [142, 1], [210, 0]], "number_of_iterations": 211}
{"file": "strings/8-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.12637699999999, "program_length": 36, "number_of_explored_programs": 316, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.014, "time_cost": 0.084, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 2, 1, 1, 1, 1, 6, 2, 4, 1, 5, 2, 6, 4, 11, 11, 14, 12, 11, 15, 14, 13, 24, 24, 22, 21, 22, 14, 17, 8, 8, 4, 4, 4, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 0, 2, 1, 2, 4, 4, 3, 6, 6, 4, 2, 15, 17, 57, 50, 44, 52, 29, 13, 4, 1], "program": "Program([MakeLowercase, MakeUppercase, LoopWhile(IsLetter [If(IsSpace [MoveRight] [Drop])]), LoopWhile(IsSpace [If(IsNotLowercase [Drop] [MakeLowercase])]), MoveRight, LoopWhile(IsNumber [MakeLowercase, Drop]), Drop, Drop, Drop, MakeLowercase, MakeLowercase, Drop, LoopWhile(IsNotSpace [MakeLowercase, Drop]), LoopWhile(IsLetter [If(IsNotNumber [MakeUppercase] [MoveRight])]), MakeLowercase, MoveLeft, LoopWhile(IsNumber [If(IsNotLowercase [Drop] [MoveLeft])]), Drop, MakeUppercase, Drop])", "cost_per_iteration": [[0, 10], [5, 9], [14, 8], [30, 7], [33, 6], [37, 3], [102, 2], [147, 1], [317, 0]], "number_of_iterations": 318}
{"file": "strings/8-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.434833999999995, "program_length": 17, "number_of_explored_programs": 316, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.011, "time_cost": 0.076, "explored_per_size_tokens": [0, 1, 3, 3, 9, 16, 7, 12, 13, 13, 9, 13, 8, 13, 22, 19, 17, 14, 16, 13, 19, 12, 11, 9, 7, 11, 10, 6, 4, 3, 2, 1], "explored_per_size_sequence": [0, 6, 17, 24, 21, 22, 26, 21, 28, 29, 29, 28, 23, 20, 9, 10, 3], "program": "Program([Drop, Drop, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [Drop])]), Drop, LoopWhile(AtEnd [If(IsSpace [MakeUppercase] [Drop])]), Drop, Drop, MoveRight, MoveLeft, Drop])", "cost_per_iteration": [[2, 7], [90, 5.12], [139, 4.75], [162, 3], [205, 2], [278, 1], [319, 0]], "number_of_iterations": 320}
{"file": "strings/8-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.485424000000009, "program_length": 13, "number_of_explored_programs": 533, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.018, "time_cost": 0.114, "explored_per_size_tokens": [0, 4, 9, 14, 17, 26, 31, 29, 35, 39, 47, 48, 36, 35, 33, 28, 21, 24, 16, 12, 3, 7, 7, 7, 0, 1, 1, 1, 0, 2], "explored_per_size_sequence": [0, 12, 36, 57, 82, 97, 98, 73, 55, 15, 6, 2], "program": "Program([Drop, LoopWhile(IsNotSpace [Drop, Drop]), Drop, Drop, LoopWhile(IsSpace [If(AtStart [MoveLeft] [MakeUppercase])]), MakeUppercase, Drop, Drop])", "cost_per_iteration": [[21, 5.12], [32, 5], [61, 4.12], [372, 4], [405, 3], [453, 2], [538, 1], [546, 0]], "number_of_iterations": 547}
{"file": "strings/8-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.370751999999996, "program_length": 23, "number_of_explored_programs": 298, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.071, "explored_per_size_tokens": [0, 0, 2, 1, 6, 2, 1, 0, 1, 2, 2, 2, 1, 3, 3, 3, 2, 5, 9, 10, 12, 15, 13, 22, 10, 12, 19, 31, 14, 25, 23, 15, 9, 7, 8, 4, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 6, 5, 3, 4, 5, 6, 12, 8, 8, 22, 13, 26, 39, 35, 45, 36, 18, 7], "program": "Program([Drop, Drop, MoveRight, LoopWhile(AtEnd [If(IsLowercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeLowercase])]), Drop, MoveLeft, Drop, MakeLowercase, LoopWhile(IsLetter [MakeLowercase, Drop]), LoopWhile(AtEnd [If(NotAtEnd [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[12, 10], [13, 9], [29, 5], [64, 4], [80, 3], [90, 1], [300, 0]], "number_of_iterations": 301}
{"file": "strings/8-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.179018999999997, "program_length": 26, "number_of_explored_programs": 222, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.056, "explored_per_size_tokens": [0, 1, 1, 1, 4, 2, 2, 1, 4, 3, 6, 1, 2, 5, 7, 3, 9, 9, 10, 8, 21, 11, 10, 11, 10, 14, 8, 13, 10, 9, 5, 6, 2, 2, 2, 3, 2, 2, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 4, 6, 6, 5, 4, 5, 17, 16, 16, 20, 23, 31, 27, 13, 11, 11, 5, 2], "program": "Program([MakeLowercase, Drop, Drop, LoopWhile(IsSpace [If(NotAtEnd [Drop] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), MoveRight, Drop, Drop, MakeUppercase, MoveLeft, LoopWhile(IsLetter [If(IsNotNumber [MoveLeft] [MoveRight])]), LoopWhile(IsNumber [If(IsNotUppercase [MoveRight] [MakeUppercase])]), Drop, Drop])", "cost_per_iteration": [[11, 10], [19, 9], [25, 8], [29, 7], [54, 2], [67, 1], [222, 0]], "number_of_iterations": 223}
{"file": "strings/9-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.142482, "program_length": 2, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 0, 4, 0, 1, 2, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 3, 3], "program": "Program([MakeUppercase, Drop])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/9-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.16917999999999989, "program_length": 5, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 1, 1, 1], "program": "Program([Drop, LoopWhile(IsSpace [Drop, MoveRight]), MakeLowercase])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/9-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.1645510000000001, "program_length": 9, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 1, 1, 2], "program": "Program([LoopWhile(IsUppercase [If(AtEnd [MakeLowercase] [MoveRight])]), Drop, LoopWhile(AtEnd [If(AtStart [Drop] [MoveRight])])])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/9-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.17304000000000008, "program_length": 1, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 3], "explored_per_size_sequence": [0, 3], "program": "Program([Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/9-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.185851, "program_length": 6, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([MakeLowercase, LoopWhile(IsLetter [If(IsNotSpace [MoveLeft] [MakeUppercase])]), Drop])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/9-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.139208, "program_length": 5, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 1, 1, 1, 0, 1, 1], "explored_per_size_sequence": [0, 2, 3, 0, 2], "program": "Program([Drop, LoopWhile(AtEnd [If(IsUppercase [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/9-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.156204, "program_length": 1, "number_of_explored_programs": 24, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 3, 0, 2, 5, 3, 1, 2, 1, 2, 2, 0, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 9, 3, 4, 8], "program": "Program([Drop])", "cost_per_iteration": [[23, 0]], "number_of_iterations": 24}
{"file": "strings/9-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.15371600000000019, "program_length": 6, "number_of_explored_programs": 20, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 4, 0, 0, 2, 3, 2, 2, 0, 3, 2, 0, 1, 1], "explored_per_size_sequence": [0, 5, 3, 4, 8], "program": "Program([LoopWhile(IsNumber [If(IsNotUppercase [MoveLeft] [MoveRight])]), MakeUppercase, Drop])", "cost_per_iteration": [[19, 0]], "number_of_iterations": 20}
{"file": "strings/9-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.12672700000000003, "program_length": 13, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 2, 1], "explored_per_size_sequence": [0, 0, 1, 1, 6], "program": "Program([Drop, LoopWhile(IsUppercase [If(NotAtEnd [MakeUppercase] [MoveRight])]), LoopWhile(AtEnd [If(IsNumber [Drop] [MakeUppercase])]), LoopWhile(IsSpace [If(NotAtEnd [MoveLeft] [MoveRight])])])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/9-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.245024, "program_length": 24, "number_of_explored_programs": 433, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.022, "time_cost": 0.122, "explored_per_size_tokens": [0, 2, 3, 1, 2, 6, 2, 3, 2, 2, 2, 6, 5, 8, 6, 5, 5, 3, 4, 5, 2, 3, 4, 7, 9, 11, 13, 25, 27, 19, 15, 29, 29, 31, 23, 14, 20, 27, 12, 14, 10, 5, 2, 3, 3, 0, 1, 1, 2], "explored_per_size_sequence": [0, 2, 7, 5, 9, 7, 9, 6, 7, 6, 7, 2, 1, 2, 15, 32, 54, 70, 76, 52, 35, 24, 5], "program": "Program([Drop, Drop, LoopWhile(IsNumber [If(IsNotUppercase [MoveLeft] [MoveRight])]), Drop, Drop, MoveRight, Drop, MakeLowercase, Drop, Drop, MakeUppercase, Drop, LoopWhile(IsUppercase [If(IsNotNumber [MakeUppercase] [MakeLowercase])]), Drop, LoopWhile(NotAtStart [Drop, MoveLeft]), Drop])", "cost_per_iteration": [[3, 10], [23, 8], [46, 7], [49, 6], [54, 5], [65, 4], [70, 3], [73, 2], [98, 1], [438, 0]], "number_of_iterations": 439}
{"file": "strings/9-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.240831, "program_length": 4, "number_of_explored_programs": 44, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.01, "explored_per_size_tokens": [0, 3, 3, 3, 6, 3, 3, 5, 0, 5, 4, 5, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 7, 6, 9, 16, 3, 3], "program": "Program([MakeLowercase, LoopWhile(IsNotUppercase [MakeLowercase, Drop])])", "cost_per_iteration": [[9, 1], [45, 0]], "number_of_iterations": 46}
{"file": "strings/9-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.287969000000004, "program_length": 35, "number_of_explored_programs": 136, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.043, "explored_per_size_tokens": [0, 0, 0, 2, 2, 3, 3, 4, 1, 2, 3, 0, 5, 1, 3, 4, 0, 2, 1, 6, 0, 2, 2, 0, 2, 7, 2, 0, 3, 3, 1, 6, 1, 7, 4, 2, 9, 7, 6, 1, 9, 11, 0, 2, 3, 1, 1, 0, 0, 2], "explored_per_size_sequence": [0, 0, 2, 8, 9, 2, 7, 6, 2, 7, 5, 2, 1, 10, 12, 11, 11, 17, 17, 4, 3], "program": "Program([Drop, LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [MoveRight])]), LoopWhile(IsLetter [If(AtEnd [MoveRight] [MakeLowercase])]), Drop, MakeUppercase, LoopWhile(IsUppercase [If(IsSpace [MakeUppercase] [Drop])]), MoveRight, LoopWhile(IsNumber [If(IsNotNumber [Drop] [MoveRight])]), LoopWhile(IsLowercase [If(NotAtStart [MoveRight] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotNumber [Drop] [MakeLowercase])]), LoopWhile(NotAtStart [Drop, MoveLeft]), Drop, Drop, MakeLowercase, Drop])", "cost_per_iteration": [[4, 10], [14, 9], [20, 8], [39, 7], [49, 6], [50, 5], [57, 4], [59, 3], [135, 0]], "number_of_iterations": 136}
{"file": "strings/9-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.261049, "program_length": 23, "number_of_explored_programs": 320, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.011, "time_cost": 0.067, "explored_per_size_tokens": [0, 3, 5, 4, 6, 5, 9, 9, 11, 6, 14, 6, 11, 9, 13, 13, 9, 18, 5, 16, 20, 14, 14, 19, 22, 9, 9, 11, 10, 3, 9, 3, 3, 1, 1], "explored_per_size_sequence": [0, 8, 8, 18, 23, 19, 14, 7, 15, 5, 22, 20, 38, 28, 37, 32, 16, 8, 2], "program": "Program([Drop, MoveRight, Drop, Drop, Drop, Drop, MoveLeft, MakeUppercase, MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveRight])]), Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MakeUppercase])]), Drop, LoopWhile(IsNumber [If(IsNotLowercase [MakeUppercase] [MoveLeft])])])", "cost_per_iteration": [[9, 10], [31, 9], [51, 8], [97, 7], [113, 6], [120, 5], [132, 4], [154, 3], [163, 2], [182, 1], [324, 0]], "number_of_iterations": 325}
{"file": "strings/9-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.340940000000003, "program_length": 27, "number_of_explored_programs": 109, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.023, "explored_per_size_tokens": [0, 1, 1, 3, 3, 1, 1, 5, 3, 6, 5, 4, 6, 2, 5, 7, 5, 3, 4, 3, 3, 4, 6, 8, 1, 1, 5, 4, 3, 4, 0, 0, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 5, 3, 8, 4, 8, 4, 6, 6, 4, 5, 5, 9, 2, 3, 3, 8, 4, 1, 8, 5, 4], "program": "Program([MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsUppercase [MakeUppercase] [Drop])]), Drop, MakeLowercase, MakeLowercase, Drop, Drop, MakeLowercase, MoveRight, Drop, MakeUppercase, MakeUppercase, MakeUppercase, LoopWhile(IsUppercase [If(NotAtEnd [MakeUppercase] [Drop])]), Drop, Drop, Drop, Drop, MoveLeft, Drop])", "cost_per_iteration": [[9, 10], [19, 9], [22, 8], [38, 6], [57, 5], [67, 3], [79, 2], [83, 1], [108, 0]], "number_of_iterations": 109}
{"file": "strings/9-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.330891999999992, "program_length": 39, "number_of_explored_programs": 86, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.167, "explored_per_size_tokens": [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 4, 1, 3, 1, 7, 6, 2, 1, 4, 2, 5, 3, 2, 6, 1, 3, 2, 4, 3, 6, 2, 3, 3, 4, 0, 2, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1, 4, 3, 3, 5, 12, 6, 9, 15, 9, 10, 5, 3, 1], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), LoopWhile(AtStart [If(IsNumber [MakeLowercase] [MoveRight])]), LoopWhile(IsUppercase [If(IsNumber [MakeUppercase] [MoveRight])]), MoveLeft, Drop, LoopWhile(IsLowercase [If(AtEnd [MoveLeft] [Drop])]), Drop, Drop, LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), LoopWhile(NotAtStart [MoveRight, MoveRight]), MakeLowercase, Drop, MakeUppercase, LoopWhile(IsNumber [If(IsNotNumber [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsNotUppercase [MoveRight] [Drop])])])", "cost_per_iteration": [[2, 10], [5, 9], [11, 8], [18, 5], [25, 3], [45, 2], [72, 1], [85, 0]], "number_of_iterations": 86}
{"file": "strings/9-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.174028000000007, "program_length": 46, "number_of_explored_programs": 91, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.004, "time_cost": 0.026, "explored_per_size_tokens": [0, 0, 0, 1, 2, 1, 1, 0, 1, 4, 1, 1, 0, 3, 1, 4, 2, 1, 1, 1, 0, 2, 1, 1, 2, 1, 0, 2, 4, 0, 1, 3, 4, 2, 3, 2, 2, 3, 4, 3, 1, 1, 2, 3, 1, 1, 1, 3, 2, 1, 2, 4, 2, 1, 1], "explored_per_size_sequence": [0, 2, 1, 7, 3, 2, 6, 4, 2, 1, 4, 6, 12, 9, 8, 3, 7, 2, 7, 2, 2, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveLeft])]), LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [MoveLeft])]), Drop, LoopWhile(AtEnd [If(IsNotUppercase [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(AtStart [MoveRight] [MoveLeft])]), LoopWhile(AtEnd [If(IsUppercase [MakeLowercase] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsUppercase [MakeLowercase] [Drop])]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(IsLetter [If(IsLowercase [MakeUppercase] [Drop])]), Drop, MoveRight, LoopWhile(AtEnd [If(IsNotSpace [MakeLowercase] [MakeUppercase])]), MoveRight, LoopWhile(IsNumber [If(IsNotSpace [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[0, 10], [6, 9], [7, 8], [14, 7], [24, 6], [34, 5], [71, 4], [77, 3.89], [81, 2], [83, 1], [90, 0]], "number_of_iterations": 91}
{"file": "strings/9-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.462930999999998, "program_length": 24, "number_of_explored_programs": 384, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.01, "time_cost": 0.065, "explored_per_size_tokens": [0, 0, 2, 3, 1, 5, 6, 0, 5, 8, 11, 14, 15, 17, 25, 14, 23, 19, 29, 20, 20, 31, 22, 20, 17, 17, 8, 12, 7, 5, 4, 3, 1], "explored_per_size_sequence": [0, 3, 4, 8, 16, 25, 41, 42, 62, 53, 46, 43, 24, 17], "program": "Program([Drop, MoveRight, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), Drop, MakeLowercase, LoopWhile(IsLowercase [If(AtStart [Drop] [MoveLeft])]), MakeLowercase, Drop, LoopWhile(IsNumber [If(IsNotUppercase [MoveRight] [MoveLeft])]), LoopWhile(IsNumber [If(NotAtStart [MakeLowercase] [MoveLeft])])])", "cost_per_iteration": [[7, 9], [8, 4], [62, 3], [149, 2], [168, 1], [386, 0]], "number_of_iterations": 387}
{"file": "strings/9-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 10.176553000000013, "program_length": 22, "number_of_explored_programs": 112, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.004, "time_cost": 0.022, "explored_per_size_tokens": [0, 2, 2, 0, 4, 4, 4, 3, 1, 4, 2, 3, 3, 5, 3, 3, 3, 2, 3, 3, 0, 5, 4, 3, 6, 5, 5, 4, 3, 3, 6, 3, 3, 2, 1, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 9, 5, 9, 8, 5, 6, 4, 6, 3, 10, 12, 12, 9, 8, 2, 2], "program": "Program([Drop, MakeUppercase, Drop, MoveRight, LoopWhile(IsLowercase [If(IsSpace [MakeUppercase] [Drop])]), Drop, Drop, LoopWhile(IsUppercase [If(IsSpace [Drop] [MoveRight])]), LoopWhile(IsUppercase [MoveLeft, MakeUppercase]), Drop, Drop, LoopWhile(NotAtStart [MoveLeft, Drop])])", "cost_per_iteration": [[3, 10], [40, 7], [48, 5], [50, 3], [59, 2], [62, 1], [112, 0]], "number_of_iterations": 113}
{"file": "strings/9-3-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.21518800000000127, "program_length": 8, "number_of_explored_programs": 215, "program": "Program([MoveRight, MakeLowercase, LoopWhile(NotAtEnd [Drop, MakeLowercase]), MakeUppercase, Drop, MakeUppercase])", "cost_per_iteration": [[0, 4], [10, 3], [22, 2], [53, 1.11], [200, 1], [219, 0]], "number_of_iterations": 220}
