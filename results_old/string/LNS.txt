{"file": "strings/1-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0061029999999999696, "program_length": 1, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1], "explored_per_size_sequence": [0, 1], "program": "Program([Drop])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/1-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.008371999999999935, "program_length": 5, "number_of_explored_programs": 21, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 1, 0, 4, 4, 1, 1, 1, 3, 1, 0, 1, 2], "explored_per_size_sequence": [0, 6, 6, 4, 5], "program": "Program([LoopWhile(IsSpace [If(IsLowercase [MakeUppercase] [MakeLowercase])]), Drop])", "cost_per_iteration": [[20, 0]], "number_of_iterations": 21}
{"file": "strings/1-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.008684000000000025, "program_length": 6, "number_of_explored_programs": 31, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 3, 7, 2, 3, 4, 3, 2, 2, 1, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 9, 7, 7, 8], "program": "Program([MakeLowercase, Drop, LoopWhile(IsUppercase [If(IsLetter [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[30, 0]], "number_of_iterations": 31}
{"file": "strings/1-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007296999999999998, "program_length": 1, "number_of_explored_programs": 12, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 1, 1, 2, 2, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 1, 5, 2, 4], "program": "Program([Drop])", "cost_per_iteration": [[11, 0]], "number_of_iterations": 12}
{"file": "strings/1-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007332000000000005, "program_length": 5, "number_of_explored_programs": 13, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 2, 1, 2, 3, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 3, 4, 2], "program": "Program([LoopWhile(IsLowercase [If(IsNotLetter [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[12, 0]], "number_of_iterations": 13}
{"file": "strings/1-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007898000000000072, "program_length": 1, "number_of_explored_programs": 19, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 2, 1, 2, 2, 2, 1, 1, 2, 3, 1, 0, 1], "explored_per_size_sequence": [0, 1, 6, 6, 6], "program": "Program([Drop])", "cost_per_iteration": [[18, 0]], "number_of_iterations": 19}
{"file": "strings/1-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.14271699999999998, "program_length": 2, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 0, 1, 1], "explored_per_size_sequence": [0, 1, 1, 1], "program": "Program([Drop, MakeLowercase])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/1-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006686000000000081, "program_length": 2, "number_of_explored_programs": 14, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 3, 1, 2, 1, 0, 0, 1, 3, 2, 0, 0, 1], "explored_per_size_sequence": [0, 3, 4, 3, 4], "program": "Program([Drop, MoveRight])", "cost_per_iteration": [[13, 0]], "number_of_iterations": 14}
{"file": "strings/1-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007697999999999983, "program_length": 1, "number_of_explored_programs": 17, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 4, 3, 1, 0, 0, 1, 1, 4, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 5, 5, 3, 4], "program": "Program([Drop])", "cost_per_iteration": [[17, 0]], "number_of_iterations": 18}
{"file": "strings/1-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.029809000000000085, "program_length": 41, "number_of_explored_programs": 144, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.01, "explored_per_size_tokens": [0, 0, 2, 1, 1, 0, 0, 0, 3, 1, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 1, 4, 4, 2, 6, 6, 6, 5, 6, 12, 6, 4, 5, 4, 7, 4, 3, 10, 4, 6, 2, 4, 2, 4, 0, 3, 2, 0, 2, 1, 0, 1, 1], "explored_per_size_sequence": [0, 1, 2, 1, 1, 5, 3, 1, 4, 1, 6, 8, 11, 16, 20, 16, 16, 8, 7, 9, 2, 3, 2, 0, 1], "program": "Program([MoveRight, LoopWhile(IsLetter [If(IsUppercase [MakeUppercase] [Drop])]), LoopWhile(AtEnd [If(IsUppercase [Drop] [MoveLeft])]), MakeLowercase, LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MoveRight])]), LoopWhile(AtStart [If(NotAtEnd [MakeLowercase] [MakeUppercase])]), Drop, Drop, Drop, LoopWhile(IsNumber [If(IsNotSpace [MoveRight] [MakeUppercase])]), LoopWhile(IsNumber [If(NotAtStart [MoveLeft] [MoveRight])]), Drop, Drop, MoveLeft, LoopWhile(IsSpace [If(IsNotLowercase [MakeUppercase] [MakeLowercase])]), Drop, Drop, Drop, Drop, MakeUppercase])", "cost_per_iteration": [[2, 10], [4, 9], [12, 7], [20, 6], [29, 5], [52, 4], [113, 3], [120, 2], [136, 1], [145, 0]], "number_of_iterations": 146}
{"file": "strings/1-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.036263000000000045, "program_length": 23, "number_of_explored_programs": 288, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.014, "explored_per_size_tokens": [0, 0, 0, 2, 2, 3, 9, 12, 10, 7, 19, 14, 19, 8, 16, 15, 12, 9, 18, 10, 13, 17, 7, 11, 12, 13, 7, 6, 6, 2, 3, 2, 2, 2], "explored_per_size_sequence": [0, 1, 2, 11, 26, 25, 37, 24, 25, 27, 33, 33, 23, 15, 6], "program": "Program([Drop, Drop, MoveRight, MoveLeft, Drop, LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveLeft])]), LoopWhile(IsNotLowercase [MakeUppercase, Drop]), LoopWhile(NotAtStart [MakeLowercase, MakeLowercase]), Drop, Drop, MakeLowercase, LoopWhile(IsUppercase [If(IsNotLowercase [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[2, 10], [10, 9], [32, 8], [102, 7], [132, 4], [161, 3], [213, 2], [227, 1], [288, 0]], "number_of_iterations": 289}
{"file": "strings/1-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.024977000000000027, "program_length": 34, "number_of_explored_programs": 154, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.008, "explored_per_size_tokens": [0, 2, 2, 4, 5, 6, 4, 5, 5, 8, 8, 1, 3, 6, 1, 3, 2, 1, 0, 6, 2, 2, 7, 3, 4, 12, 7, 7, 9, 7, 6, 1, 3, 2, 6, 3, 0, 0, 1], "explored_per_size_sequence": [0, 5, 8, 16, 14, 11, 7, 6, 3, 3, 6, 12, 7, 14, 14, 19, 5, 3, 1], "program": "Program([LoopWhile(IsUppercase [If(IsNotLowercase [Drop] [MoveRight])]), Drop, MoveRight, MakeUppercase, MakeLowercase, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveRight])]), Drop, MakeUppercase, LoopWhile(IsLowercase [If(NotAtStart [MoveRight] [Drop])]), LoopWhile(IsNotSpace [Drop, MakeLowercase]), LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [MakeUppercase])]), LoopWhile(AtEnd [If(IsLetter [MoveRight] [Drop])]), MoveLeft, LoopWhile(IsSpace [If(NotAtEnd [Drop] [MakeUppercase])])])", "cost_per_iteration": [[1, 10], [8, 9], [66, 7], [72, 3], [74, 2], [102, 1], [156, 0]], "number_of_iterations": 157}
{"file": "strings/1-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.048624, "program_length": 24, "number_of_explored_programs": 310, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.01, "time_cost": 0.019, "explored_per_size_tokens": [0, 2, 3, 1, 3, 1, 2, 4, 4, 4, 8, 5, 7, 7, 7, 16, 16, 13, 15, 18, 16, 13, 18, 16, 8, 13, 12, 12, 11, 6, 10, 6, 10, 5, 6, 7, 2, 2, 0, 0, 1], "explored_per_size_sequence": [0, 5, 5, 3, 7, 6, 15, 19, 32, 35, 39, 47, 30, 25, 23, 13, 6], "program": "Program([Drop, Drop, LoopWhile(IsLetter [If(AtEnd [MoveRight] [MoveLeft])]), LoopWhile(IsNotLowercase [MakeLowercase, Drop]), LoopWhile(IsSpace [If(IsNotUppercase [MoveRight] [MoveLeft])]), LoopWhile(IsLowercase [If(AtEnd [MoveLeft] [Drop])]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), Drop])", "cost_per_iteration": [[8, 9], [18, 6], [27, 5], [37, 4], [92, 3], [104, 1], [311, 0]], "number_of_iterations": 312}
{"file": "strings/1-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01802300000000001, "program_length": 41, "number_of_explored_programs": 89, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 2, 0, 3, 0, 2, 2, 1, 8, 3, 1, 0, 1, 4, 3, 2, 1, 3, 2, 2, 3, 2, 2, 0, 1, 2, 3, 3, 1, 3, 2, 3, 4, 4, 4, 2, 2, 2, 1, 0, 2, 1, 2], "explored_per_size_sequence": [0, 2, 6, 9, 8, 5, 7, 4, 0, 3, 3, 3, 1, 5, 10, 5, 4, 8, 5, 1], "program": "Program([MoveRight, Drop, MoveRight, LoopWhile(AtEnd [If(IsUppercase [MoveLeft] [Drop])]), LoopWhile(IsLowercase [If(AtEnd [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(NotAtStart [MoveLeft] [Drop])]), Drop, MakeUppercase, MakeLowercase, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MakeLowercase])]), MoveLeft, LoopWhile(IsUppercase [If(AtEnd [MakeUppercase] [Drop])]), LoopWhile(IsLetter [If(IsNotLowercase [MakeUppercase] [Drop])]), LoopWhile(NotAtStart [MoveLeft, MakeLowercase]), LoopWhile(IsLetter [If(IsNotLowercase [MoveRight] [Drop])]), Drop, MakeUppercase, Drop])", "cost_per_iteration": [[12, 10], [27, 9], [31, 6], [43, 4], [45, 3], [51, 2], [75, 1], [88, 0]], "number_of_iterations": 89}
{"file": "strings/1-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.03378000000000003, "program_length": 20, "number_of_explored_programs": 268, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.012, "explored_per_size_tokens": [0, 1, 1, 1, 3, 8, 10, 15, 12, 21, 6, 19, 13, 12, 17, 18, 22, 12, 16, 13, 13, 10, 7, 5, 6, 1, 4, 1, 1], "explored_per_size_sequence": [0, 2, 7, 9, 16, 31, 49, 40, 42, 35, 19, 10, 6, 2], "program": "Program([Drop, MakeUppercase, Drop, Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeLowercase])]), LoopWhile(IsSpace [If(NotAtEnd [Drop] [MoveRight])]), MakeLowercase, Drop, LoopWhile(IsNumber [If(IsNotUppercase [MoveLeft] [MakeUppercase])]), Drop, Drop])", "cost_per_iteration": [[7, 10], [15, 8], [26, 7], [32, 6], [33, 5], [35, 4], [80, 3], [138, 2], [264, 1], [268, 0]], "number_of_iterations": 269}
{"file": "strings/1-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.023761000000000032, "program_length": 30, "number_of_explored_programs": 138, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.008, "explored_per_size_tokens": [0, 0, 1, 2, 2, 1, 1, 3, 5, 5, 2, 6, 4, 3, 2, 4, 6, 6, 5, 6, 4, 12, 10, 7, 5, 3, 6, 5, 5, 7, 6, 1, 1, 0, 1, 1], "explored_per_size_sequence": [0, 1, 4, 4, 5, 9, 8, 15, 9, 20, 20, 17, 17, 5, 4], "program": "Program([Drop, LoopWhile(AtStart [If(IsNotSpace [MoveRight] [MakeLowercase])]), Drop, LoopWhile(AtStart [If(AtEnd [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotLetter [MoveLeft] [Drop])]), Drop, Drop, Drop, Drop, MakeLowercase, Drop, LoopWhile(IsNotLetter [MoveRight, MakeUppercase]), LoopWhile(NotAtStart [MoveLeft, Drop])])", "cost_per_iteration": [[2, 10], [10, 9], [13, 8], [22, 7], [30, 6], [42, 2], [73, 1], [137, 0]], "number_of_iterations": 138}
{"file": "strings/1-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.19533600000000007, "program_length": 24, "number_of_explored_programs": 255, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.017, "explored_per_size_tokens": [0, 0, 0, 1, 3, 4, 5, 2, 2, 4, 2, 4, 5, 5, 8, 5, 18, 8, 13, 16, 13, 14, 16, 9, 7, 8, 11, 13, 9, 9, 7, 12, 5, 4, 4, 4, 3, 1, 1], "explored_per_size_sequence": [0, 2, 5, 10, 5, 3, 3, 2, 4, 6, 19, 25, 33, 46, 36, 24, 24, 4, 4], "program": "Program([MakeLowercase, MakeLowercase, Drop, Drop, MoveRight, LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), MoveLeft, Drop, Drop, MoveRight, Drop, Drop, LoopWhile(IsSpace [If(IsNotNumber [Drop] [MakeUppercase])]), MoveLeft, LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveLeft])])])", "cost_per_iteration": [[2, 9], [20, 8], [28, 7], [43, 6], [48, 5], [90, 4], [98, 3], [99, 1], [255, 0]], "number_of_iterations": 256}
{"file": "strings/1-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06807700000000017, "program_length": 15, "number_of_explored_programs": 374, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.016, "time_cost": 0.028, "explored_per_size_tokens": [0, 1, 0, 0, 3, 3, 5, 6, 11, 5, 14, 12, 9, 27, 25, 26, 24, 37, 26, 15, 17, 23, 20, 11, 14, 10, 9, 2, 0, 8, 7, 2, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 1, 7, 18, 19, 42, 62, 69, 47, 38, 35, 14, 11, 9], "program": "Program([MoveRight, Drop, Drop, LoopWhile(IsNumber [MakeLowercase, MakeUppercase]), MoveLeft, LoopWhile(IsNotSpace [Drop, Drop]), LoopWhile(IsNumber [If(NotAtEnd [MakeUppercase] [MoveRight])]), Drop])", "cost_per_iteration": [[2, 10], [3, 8], [9, 7], [32, 6], [45, 4], [71, 2], [193, 1], [377, 0]], "number_of_iterations": 378}
{"file": "strings/1-3-1.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.197681, "program_length": 6, "number_of_explored_programs": 1470, "search_depth": 1, "time_destroy": 0.01, "time_repair": 0.06, "time_cost": 0.082, "explored_per_size_tokens": [0, 5, 14, 32, 72, 109, 136, 143, 171, 143, 149, 127, 104, 103, 51, 31, 40, 25, 5, 6, 4], "explored_per_size_sequence": [0, 30, 86, 177, 275, 332, 249, 198, 123], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 4], [4, 3], [63, 2], [100, 1], [1661, 0]], "number_of_iterations": 1662}
{"file": "strings/1-3-2.pl", "test_cost": 1.3333333333333333, "train_cost": 0, "execution_time": 0.19616800000000012, "program_length": 7, "number_of_explored_programs": 1777, "search_depth": 1, "time_destroy": 0.01, "time_repair": 0.06, "time_cost": 0.078, "explored_per_size_tokens": [0, 5, 21, 52, 136, 178, 193, 176, 177, 161, 150, 127, 115, 99, 62, 47, 40, 14, 9, 3, 4, 3, 2, 1, 2], "explored_per_size_sequence": [0, 75, 169, 263, 403, 361, 265, 169, 43, 20, 6, 3], "program": "Program([LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [MakeUppercase])]), Drop, Drop, Drop])", "cost_per_iteration": [[6, 3], [13, 2], [79, 1], [1983, 0]], "number_of_iterations": 1984}
{"file": "strings/1-3-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.15415999999999996, "program_length": 8, "number_of_explored_programs": 1417, "search_depth": 1, "time_destroy": 0.007, "time_repair": 0.044, "time_cost": 0.065, "explored_per_size_tokens": [0, 2, 1, 7, 17, 22, 41, 86, 87, 98, 108, 110, 108, 101, 106, 108, 81, 85, 69, 51, 34, 27, 27, 20, 6, 8, 3, 2, 0, 1, 1], "explored_per_size_sequence": [0, 4, 2, 19, 53, 76, 132, 225, 230, 241, 209, 128, 70, 28], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 6], [27, 4], [44, 3], [54, 2], [95, 1], [1460, 0]], "number_of_iterations": 1461}
{"file": "strings/1-3-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.017691000000000012, "program_length": 17, "number_of_explored_programs": 52, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 3, 3, 5, 4, 3, 2, 4, 3, 5, 7, 2, 4, 0, 3, 2, 1], "explored_per_size_sequence": [0, 4, 7, 6, 9, 6, 6, 7, 4, 1, 1, 1], "program": "Program([MakeUppercase, MoveRight, Drop, MakeUppercase, Drop, MakeLowercase, LoopWhile(AtStart [If(NotAtEnd [MoveRight] [MoveLeft])]), MakeUppercase, Drop, LoopWhile(AtStart [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[4, 4], [16, 3], [44, 1], [52, 0]], "number_of_iterations": 53}
{"file": "strings/1-3-5.pl", "test_cost": 1.3333333333333333, "train_cost": 0, "execution_time": 0.10215400000000008, "program_length": 10, "number_of_explored_programs": 796, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.03, "time_cost": 0.04, "explored_per_size_tokens": [0, 5, 15, 28, 67, 85, 76, 98, 78, 82, 60, 53, 46, 28, 26, 21, 18, 4, 3, 2, 1], "explored_per_size_sequence": [0, 32, 96, 132, 200, 149, 107, 75, 1, 3, 1], "program": "Program([MakeLowercase, MakeUppercase, LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), MakeLowercase, Drop, Drop, Drop])", "cost_per_iteration": [[2, 3], [16, 2], [18, 1], [887, 0]], "number_of_iterations": 888}
{"file": "strings/1-3-6.pl", "test_cost": 1.1111111111111112, "train_cost": 0, "execution_time": 0.029247000000000023, "program_length": 19, "number_of_explored_programs": 124, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.008, "explored_per_size_tokens": [0, 2, 4, 0, 4, 11, 6, 5, 6, 10, 12, 8, 17, 9, 3, 3, 4, 6, 5, 3, 1, 2, 1, 0, 1, 1], "explored_per_size_sequence": [0, 4, 15, 11, 20, 18, 15, 20, 11, 5, 5], "program": "Program([MakeUppercase, LoopWhile(IsUppercase [If(IsNotSpace [MoveRight] [MoveLeft])]), LoopWhile(AtEnd [If(IsNotUppercase [MakeLowercase] [MoveLeft])]), LoopWhile(AtEnd [If(IsNotUppercase [MakeUppercase] [MoveLeft])]), Drop, LoopWhile(NotAtEnd [MoveRight, Drop]), MakeLowercase, Drop])", "cost_per_iteration": [[9, 3], [40, 2], [45, 1], [125, 0]], "number_of_iterations": 126}
{"file": "strings/1-3-7.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.19025099999999995, "program_length": 14, "number_of_explored_programs": 1538, "search_depth": 1, "time_destroy": 0.01, "time_repair": 0.058, "time_cost": 0.077, "explored_per_size_tokens": [0, 5, 17, 33, 78, 115, 140, 162, 166, 142, 156, 126, 102, 88, 71, 47, 38, 27, 8, 6, 8, 3], "explored_per_size_sequence": [0, 26, 101, 195, 301, 331, 274, 180, 122, 8], "program": "Program([LoopWhile(IsUppercase [If(AtStart [MoveRight] [Drop])]), MakeUppercase, LoopWhile(AtEnd [If(IsNotUppercase [MoveLeft] [Drop])]), MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[1, 4], [5, 3], [52, 2], [55, 1], [1736, 0]], "number_of_iterations": 1737}
{"file": "strings/1-3-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011089000000000127, "program_length": 5, "number_of_explored_programs": 18, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 2, 0, 2, 2, 1, 2, 0, 3, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 4, 4, 5, 2], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsLowercase [MakeUppercase, Drop])])", "cost_per_iteration": [[3, 4], [17, 0]], "number_of_iterations": 18}
{"file": "strings/1-3-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.2599419999999999, "program_length": 9, "number_of_explored_programs": 658, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.027, "time_cost": 0.037, "explored_per_size_tokens": [0, 5, 13, 15, 42, 65, 52, 52, 77, 77, 63, 44, 45, 36, 28, 14, 10, 12, 1, 5, 2], "explored_per_size_sequence": [0, 38, 94, 171, 172, 108, 72, 1, 2], "program": "Program([MakeUppercase, LoopWhile(AtEnd [MakeUppercase, MoveLeft]), MoveRight, LoopWhile(NotAtEnd [MakeLowercase, Drop]), Drop])", "cost_per_iteration": [[9, 4], [11, 1], [710, 0]], "number_of_iterations": 711}
{"file": "strings/1-4-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010785000000000045, "program_length": 6, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 2, 0, 1, 0, 1, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 2, 2], "program": "Program([LoopWhile(IsLowercase [If(IsSpace [MoveLeft] [MakeUppercase])]), MoveRight, MoveLeft])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/1-4-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011433999999999944, "program_length": 1, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 2], "explored_per_size_sequence": [0, 1, 1, 1], "program": "Program([MakeUppercase])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/1-4-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.017123, "program_length": 1, "number_of_explored_programs": 37, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 4, 6, 2, 3, 3, 5, 2, 3, 2, 0, 3, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 7, 11, 12, 7], "program": "Program([MakeUppercase])", "cost_per_iteration": [[36, 0]], "number_of_iterations": 37}
{"file": "strings/1-4-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011935000000000029, "program_length": 8, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 3, 0, 2, 1, 2, 0, 1, 1, 1], "explored_per_size_sequence": [0, 1, 3, 4, 3], "program": "Program([MakeUppercase, LoopWhile(IsLowercase [Drop, MakeUppercase]), LoopWhile(IsNumber [If(IsUppercase [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/1-4-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.012066000000000021, "program_length": 13, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 1, 2, 1, 3, 1, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 4, 4, 2], "program": "Program([LoopWhile(AtEnd [If(IsUppercase [MakeUppercase] [MoveRight])]), MakeUppercase, LoopWhile(IsSpace [If(AtEnd [MoveRight] [MakeLowercase])]), LoopWhile(IsSpace [If(IsLowercase [MoveLeft] [MoveRight])])])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/1-4-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009763999999999995, "program_length": 9, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1], "explored_per_size_sequence": [0, 0, 1, 1, 2], "program": "Program([LoopWhile(IsNotLowercase [MoveRight, MakeUppercase]), MakeUppercase, LoopWhile(AtStart [If(NotAtStart [MakeUppercase] [MoveRight])]), MoveRight])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/1-4-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00809099999999996, "program_length": 9, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 0, 1, 0, 1, 0, 3], "explored_per_size_sequence": [0, 2, 0, 3, 2], "program": "Program([LoopWhile(IsSpace [If(IsNotLetter [MoveRight] [MoveLeft])]), MakeUppercase, LoopWhile(IsSpace [If(IsLowercase [MakeLowercase] [Drop])])])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/1-4-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010986999999999969, "program_length": 5, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 0, 3, 2, 1, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 4, 1], "program": "Program([MakeUppercase, LoopWhile(IsSpace [MakeUppercase, Drop]), MakeUppercase])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/1-4-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.013871000000000078, "program_length": 2, "number_of_explored_programs": 26, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 5, 0, 4, 1, 2, 1, 2, 4, 3, 0, 2, 1], "explored_per_size_sequence": [0, 3, 7, 6, 10], "program": "Program([MakeUppercase, MoveRight])", "cost_per_iteration": [[25, 0]], "number_of_iterations": 26}
{"file": "strings/1-5-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.25202, "program_length": 9, "number_of_explored_programs": 702, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.026, "time_cost": 0.035, "explored_per_size_tokens": [0, 5, 23, 39, 112, 95, 70, 59, 65, 79, 59, 13, 31, 33, 0, 7, 12], "explored_per_size_sequence": [0, 98, 185, 201, 218], "program": "Program([LoopWhile(IsLowercase [If(AtEnd [MoveLeft] [MoveRight])]), LoopWhile(IsSpace [If(IsLowercase [MakeLowercase] [MoveRight])]), Drop])", "cost_per_iteration": [[829, 0]], "number_of_iterations": 830}
{"file": "strings/1-5-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011823000000000139, "program_length": 5, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 0, 2, 1, 1, 0, 0, 1, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 0, 5, 1], "program": "Program([MakeUppercase, LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), Drop])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/1-5-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05615899999999985, "program_length": 10, "number_of_explored_programs": 469, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.016, "time_cost": 0.02, "explored_per_size_tokens": [0, 5, 21, 22, 69, 68, 53, 36, 42, 51, 39, 10, 21, 27, 1, 2, 2], "explored_per_size_sequence": [0, 60, 125, 142, 142], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [MoveRight])]), Drop, LoopWhile(AtStart [If(IsUppercase [MakeLowercase] [MoveRight])]), MakeLowercase])", "cost_per_iteration": [[578, 0]], "number_of_iterations": 579}
{"file": "strings/1-5-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.08024799999999987, "program_length": 9, "number_of_explored_programs": 685, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.023, "time_cost": 0.029, "explored_per_size_tokens": [0, 5, 22, 35, 117, 97, 78, 40, 56, 74, 52, 12, 50, 30, 1, 8, 8], "explored_per_size_sequence": [0, 106, 153, 216, 210], "program": "Program([LoopWhile(IsLowercase [If(IsNotLetter [MoveLeft] [MoveRight])]), Drop, LoopWhile(IsUppercase [If(IsNumber [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[823, 0]], "number_of_iterations": 824}
{"file": "strings/1-5-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06998300000000002, "program_length": 6, "number_of_explored_programs": 410, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.02, "time_cost": 0.026, "explored_per_size_tokens": [0, 5, 15, 23, 65, 55, 48, 32, 31, 38, 25, 10, 25, 26, 1, 6, 5], "explored_per_size_sequence": [0, 57, 102, 119, 132], "program": "Program([LoopWhile(IsLowercase [If(IsNotUppercase [MoveRight] [MoveLeft])]), Drop, MoveLeft])", "cost_per_iteration": [[474, 0]], "number_of_iterations": 475}
{"file": "strings/1-5-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02494699999999994, "program_length": 7, "number_of_explored_programs": 135, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 5, 6, 11, 28, 13, 12, 11, 13, 10, 9, 0, 6, 6, 0, 2, 3], "explored_per_size_sequence": [0, 33, 29, 36, 37], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotLetter [Drop] [MoveRight])]), MakeLowercase, Drop])", "cost_per_iteration": [[155, 0]], "number_of_iterations": 156}
{"file": "strings/1-5-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04768300000000003, "program_length": 10, "number_of_explored_programs": 372, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.016, "explored_per_size_tokens": [0, 5, 12, 22, 68, 47, 39, 30, 30, 40, 32, 3, 18, 17, 2, 5, 2], "explored_per_size_sequence": [0, 71, 87, 93, 121], "program": "Program([LoopWhile(IsLowercase [If(NotAtEnd [MoveRight] [MoveLeft])]), MakeUppercase, LoopWhile(IsLowercase [If(IsNotUppercase [MakeLowercase] [MoveRight])]), Drop])", "cost_per_iteration": [[425, 0]], "number_of_iterations": 426}
{"file": "strings/1-5-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.030641999999999947, "program_length": 5, "number_of_explored_programs": 241, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.009, "explored_per_size_tokens": [0, 5, 14, 9, 33, 37, 23, 23, 21, 25, 24, 2, 12, 10, 0, 1, 2], "explored_per_size_sequence": [0, 34, 76, 59, 72], "program": "Program([LoopWhile(IsLowercase [If(IsNotSpace [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[282, 0]], "number_of_iterations": 283}
{"file": "strings/1-5-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.029827000000000048, "program_length": 6, "number_of_explored_programs": 197, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.009, "explored_per_size_tokens": [0, 5, 12, 8, 28, 28, 22, 18, 17, 23, 16, 4, 4, 10, 0, 1, 1], "explored_per_size_sequence": [0, 30, 52, 56, 59], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MoveLeft] [MoveRight])]), Drop, MakeLowercase])", "cost_per_iteration": [[219, 0]], "number_of_iterations": 220}
{"file": "strings/1-6-1.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.014965000000000006, "program_length": 4, "number_of_explored_programs": 32, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 0, 1, 1, 0, 1, 2, 0, 2, 2, 4, 2, 3, 3, 0, 2, 1, 2, 1, 1, 2], "explored_per_size_sequence": [0, 2, 0, 1, 3, 4, 5, 8, 7, 2], "program": "Program([Drop, Drop, Drop, Drop])", "cost_per_iteration": [[3, 3], [7, 2], [16, 1], [31, 0]], "number_of_iterations": 32}
{"file": "strings/1-6-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.21534999999999993, "program_length": 14, "number_of_explored_programs": 379, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.015, "time_cost": 0.028, "explored_per_size_tokens": [0, 3, 3, 9, 15, 14, 17, 16, 9, 27, 15, 19, 16, 22, 23, 17, 19, 23, 19, 13, 8, 4, 10, 14, 7, 7, 6, 7, 3, 3, 4, 5, 2], "explored_per_size_sequence": [0, 12, 22, 38, 51, 48, 45, 35, 35, 26, 15, 21, 18, 7, 4, 1, 1], "program": "Program([Drop, LoopWhile(IsNumber [If(NotAtEnd [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(AtStart [Drop] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNotSpace [MakeLowercase] [Drop])]), MakeUppercase])", "cost_per_iteration": [[1, 6], [5, 5], [24, 4], [27, 3], [31, 2], [61, 1], [384, 0]], "number_of_iterations": 385}
{"file": "strings/1-6-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.019935999999999954, "program_length": 25, "number_of_explored_programs": 79, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 2, 0, 0, 4, 0, 1, 0, 0, 4, 1, 1, 0, 2, 1, 0, 6, 4, 7, 8, 5, 3, 4, 5, 6, 7, 2, 1, 2, 2, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 2, 4, 8, 7, 13, 15, 11, 8, 6, 1], "program": "Program([LoopWhile(AtEnd [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(IsSpace [If(IsNotLetter [Drop] [MoveRight])]), LoopWhile(IsUppercase [If(NotAtStart [MakeLowercase] [Drop])]), MoveRight, MoveLeft, LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), MakeLowercase, MakeLowercase, Drop, LoopWhile(AtEnd [If(NotAtEnd [Drop] [MoveLeft])])])", "cost_per_iteration": [[5, 3], [30, 2], [44, 1], [79, 0]], "number_of_iterations": 80}
{"file": "strings/1-6-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.012526999999999955, "program_length": 6, "number_of_explored_programs": 29, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 3, 1, 0, 0, 5, 3, 3, 1, 3, 4, 1, 2, 1, 0, 0, 2], "explored_per_size_sequence": [0, 3, 6, 8, 7, 4, 0, 1], "program": "Program([Drop, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[7, 5], [10, 4], [23, 1], [30, 0]], "number_of_iterations": 31}
{"file": "strings/1-6-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009166000000000007, "program_length": 10, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 1, 0, 1], "program": "Program([LoopWhile(AtEnd [If(IsUppercase [Drop] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/1-7-1.pl", "test_cost": 1.7777777777777777, "train_cost": 0, "execution_time": 2.660032, "program_length": 30, "number_of_explored_programs": 20943, "search_depth": 9, "time_destroy": 0.101, "time_repair": 0.696, "time_cost": 1.206, "explored_per_size_tokens": [0, 5, 12, 18, 79, 143, 291, 509, 729, 949, 1046, 1197, 1530, 1669, 1843, 1951, 1757, 1543, 1291, 1177, 997, 684, 409, 425, 306, 128, 92, 78, 38, 14, 9, 11, 4, 4, 3, 2], "explored_per_size_sequence": [0, 46, 145, 752, 1792, 2957, 3981, 4223, 3389, 2404, 1169, 49, 21, 8, 7], "program": "Program([LoopWhile(IsUppercase [If(AtStart [MoveRight] [MoveLeft])]), Drop, LoopWhile(AtEnd [If(IsNotSpace [MoveRight] [MoveLeft])]), LoopWhile(AtEnd [If(IsNumber [MoveRight] [Drop])]), LoopWhile(IsLetter [MakeUppercase, Drop]), Drop, LoopWhile(NotAtEnd [MoveRight, Drop]), LoopWhile(IsLowercase [If(AtStart [MakeLowercase] [MoveLeft])]), MakeUppercase, MoveLeft, Drop, LoopWhile(NotAtEnd [MoveRight, Drop])])", "cost_per_iteration": [[27, 11], [33, 7], [51, 6], [77, 4], [82, 3], [98, 2], [24607, 1], [24659, 0]], "number_of_iterations": 24660}
{"file": "strings/1-8-1.pl", "test_cost": 1.8888888888888888, "train_cost": 0, "execution_time": 0.013897999999999744, "program_length": 25, "number_of_explored_programs": 73, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 0, 0, 1, 0, 1, 2, 0, 4, 3, 6, 2, 7, 4, 0, 3, 2, 2, 2, 2, 1, 1, 2, 2, 4, 2, 2, 2, 2, 2, 0, 3, 4, 1, 1, 2, 1], "explored_per_size_sequence": [0, 0, 0, 6, 6, 13, 6, 3, 4, 2, 7, 7, 5, 8, 1, 3, 2], "program": "Program([LoopWhile(IsSpace [MoveRight, MoveLeft]), MakeLowercase, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), LoopWhile(IsNumber [If(IsNotNumber [MoveRight] [MoveLeft])]), MoveRight, Drop, Drop, Drop, MakeLowercase, LoopWhile(AtStart [If(IsNotUppercase [MoveRight] [MoveLeft])]), LoopWhile(IsSpace [If(IsNotLowercase [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[2, 10], [20, 6], [27, 4], [37, 3], [50, 2], [53, 1], [73, 0]], "number_of_iterations": 74}
{"file": "strings/1-9-1.pl", "test_cost": 3.111111111111111, "train_cost": 0, "execution_time": 0.09945099999999973, "program_length": 16, "number_of_explored_programs": 875, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.025, "time_cost": 0.041, "explored_per_size_tokens": [0, 1, 2, 1, 3, 1, 1, 1, 1, 0, 14, 15, 21, 34, 43, 45, 58, 58, 62, 48, 62, 52, 50, 48, 36, 42, 27, 30, 24, 17, 10, 6, 10, 10, 9, 5, 8, 2, 5, 5, 2, 1, 4, 1], "explored_per_size_sequence": [0, 3, 4, 2, 7, 2, 4, 3, 4, 3, 25, 38, 89, 124, 147, 150, 116, 86, 43, 19, 3, 3], "program": "Program([LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [MoveRight])]), Drop, Drop, MoveRight, Drop, Drop, Drop, Drop, Drop, MakeUppercase, MakeUppercase, Drop, Drop])", "cost_per_iteration": [[11, 8], [24, 7], [26, 6], [29, 5], [42, 3], [106, 2], [638, 1], [889, 0]], "number_of_iterations": 890}
{"file": "strings/1-10-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.08378599999999992, "program_length": 17, "number_of_explored_programs": 832, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.022, "time_cost": 0.035, "explored_per_size_tokens": [0, 5, 14, 21, 54, 59, 67, 56, 63, 83, 69, 60, 58, 41, 42, 30, 32, 20, 7, 14, 13, 6, 8, 1, 6, 1, 2], "explored_per_size_sequence": [0, 41, 84, 140, 181, 140, 114, 81, 41, 9, 0, 1], "program": "Program([LoopWhile(IsLetter [MoveRight, MoveRight]), MoveRight, LoopWhile(IsUppercase [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(IsLowercase [If(IsNotLowercase [MakeUppercase] [Drop])]), LoopWhile(AtStart [If(IsNotNumber [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[224, 5], [236, 4], [834, 2], [839, 1], [898, 0]], "number_of_iterations": 899}
{"file": "strings/1-11-1.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.188291, "program_length": 15, "number_of_explored_programs": 1601, "search_depth": 1, "time_destroy": 0.007, "time_repair": 0.045, "time_cost": 0.084, "explored_per_size_tokens": [0, 2, 1, 2, 4, 10, 8, 33, 44, 53, 88, 139, 164, 139, 142, 138, 131, 115, 90, 95, 60, 55, 32, 18, 19, 7, 5, 3, 2, 2], "explored_per_size_sequence": [0, 4, 6, 10, 41, 103, 181, 263, 301, 287, 203, 129, 64, 9], "program": "Program([LoopWhile(IsUppercase [If(IsNumber [Drop] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), Drop, MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[25, 7], [29, 5], [35, 4], [43, 3], [65, 2], [82, 1], [1680, 0]], "number_of_iterations": 1681}
{"file": "strings/1-12-1.pl", "test_cost": 1, "train_cost": 1, "execution_time": 10.000093, "program_length": 20, "number_of_explored_programs": 79456, "search_depth": 30, "time_destroy": 0.321, "time_repair": 2.386, "time_cost": 4.792, "explored_per_size_tokens": [0, 5, 19, 27, 56, 84, 74, 189, 461, 1135, 2092, 3075, 3671, 4528, 4931, 5669, 5803, 5862, 6370, 7306, 6169, 4794, 3786, 3682, 3410, 2046, 1098, 1408, 903, 227, 247, 186, 53, 30, 25, 13, 8, 3, 4, 5, 2], "explored_per_size_sequence": [0, 38, 111, 132, 1865, 5305, 9754, 14383, 16283, 14421, 10210, 5714, 644, 178, 143, 105, 93, 43, 19, 12, 3], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(AtEnd [Drop] [MoveRight])]), Drop, MakeUppercase, MoveRight, LoopWhile(IsLetter [If(AtStart [Drop] [MoveRight])]), LoopWhile(IsUppercase [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(NotAtEnd [Drop, MakeLowercase]), Drop])", "cost_per_iteration": [[12, 11], [238, 10], [735, 9], [774, 8], [819, 7], [842, 6], [862, 5], [4462, 3], [4504, 2], [4858, 1]], "number_of_iterations": 91829}
{"file": "strings/1-13-1.pl", "test_cost": 0.6666666666666666, "train_cost": 0, "execution_time": 0.03604400000000041, "program_length": 35, "number_of_explored_programs": 235, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.012, "explored_per_size_tokens": [0, 0, 2, 0, 2, 1, 4, 2, 1, 5, 5, 11, 6, 9, 9, 9, 15, 10, 15, 14, 9, 12, 14, 10, 10, 13, 7, 10, 6, 6, 7, 4, 1, 1, 3, 2], "explored_per_size_sequence": [0, 2, 3, 7, 15, 23, 23, 38, 28, 25, 20, 24, 12, 10, 4, 1], "program": "Program([LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(AtEnd [If(IsNotLetter [MakeLowercase] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MoveLeft])]), Drop, MakeUppercase, LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [MoveRight])]), LoopWhile(AtEnd [If(NotAtEnd [MoveRight] [MakeLowercase])]), LoopWhile(NotAtEnd [Drop, MakeUppercase]), LoopWhile(IsLowercase [If(AtStart [Drop] [MoveLeft])]), LoopWhile(IsLowercase [If(IsNotLowercase [MoveLeft] [MakeLowercase])]), Drop])", "cost_per_iteration": [[7, 13], [9, 11], [10, 10], [13, 9], [14, 4], [151, 3], [175, 2], [217, 1], [235, 0]], "number_of_iterations": 236}
{"file": "strings/1-14-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.04921800000000154, "program_length": 31, "number_of_explored_programs": 325, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.01, "time_cost": 0.02, "explored_per_size_tokens": [0, 2, 1, 0, 3, 1, 0, 1, 0, 0, 2, 2, 1, 0, 1, 2, 3, 5, 6, 1, 5, 8, 8, 11, 5, 6, 15, 6, 12, 22, 24, 21, 21, 26, 28, 13, 13, 9, 15, 4, 10, 6, 2, 1, 1, 0, 2], "explored_per_size_sequence": [0, 4, 2, 0, 3, 2, 1, 5, 6, 10, 12, 15, 34, 35, 45, 45, 36, 28, 20, 12, 7, 2, 1], "program": "Program([MoveRight, Drop, Drop, Drop, MoveLeft, LoopWhile(IsUppercase [If(NotAtEnd [Drop] [MoveRight])]), LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [Drop])]), LoopWhile(AtEnd [If(IsUppercase [MoveRight] [MakeLowercase])]), LoopWhile(IsNotUppercase [Drop, Drop]), Drop, Drop, Drop, MakeUppercase, MoveLeft, MakeUppercase, Drop])", "cost_per_iteration": [[6, 16], [10, 15], [13, 13], [14, 8], [16, 7], [42, 5], [62, 4], [130, 3], [132, 2], [148, 1], [324, 0]], "number_of_iterations": 325}
{"file": "strings/1-15-1.pl", "test_cost": 2, "train_cost": 0, "execution_time": 0.6566339999999986, "program_length": 26, "number_of_explored_programs": 8057, "search_depth": 4, "time_destroy": 0.036, "time_repair": 0.199, "time_cost": 0.287, "explored_per_size_tokens": [0, 5, 25, 291, 1155, 1238, 986, 785, 771, 986, 685, 163, 416, 380, 27, 54, 79, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 976, 1996, 2472, 2599, 1, 3, 0, 2, 4, 1, 1, 2], "program": "Program([LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), LoopWhile(AtStart [If(NotAtStart [MakeUppercase] [MoveLeft])]), Drop, MoveLeft, LoopWhile(IsLetter [If(IsNotNumber [MoveLeft] [Drop])]), MoveLeft, Drop, Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MakeUppercase])])])", "cost_per_iteration": [[10605, 7], [10607, 6], [10608, 5], [10612, 4], [10620, 0]], "number_of_iterations": 10621}
{"file": "strings/1-16-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.10893100000000011, "program_length": 29, "number_of_explored_programs": 851, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.023, "time_cost": 0.053, "explored_per_size_tokens": [0, 3, 1, 2, 4, 3, 2, 4, 11, 12, 17, 19, 17, 36, 43, 44, 42, 59, 56, 68, 53, 46, 64, 45, 43, 36, 31, 13, 18, 20, 10, 9, 4, 8, 1, 2, 2, 2, 0, 0, 1], "explored_per_size_sequence": [0, 5, 4, 14, 22, 20, 40, 33, 63, 73, 65, 109, 100, 104, 88, 58, 38, 13, 1, 1], "program": "Program([Drop, MoveRight, LoopWhile(IsNotUppercase [MoveRight, MoveRight]), MoveLeft, Drop, MoveLeft, MakeLowercase, MoveLeft, MoveLeft, LoopWhile(IsLetter [If(AtStart [MakeUppercase] [Drop])]), MoveLeft, LoopWhile(IsSpace [If(IsNotUppercase [MakeLowercase] [MoveLeft])]), LoopWhile(IsSpace [If(IsUppercase [MakeUppercase] [Drop])]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[3, 19], [20, 18], [27, 16], [49, 8], [106, 7], [108, 5], [203, 4], [352, 3], [386, 2], [717, 1], [860, 0]], "number_of_iterations": 861}
{"file": "strings/1-17-1.pl", "test_cost": 5.888888888888889, "train_cost": 0, "execution_time": 1.210368, "program_length": 27, "number_of_explored_programs": 7021, "search_depth": 2, "time_destroy": 0.034, "time_repair": 0.257, "time_cost": 0.639, "explored_per_size_tokens": [0, 0, 1, 2, 1, 2, 2, 1, 6, 8, 2, 7, 10, 17, 17, 18, 53, 83, 157, 242, 329, 425, 561, 586, 594, 607, 577, 493, 451, 373, 336, 279, 174, 171, 152, 60, 53, 50, 30, 20, 17, 9, 22, 11, 5, 3, 3, 1], "explored_per_size_sequence": [0, 0, 3, 9, 10, 14, 22, 18, 27, 36, 38, 79, 120, 288, 490, 790, 1069, 1188, 992, 786, 567, 289, 111, 49, 24, 2], "program": "Program([MoveRight, MoveRight, MakeLowercase, MoveLeft, LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeUppercase])]), Drop, MoveRight, Drop, LoopWhile(IsUppercase [Drop, MoveLeft]), Drop, MoveRight, MakeUppercase, LoopWhile(IsUppercase [Drop, MakeUppercase]), Drop, MakeUppercase, MoveRight, LoopWhile(IsLowercase [If(AtStart [MakeLowercase] [Drop])])])", "cost_per_iteration": [[0, 22], [16, 21], [28, 20], [45, 10], [163, 9], [273, 8], [280, 7], [284, 6], [339, 5], [361, 4], [1498, 3], [6341, 2], [7085, 1], [7284, 0]], "number_of_iterations": 7285}
{"file": "strings/1-18-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.0892570000000001, "program_length": 22, "number_of_explored_programs": 6518, "search_depth": 3, "time_destroy": 0.028, "time_repair": 0.227, "time_cost": 0.571, "explored_per_size_tokens": [0, 4, 7, 3, 13, 9, 10, 5, 11, 8, 18, 8, 20, 37, 71, 99, 159, 198, 264, 358, 400, 425, 512, 519, 515, 487, 433, 402, 353, 322, 237, 178, 154, 97, 73, 37, 37, 11, 6, 6, 7, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], "explored_per_size_sequence": [0, 15, 25, 27, 35, 16, 4, 25, 94, 262, 530, 903, 1033, 1169, 1011, 729, 443, 164, 33], "program": "Program([LoopWhile(IsNotSpace [MoveRight, MakeLowercase]), LoopWhile(IsUppercase [If(IsNotSpace [MakeUppercase] [MakeLowercase])]), LoopWhile(IsNumber [If(IsLetter [MoveLeft] [MakeLowercase])]), Drop, Drop, LoopWhile(IsLetter [Drop, Drop]), MakeLowercase, LoopWhile(IsNumber [If(AtEnd [MakeUppercase] [MoveLeft])]), MoveLeft])", "cost_per_iteration": [[62, 19], [116, 18], [127, 17], [136, 16], [137, 15], [155, 7], [190, 6], [351, 5], [3437, 4], [6679, 3], [6691, 2], [6695, 1], [6753, 0]], "number_of_iterations": 6754}
{"file": "strings/1-19-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.014810999999999908, "program_length": 10, "number_of_explored_programs": 40, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 0, 3, 1, 2, 4, 6, 6, 1, 1, 3, 4, 1, 1, 1, 3, 0, 1, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 8, 8, 11, 7, 4, 0, 1], "program": "Program([Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveRight])]), Drop, LoopWhile(IsNumber [If(AtEnd [MoveRight] [Drop])])])", "cost_per_iteration": [[6, 9], [8, 8], [15, 1], [39, 0]], "number_of_iterations": 40}
{"file": "strings/1-20-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 4.79725, "program_length": 29, "number_of_explored_programs": 41468, "search_depth": 16, "time_destroy": 0.164, "time_repair": 1.172, "time_cost": 2.258, "explored_per_size_tokens": [0, 3, 1, 0, 2, 1, 2, 2, 2, 3, 16, 32, 83, 237, 404, 941, 1456, 2231, 2888, 3560, 3988, 4369, 3936, 3423, 3075, 2684, 2304, 1670, 1221, 1032, 698, 334, 250, 194, 109, 76, 54, 42, 42, 25, 18, 13, 11, 7, 10, 8, 3, 4, 3, 1], "explored_per_size_sequence": [0, 3, 3, 6, 7, 7, 13, 7, 8, 8, 883, 2270, 4088, 6242, 7103, 6976, 5788, 4152, 1867, 1256, 605, 79, 46, 29, 14, 8], "program": "Program([Drop, LoopWhile(IsLetter [Drop, MoveRight]), Drop, MoveLeft, LoopWhile(IsNotSpace [Drop, MoveLeft]), Drop, LoopWhile(IsSpace [If(NotAtEnd [MoveRight] [MakeLowercase])]), LoopWhile(AtStart [MoveLeft, MoveLeft]), MakeUppercase, LoopWhile(IsUppercase [If(IsNotNumber [MoveLeft] [MoveRight])]), Drop, MoveLeft, Drop, MoveLeft, MoveLeft, Drop, Drop])", "cost_per_iteration": [[1, 16], [3, 15], [7, 14], [37, 13], [40, 7], [42, 6], [97, 5], [108, 4], [122, 3], [156, 2], [207, 1], [47012, 0]], "number_of_iterations": 47013}
{"file": "strings/1-21-1.pl", "test_cost": 5.555555555555555, "train_cost": 0, "execution_time": 0.028815999999999953, "program_length": 27, "number_of_explored_programs": 104, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.009, "explored_per_size_tokens": [0, 2, 0, 2, 3, 8, 3, 2, 1, 7, 5, 2, 4, 7, 4, 5, 1, 5, 4, 3, 6, 3, 2, 6, 3, 2, 2, 3, 3, 3, 2, 1], "explored_per_size_sequence": [0, 4, 9, 13, 11, 8, 8, 8, 12, 13, 6, 10, 2], "program": "Program([LoopWhile(AtEnd [If(NotAtEnd [Drop] [MoveRight])]), MakeUppercase, LoopWhile(IsLetter [If(IsNotLetter [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(NotAtEnd [MoveLeft] [MakeUppercase])]), Drop, MakeUppercase, Drop, LoopWhile(IsNotSpace [MakeUppercase, Drop]), LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveRight])]), LoopWhile(IsSpace [If(IsNotSpace [MakeLowercase] [Drop])])])", "cost_per_iteration": [[11, 14], [15, 12], [17, 7], [52, 6], [57, 2], [90, 1], [104, 0]], "number_of_iterations": 105}
{"file": "strings/1-22-1.pl", "test_cost": 6.444444444444445, "train_cost": 0, "execution_time": 2.1786579999999995, "program_length": 29, "number_of_explored_programs": 13907, "search_depth": 5, "time_destroy": 0.058, "time_repair": 0.464, "time_cost": 1.112, "explored_per_size_tokens": [0, 0, 0, 1, 3, 5, 3, 9, 9, 7, 12, 6, 9, 11, 12, 17, 51, 90, 144, 243, 387, 507, 655, 779, 1002, 1118, 1233, 1272, 1054, 996, 854, 791, 673, 456, 333, 343, 220, 143, 100, 91, 63, 44, 32, 31, 26, 20, 17, 11, 8, 7, 4, 1, 3, 1], "explored_per_size_sequence": [0, 1, 2, 5, 18, 21, 23, 19, 18, 26, 138, 303, 454, 649, 997, 1328, 1672, 1895, 1824, 1573, 1251, 824, 310, 262, 161, 98, 25, 10], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), Drop, MakeUppercase, MoveRight, Drop, Drop, MakeLowercase, MakeUppercase, LoopWhile(AtStart [If(IsNotUppercase [MakeUppercase] [MoveLeft])]), MoveRight, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop, MakeUppercase, MoveRight, LoopWhile(IsLowercase [If(IsNotLowercase [MoveRight] [Drop])])])", "cost_per_iteration": [[4, 34], [9, 26], [15, 25], [25, 24], [82, 23], [126, 22], [137, 20], [146, 19], [155, 7], [234, 6], [285, 5], [296, 4], [297, 3], [858, 2], [11752, 1], [15351, 0]], "number_of_iterations": 15352}
{"file": "strings/1-23-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.024441000000001267, "program_length": 20, "number_of_explored_programs": 165, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.007, "explored_per_size_tokens": [0, 0, 1, 3, 1, 4, 3, 4, 3, 2, 5, 6, 8, 6, 9, 7, 14, 15, 10, 9, 13, 6, 8, 4, 3, 2, 2, 2, 2, 1, 4, 1, 2, 2, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 3, 4, 7, 7, 9, 13, 24, 20, 27, 16, 14, 5, 2, 5, 2, 2, 2, 1], "program": "Program([Drop, Drop, Drop, LoopWhile(IsNotNumber [MoveLeft, MakeLowercase]), LoopWhile(IsNumber [If(IsNotSpace [Drop] [MakeLowercase])]), MoveRight, MakeLowercase, Drop, MoveLeft, LoopWhile(IsLowercase [If(IsNotUppercase [MoveLeft] [MoveRight])]), Drop, Drop])", "cost_per_iteration": [[7, 7], [11, 6], [17, 5], [34, 4], [90, 3], [99, 2], [100, 1], [167, 0]], "number_of_iterations": 168}
{"file": "strings/1-24-1.pl", "test_cost": 0.7777777777777778, "train_cost": 0, "execution_time": 0.01531600000000033, "program_length": 16, "number_of_explored_programs": 66, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 0, 3, 0, 4, 9, 4, 6, 8, 8, 3, 7, 0, 5, 3, 0, 3, 2, 1], "explored_per_size_sequence": [0, 0, 9, 2, 8, 16, 9, 6, 8, 3, 4, 1], "program": "Program([LoopWhile(IsLowercase [If(AtStart [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsUppercase [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsNotUppercase [MoveRight] [MakeLowercase])]), Drop, Drop, MakeUppercase, Drop])", "cost_per_iteration": [[1, 2], [13, 1], [66, 0]], "number_of_iterations": 67}
{"file": "strings/1-25-1.pl", "test_cost": 0.5555555555555556, "train_cost": 0, "execution_time": 0.277963999999999, "program_length": 13, "number_of_explored_programs": 3222, "search_depth": 2, "time_destroy": 0.013, "time_repair": 0.077, "time_cost": 0.113, "explored_per_size_tokens": [0, 5, 25, 87, 209, 290, 287, 241, 296, 372, 349, 196, 177, 213, 160, 86, 53, 81, 43, 14, 15, 9, 6, 3, 3, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 146, 336, 552, 840, 669, 459, 195, 12, 5, 7, 1], "program": "Program([LoopWhile(IsUppercase [If(NotAtStart [MakeLowercase] [MoveLeft])]), LoopWhile(IsLetter [If(IsSpace [MoveRight] [Drop])]), MoveRight, LoopWhile(NotAtEnd [Drop, Drop]), MakeUppercase])", "cost_per_iteration": [[4, 9], [5, 6], [15, 5], [25, 4], [32, 2], [34, 1], [3694, 0]], "number_of_iterations": 3695}
{"file": "strings/1-26-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.017821999999998894, "program_length": 23, "number_of_explored_programs": 159, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 4, 8, 12, 14, 18, 19, 8, 15, 10, 10, 4, 7, 12, 3, 1, 4, 2, 6, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 6, 27, 42, 41, 28, 10, 2, 1, 2], "program": "Program([MoveRight, MakeLowercase, MoveRight, MakeLowercase, LoopWhile(AtEnd [If(IsNotLowercase [MakeLowercase] [MoveLeft])]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [MoveLeft])]), LoopWhile(IsLowercase [If(NotAtStart [MoveRight] [MakeLowercase])]), LoopWhile(IsNotLetter [Drop, Drop]), LoopWhile(AtEnd [If(IsLowercase [MoveLeft] [MakeLowercase])])])", "cost_per_iteration": [[9, 2], [150, 1], [165, 0]], "number_of_iterations": 166}
{"file": "strings/1-27-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.10303600000000002, "program_length": 16, "number_of_explored_programs": 682, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.027, "time_cost": 0.04, "explored_per_size_tokens": [0, 3, 8, 9, 11, 19, 13, 19, 28, 31, 41, 50, 31, 37, 57, 41, 47, 34, 29, 33, 21, 29, 17, 22, 14, 8, 7, 10, 5, 1, 1, 4, 1, 1], "explored_per_size_sequence": [0, 5, 22, 38, 52, 101, 113, 101, 95, 64, 48, 22, 17, 2, 2], "program": "Program([MakeLowercase, MoveRight, LoopWhile(IsUppercase [If(IsNotLowercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsNotUppercase [MakeUppercase, MoveRight]), MakeLowercase, MoveRight, MakeUppercase, LoopWhile(AtStart [If(IsNotSpace [Drop] [MakeLowercase])])])", "cost_per_iteration": [[3, 4], [48, 3], [62, 2], [71, 1], [705, 0]], "number_of_iterations": 706}
{"file": "strings/1-28-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.982358, "program_length": 15, "number_of_explored_programs": 22608, "search_depth": 10, "time_destroy": 0.113, "time_repair": 0.644, "time_cost": 0.819, "explored_per_size_tokens": [0, 5, 25, 251, 1246, 2144, 2625, 2871, 2520, 2353, 2250, 1732, 1506, 1190, 618, 578, 395, 105, 100, 85, 3, 3, 1, 1, 0, 1], "explored_per_size_sequence": [0, 872, 2376, 3949, 5712, 4611, 3276, 1789, 23], "program": "Program([LoopWhile(IsLetter [If(IsNumber [MoveLeft] [MoveRight])]), LoopWhile(IsNotLowercase [MakeLowercase, MoveLeft]), LoopWhile(IsLowercase [If(AtStart [MoveLeft] [MoveRight])]), MoveRight, MoveRight, MoveRight, MakeLowercase])", "cost_per_iteration": [[153, 1], [28789, 0]], "number_of_iterations": 28790}
{"file": "strings/1-29-1.pl", "test_cost": 5.777777777777778, "train_cost": 0, "execution_time": 0.033971000000000195, "program_length": 6, "number_of_explored_programs": 341, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.01, "explored_per_size_tokens": [0, 5, 15, 23, 58, 39, 40, 23, 33, 37, 27, 1, 13, 14, 2, 6, 3, 0, 2], "explored_per_size_sequence": [0, 60, 77, 107, 88, 3, 6], "program": "Program([LoopWhile(IsLetter [If(IsNotSpace [MoveRight] [MoveLeft])]), Drop, Drop])", "cost_per_iteration": [[359, 1], [400, 0]], "number_of_iterations": 401}
{"file": "strings/1-30-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.4280050000000002, "program_length": 19, "number_of_explored_programs": 8752, "search_depth": 2, "time_destroy": 0.035, "time_repair": 0.295, "time_cost": 0.741, "explored_per_size_tokens": [0, 0, 0, 0, 0, 2, 0, 0, 1, 1, 0, 3, 6, 12, 48, 84, 124, 224, 279, 357, 436, 470, 490, 570, 496, 423, 378, 360, 329, 233, 201, 211, 183, 158, 132, 137, 136, 152, 164, 152, 161, 174, 174, 138, 157, 142, 113, 86, 92, 82, 72, 57, 46, 58, 36, 30, 31, 27, 22, 20, 19, 16, 11, 6, 7, 3, 7, 4, 7, 0, 1, 1], "explored_per_size_sequence": [0, 0, 1, 2, 2, 2, 7, 6, 14, 13, 27, 46, 246, 537, 802, 1083, 1154, 992, 881, 707, 528, 516, 453, 305, 216, 88, 52, 38, 14, 16, 4], "program": "Program([MoveRight, MoveRight, MoveRight, LoopWhile(IsNotLowercase [MakeLowercase, Drop]), MakeUppercase, Drop, LoopWhile(IsNotUppercase [Drop, Drop]), Drop, Drop, Drop, Drop, Drop, Drop, MoveRight, Drop])", "cost_per_iteration": [[0, 36], [4, 35], [12, 34], [48, 33], [59, 32], [64, 31], [69, 30], [86, 27], [92, 26], [95, 19], [109, 12], [128, 11], [131, 10], [190, 9], [219, 8], [252, 5], [254, 4], [447, 3], [3249, 2], [4101, 1], [9053, 0]], "number_of_iterations": 9054}
{"file": "strings/1-31-1.pl", "test_cost": 2.888888888888889, "train_cost": 0, "execution_time": 1.1300979999999998, "program_length": 29, "number_of_explored_programs": 7096, "search_depth": 3, "time_destroy": 0.025, "time_repair": 0.223, "time_cost": 0.581, "explored_per_size_tokens": [0, 4, 1, 3, 5, 6, 4, 4, 5, 7, 5, 8, 6, 12, 23, 32, 40, 76, 103, 133, 167, 207, 234, 301, 246, 318, 410, 399, 391, 420, 398, 379, 377, 325, 287, 240, 219, 171, 129, 98, 94, 89, 49, 51, 46, 44, 33, 39, 41, 33, 32, 35, 32, 39, 29, 28, 30, 23, 18, 23, 10, 12, 9, 7, 6, 7, 8, 6, 8, 7, 0, 2, 4, 1, 0, 3, 1, 0, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 8, 12, 19, 20, 11, 11, 27, 117, 249, 398, 469, 520, 561, 528, 580, 636, 678, 589, 387, 325, 157, 104, 87, 71, 48, 35, 19, 26, 52, 57, 76, 90, 64, 38, 23, 4], "program": "Program([LoopWhile(IsNotUppercase [MakeUppercase, Drop]), LoopWhile(AtEnd [If(IsNotLowercase [MakeLowercase] [MakeUppercase])]), LoopWhile(AtStart [If(IsNotSpace [MoveRight] [MakeUppercase])]), MoveRight, MoveRight, LoopWhile(AtStart [If(IsUppercase [Drop] [MakeUppercase])]), MoveRight, MoveRight, MakeLowercase, LoopWhile(AtEnd [If(IsNotNumber [MoveRight] [MoveLeft])]), MoveRight, MoveRight, LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[10, 30], [19, 28], [26, 27], [69, 26], [74, 25], [86, 24], [106, 23], [112, 22], [139, 21], [150, 20], [154, 19], [160, 18], [201, 13], [208, 12], [214, 11], [224, 8], [286, 7], [292, 6], [862, 5], [7103, 4], [7169, 3], [7174, 1], [7267, 0]], "number_of_iterations": 7268}
{"file": "strings/1-32-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 2.470141, "program_length": 22, "number_of_explored_programs": 21133, "search_depth": 7, "time_destroy": 0.08, "time_repair": 0.516, "time_cost": 1.4, "explored_per_size_tokens": [0, 5, 25, 153, 577, 754, 789, 1021, 1323, 1347, 1422, 1408, 1367, 1399, 1202, 1158, 1121, 823, 701, 838, 648, 476, 540, 437, 310, 260, 241, 195, 169, 111, 105, 62, 50, 27, 25, 15, 16, 5, 6, 0, 1, 0, 1], "explored_per_size_sequence": [0, 391, 1167, 2279, 3351, 3346, 2714, 1765, 1223, 744, 775, 758, 821, 732, 577, 323, 107, 44, 10, 6], "program": "Program([Drop, Drop, LoopWhile(AtStart [If(IsNumber [MoveRight] [Drop])]), Drop, Drop, LoopWhile(IsLetter [If(NotAtEnd [MoveLeft] [MoveRight])]), Drop, MoveRight, LoopWhile(IsNotSpace [MakeLowercase, MoveRight]), LoopWhile(NotAtEnd [Drop, MakeLowercase]), Drop, Drop])", "cost_per_iteration": [[9, 29], [12, 27], [18, 26], [46, 25], [78, 24], [89, 17], [96, 15], [153, 10], [8135, 9], [9387, 8], [19261, 7], [19482, 4], [19540, 3], [19598, 1], [23766, 0]], "number_of_iterations": 23767}
{"file": "strings/1-33-1.pl", "test_cost": 3.7777777777777777, "train_cost": 2, "execution_time": 10.000007, "program_length": 23, "number_of_explored_programs": 98316, "search_depth": 46, "time_destroy": 0.454, "time_repair": 2.633, "time_cost": 5.03, "explored_per_size_tokens": [0, 5, 25, 467, 3522, 7518, 8138, 11755, 13026, 12734, 9848, 6176, 8283, 7424, 1985, 2784, 3018, 617, 333, 505, 108, 8, 9, 11, 4, 4, 3, 2, 3, 1], "explored_per_size_sequence": [0, 2123, 16268, 26876, 31940, 18110, 2888, 47, 40, 14, 8, 2], "program": "Program([LoopWhile(IsNumber [If(IsSpace [MakeLowercase] [MoveRight])]), LoopWhile(IsUppercase [If(IsNotNumber [MakeLowercase] [Drop])]), Drop, LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsLetter [MoveLeft] [Drop])]), Drop, Drop, MakeLowercase, LoopWhile(NotAtEnd [MakeUppercase, Drop])])", "cost_per_iteration": [[4, 27], [9, 26], [12, 25], [56, 24], [59, 21], [85, 20], [123, 2]], "number_of_iterations": 137152}
{"file": "strings/1-34-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.08483599999999925, "program_length": 46, "number_of_explored_programs": 456, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.015, "time_cost": 0.031, "explored_per_size_tokens": [0, 1, 2, 3, 2, 4, 6, 3, 4, 10, 7, 14, 4, 7, 11, 9, 3, 3, 5, 8, 1, 4, 2, 6, 10, 5, 4, 6, 4, 1, 4, 4, 9, 8, 5, 2, 8, 5, 3, 9, 6, 5, 6, 9, 14, 11, 18, 18, 14, 17, 12, 8, 13, 14, 5, 5, 9, 9, 6, 8, 7, 6, 6, 4, 2, 2, 2, 4, 2, 1, 1, 2, 2, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 4, 14, 12, 23, 21, 14, 9, 5, 5, 7, 14, 17, 13, 13, 10, 5, 8, 8, 11, 15, 41, 47, 26, 52, 29, 14, 10, 8], "program": "Program([Drop, LoopWhile(IsNumber [If(IsNotNumber [MakeUppercase] [Drop])]), Drop, Drop, LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), Drop, MoveLeft, Drop, Drop, Drop, Drop, Drop, Drop, LoopWhile(IsUppercase [If(IsLowercase [MoveLeft] [MakeUppercase])]), LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MoveLeft])]), Drop, LoopWhile(AtEnd [If(IsNotLetter [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeLowercase])]), MoveRight, MakeUppercase, LoopWhile(AtStart [If(IsNotLowercase [MakeLowercase] [MoveLeft])]), MoveLeft, MakeUppercase, Drop])", "cost_per_iteration": [[1, 26], [16, 25], [38, 24], [76, 23], [93, 21], [102, 20], [103, 19], [106, 16], [155, 15], [191, 11], [196, 10], [198, 9], [210, 5], [211, 4], [216, 2], [391, 1], [458, 0]], "number_of_iterations": 459}
{"file": "strings/1-35-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00726099999999974, "program_length": 7, "number_of_explored_programs": 39, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 4, 2, 2, 4, 6, 3, 2, 6, 5, 2, 1, 0, 2], "explored_per_size_sequence": [0, 9, 10, 13, 7], "program": "Program([LoopWhile(AtStart [If(IsNotSpace [MoveRight] [MakeLowercase])]), LoopWhile(IsLowercase [MakeUppercase, Drop])])", "cost_per_iteration": [[41, 0]], "number_of_iterations": 42}
{"file": "strings/1-36-1.pl", "test_cost": 1, "train_cost": 1, "execution_time": 10.000019000000002, "program_length": 18, "number_of_explored_programs": 122988, "search_depth": 58, "time_destroy": 0.538, "time_repair": 3.073, "time_cost": 4.172, "explored_per_size_tokens": [0, 5, 25, 465, 3640, 8891, 10306, 11514, 15818, 16599, 14037, 8571, 8600, 10075, 5618, 1852, 3521, 2359, 188, 441, 450, 7, 0, 3, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2121, 13692, 29038, 38029, 25687, 14316, 92, 7, 4, 1, 1], "program": "Program([MoveRight, MakeLowercase, LoopWhile(AtStart [If(IsNotNumber [MakeUppercase] [MoveRight])]), LoopWhile(AtEnd [If(IsNotUppercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), MoveRight, LoopWhile(IsLetter [Drop, MakeLowercase])])", "cost_per_iteration": [[6, 4], [35, 2], [374, 1]], "number_of_iterations": 171602}
{"file": "strings/1-37-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.012002999999999986, "program_length": 23, "number_of_explored_programs": 80, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 5, 3, 13, 7, 8, 3, 3, 7, 3, 4, 6, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 7, 13, 21, 14, 8, 6, 2, 4, 1, 3, 1], "program": "Program([Drop, MakeLowercase, LoopWhile(IsLetter [If(NotAtEnd [MoveRight] [MoveLeft])]), MoveRight, Drop, LoopWhile(IsNumber [If(NotAtStart [MakeLowercase] [MakeUppercase])]), Drop, MakeUppercase, LoopWhile(IsUppercase [If(IsNotLetter [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsSpace [If(IsUppercase [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[23, 3], [68, 2], [77, 1], [80, 0]], "number_of_iterations": 81}
{"file": "strings/1-38-1.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.097802, "program_length": 12, "number_of_explored_programs": 1033, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.025, "time_cost": 0.04, "explored_per_size_tokens": [0, 5, 20, 18, 32, 83, 69, 66, 82, 68, 81, 75, 76, 68, 58, 64, 42, 34, 23, 16, 12, 13, 6, 6, 5, 3, 2, 0, 1, 1, 2, 0, 1, 1], "explored_per_size_sequence": [0, 22, 98, 137, 168, 157, 129, 116, 67, 62, 42, 21, 10, 4], "program": "Program([Drop, LoopWhile(IsLowercase [If(IsUppercase [MakeLowercase] [MakeUppercase])]), LoopWhile(NotAtEnd [MoveRight, MakeUppercase]), Drop, Drop, MakeLowercase, Drop])", "cost_per_iteration": [[5, 5], [655, 4], [697, 3], [721, 2], [722, 1], [1105, 0]], "number_of_iterations": 1106}
{"file": "strings/1-39-1.pl", "test_cost": 3.3333333333333335, "train_cost": 0, "execution_time": 0.16650700000000007, "program_length": 16, "number_of_explored_programs": 1607, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.043, "time_cost": 0.075, "explored_per_size_tokens": [0, 2, 4, 3, 9, 17, 26, 37, 55, 71, 87, 115, 119, 129, 127, 94, 105, 90, 91, 71, 58, 68, 46, 50, 29, 22, 22, 14, 14, 10, 6, 5, 3, 3, 1, 0, 4], "explored_per_size_sequence": [0, 3, 7, 8, 32, 80, 138, 169, 228, 243, 155, 151, 105, 61, 54, 53, 45, 42, 24, 9], "program": "Program([MoveRight, LoopWhile(IsNotSpace [MakeUppercase, Drop]), Drop, MoveLeft, LoopWhile(AtStart [If(IsLowercase [MoveRight] [Drop])]), MoveRight, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveRight])]), Drop])", "cost_per_iteration": [[2, 10], [14, 9], [15, 8], [18, 7], [39, 6], [71, 5], [99, 3], [104, 2], [182, 1], [1656, 0]], "number_of_iterations": 1657}
{"file": "strings/1-40-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.224487, "program_length": 17, "number_of_explored_programs": 1665, "search_depth": 1, "time_destroy": 0.008, "time_repair": 0.056, "time_cost": 0.104, "explored_per_size_tokens": [0, 1, 2, 1, 3, 6, 7, 10, 8, 10, 21, 24, 47, 64, 86, 100, 126, 141, 133, 149, 124, 107, 99, 83, 81, 62, 40, 51, 27, 19, 14, 6, 6, 3, 2, 2], "explored_per_size_sequence": [0, 1, 7, 8, 14, 19, 23, 22, 27, 38, 89, 159, 242, 263, 260, 211, 159, 96, 14, 13], "program": "Program([Drop, LoopWhile(IsLowercase [MakeLowercase, Drop]), Drop, Drop, MakeUppercase, MoveRight, MakeUppercase, MoveRight, MakeUppercase, MoveRight, MakeUppercase, MoveRight, MakeUppercase, MoveRight, Drop])", "cost_per_iteration": [[1, 15], [7, 13], [35, 8], [63, 7], [87, 5], [141, 4], [292, 3], [436, 2], [543, 1], [1706, 0]], "number_of_iterations": 1707}
{"file": "strings/1-41-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01883199999999996, "program_length": 10, "number_of_explored_programs": 63, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.003, "explored_per_size_tokens": [0, 4, 2, 2, 6, 3, 7, 2, 5, 10, 6, 2, 2, 3, 1, 1, 4, 1, 1, 1], "explored_per_size_sequence": [0, 10, 7, 15, 19, 6, 5, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotLetter [MakeUppercase] [Drop])]), MakeUppercase, LoopWhile(IsNumber [If(IsNotNumber [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[6, 9], [8, 1], [64, 0]], "number_of_iterations": 65}
{"file": "strings/1-42-1.pl", "test_cost": 1.6666666666666667, "train_cost": 0, "execution_time": 0.027587999999999946, "program_length": 18, "number_of_explored_programs": 157, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.01, "explored_per_size_tokens": [0, 0, 1, 0, 3, 4, 1, 3, 10, 2, 2, 5, 10, 6, 8, 9, 15, 13, 11, 8, 7, 9, 7, 4, 4, 2, 2, 3, 3, 1, 0, 3, 1], "explored_per_size_sequence": [0, 0, 9, 9, 9, 3, 11, 12, 17, 21, 24, 16, 11, 10, 3, 2], "program": "Program([LoopWhile(AtStart [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(IsNumber [If(IsNotUppercase [MoveLeft] [MakeUppercase])]), MoveRight, MakeLowercase, MakeUppercase, Drop, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeUppercase])])])", "cost_per_iteration": [[14, 6], [26, 5], [33, 4], [48, 3], [61, 2], [117, 1], [156, 0]], "number_of_iterations": 157}
{"file": "strings/1-43-1.pl", "test_cost": 3.7777777777777777, "train_cost": 0, "execution_time": 0.866612, "program_length": 26, "number_of_explored_programs": 7119, "search_depth": 3, "time_destroy": 0.033, "time_repair": 0.233, "time_cost": 0.378, "explored_per_size_tokens": [0, 2, 1, 2, 4, 3, 17, 40, 59, 100, 154, 242, 259, 370, 473, 601, 590, 685, 570, 575, 519, 399, 379, 283, 174, 192, 134, 78, 58, 54, 26, 23, 19, 8, 6, 8, 3, 1, 2, 3, 2, 1], "explored_per_size_sequence": [0, 5, 6, 5, 13, 4, 67, 201, 525, 918, 1188, 1347, 1146, 930, 533, 160, 49, 17, 5], "program": "Program([MoveRight, MoveRight, Drop, LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [Drop])]), MakeLowercase, LoopWhile(AtEnd [If(IsLetter [MoveRight] [MakeLowercase])]), LoopWhile(IsSpace [If(IsNumber [MakeUppercase] [MakeLowercase])]), Drop, Drop, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[20, 10], [25, 9], [60, 8], [63, 6], [82, 5], [133, 4], [155, 3], [242, 2], [3903, 1], [7623, 0]], "number_of_iterations": 7624}
{"file": "strings/1-44-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.41167600000000015, "program_length": 41, "number_of_explored_programs": 3464, "search_depth": 1, "time_destroy": 0.014, "time_repair": 0.103, "time_cost": 0.189, "explored_per_size_tokens": [0, 1, 2, 9, 17, 29, 62, 87, 112, 126, 131, 151, 186, 156, 146, 168, 143, 177, 156, 169, 182, 166, 151, 141, 177, 126, 106, 102, 81, 60, 52, 23, 21, 17, 7, 10, 7, 3, 1, 1, 1, 1], "explored_per_size_sequence": [0, 1, 2, 41, 114, 190, 278, 344, 295, 259, 294, 216, 262, 333, 290, 238, 140, 83, 27, 34, 13, 5, 3, 2], "program": "Program([Drop, Drop, Drop, MoveRight, LoopWhile(IsUppercase [MakeLowercase, MoveRight]), MoveRight, MoveRight, LoopWhile(AtEnd [MoveRight, MoveRight]), MakeLowercase, MoveRight, MakeLowercase, MakeLowercase, MoveRight, MakeLowercase, LoopWhile(IsLowercase [If(AtEnd [Drop] [MoveRight])]), LoopWhile(IsUppercase [If(IsNotSpace [MakeLowercase] [Drop])]), MakeUppercase, MakeLowercase, MoveRight, LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MakeUppercase])]), MoveRight, LoopWhile(IsNotLetter [MoveRight, MakeUppercase]), LoopWhile(IsUppercase [If(NotAtStart [MakeLowercase] [MoveRight])])])", "cost_per_iteration": [[0, 14], [13, 13], [43, 8], [77, 7], [108, 6], [1790, 5], [2082, 4], [2166, 3], [3500, 2], [3600, 1], [3632, 0]], "number_of_iterations": 3633}
{"file": "strings/1-45-1.pl", "test_cost": 7.444444444444445, "train_cost": 0, "execution_time": 0.07243099999999991, "program_length": 45, "number_of_explored_programs": 296, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.012, "time_cost": 0.033, "explored_per_size_tokens": [0, 3, 2, 3, 5, 7, 5, 4, 7, 4, 8, 5, 5, 3, 1, 2, 0, 1, 2, 1, 1, 0, 1, 1, 2, 0, 1, 0, 1, 2, 4, 5, 1, 5, 7, 10, 8, 11, 4, 13, 9, 10, 4, 7, 9, 5, 5, 12, 14, 5, 7, 7, 10, 11, 4, 4, 5, 4, 2, 7, 4, 2, 2, 0, 1, 1], "explored_per_size_sequence": [0, 5, 10, 14, 13, 10, 5, 6, 1, 1, 3, 1, 1, 2, 2, 4, 5, 13, 12, 23, 26, 15, 26, 24, 13, 18, 15, 15, 3, 7, 3], "program": "Program([MoveRight, MakeLowercase, LoopWhile(IsUppercase [If(IsLowercase [MakeLowercase] [Drop])]), MoveRight, MakeUppercase, MoveRight, LoopWhile(AtStart [If(IsUppercase [MoveRight] [MakeUppercase])]), MakeUppercase, MoveRight, LoopWhile(IsNumber [If(IsNotNumber [MoveLeft] [MoveRight])]), LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [MoveRight])]), MoveRight, Drop, MoveLeft, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveLeft])]), MakeUppercase, MakeLowercase, LoopWhile(AtStart [If(IsNotSpace [Drop] [MoveLeft])]), LoopWhile(IsLetter [If(IsNumber [MoveRight] [MoveLeft])]), MakeLowercase, LoopWhile(NotAtEnd [Drop, MakeLowercase]), Drop])", "cost_per_iteration": [[23, 20], [52, 19], [65, 17], [70, 16], [73, 15], [78, 14], [81, 12], [89, 11], [94, 4], [95, 3], [246, 2], [281, 1], [295, 0]], "number_of_iterations": 296}
{"file": "strings/1-46-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 2.2151539999999996, "program_length": 32, "number_of_explored_programs": 16194, "search_depth": 6, "time_destroy": 0.067, "time_repair": 0.53, "time_cost": 1.036, "explored_per_size_tokens": [0, 1, 2, 1, 0, 0, 1, 0, 3, 3, 2, 5, 15, 56, 124, 197, 351, 540, 731, 977, 1205, 1300, 1386, 1547, 1326, 1231, 1127, 1021, 809, 635, 481, 417, 250, 146, 121, 84, 34, 26, 12, 10, 8, 2, 4, 2, 0, 1], "explored_per_size_sequence": [0, 1, 2, 5, 2, 3, 3, 3, 62, 343, 795, 1539, 2247, 2688, 2914, 2472, 1687, 880, 456, 67, 22, 3], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MakeUppercase])]), Drop, Drop, LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [MakeLowercase])]), LoopWhile(IsLetter [If(AtEnd [MoveRight] [Drop])]), MoveLeft, Drop, Drop, LoopWhile(IsNotUppercase [MakeLowercase, MoveRight]), Drop, Drop, LoopWhile(AtEnd [If(AtStart [Drop] [MakeLowercase])]), MoveLeft, Drop, LoopWhile(IsNotLetter [Drop, MakeLowercase])])", "cost_per_iteration": [[0, 15], [11, 13], [12, 10], [29, 8], [36, 7], [71, 5], [163, 4], [389, 3], [440, 2], [17276, 1], [17426, 0]], "number_of_iterations": 17427}
{"file": "strings/1-47-1.pl", "test_cost": 0.1111111111111111, "train_cost": 0, "execution_time": 0.07028400000000007, "program_length": 7, "number_of_explored_programs": 605, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.021, "time_cost": 0.027, "explored_per_size_tokens": [0, 5, 18, 30, 64, 70, 61, 43, 40, 53, 51, 28, 39, 33, 19, 17, 10, 7, 7, 3, 1, 3, 3], "explored_per_size_sequence": [0, 65, 118, 151, 153, 53, 43, 22], "program": "Program([LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MakeLowercase])]), MakeLowercase, MoveRight, MakeLowercase])", "cost_per_iteration": [[377, 1], [684, 0]], "number_of_iterations": 685}
{"file": "strings/1-48-1.pl", "test_cost": 0.1111111111111111, "train_cost": 0, "execution_time": 0.12160800000000005, "program_length": 5, "number_of_explored_programs": 1289, "search_depth": 1, "time_destroy": 0.007, "time_repair": 0.038, "time_cost": 0.047, "explored_per_size_tokens": [0, 5, 25, 76, 206, 188, 137, 114, 112, 133, 116, 30, 58, 56, 11, 10, 11, 1], "explored_per_size_sequence": [0, 189, 313, 360, 375, 28, 19, 5], "program": "Program([MoveRight, MoveRight, MakeUppercase, MoveRight, MakeUppercase])", "cost_per_iteration": [[1468, 1], [1592, 0]], "number_of_iterations": 1593}
{"file": "strings/1-49-1.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 2.6656389999999996, "program_length": 32, "number_of_explored_programs": 9914, "search_depth": 3, "time_destroy": 0.044, "time_repair": 0.439, "time_cost": 1.587, "explored_per_size_tokens": [0, 2, 5, 4, 10, 3, 4, 1, 5, 4, 5, 3, 2, 6, 1, 1, 3, 5, 8, 15, 8, 13, 22, 41, 67, 96, 144, 159, 169, 235, 301, 349, 401, 471, 498, 508, 559, 618, 607, 575, 571, 533, 538, 448, 383, 346, 281, 225, 196, 121, 106, 94, 38, 39, 23, 14, 11, 7, 3, 0, 3, 3, 2, 1], "explored_per_size_sequence": [0, 11, 11, 13, 13, 4, 1, 6, 6, 21, 23, 62, 122, 284, 499, 758, 1120, 1425, 1412, 1300, 1159, 832, 470, 235, 104, 16, 7], "program": "Program([MakeLowercase, LoopWhile(IsNumber [If(IsNotLetter [MoveRight] [MakeUppercase])]), MakeUppercase, LoopWhile(IsNumber [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(IsLetter [If(IsNumber [MakeLowercase] [Drop])]), MoveRight, LoopWhile(IsNumber [If(AtEnd [Drop] [MoveRight])]), LoopWhile(IsLowercase [If(NotAtStart [MoveLeft] [MakeLowercase])]), LoopWhile(AtStart [If(AtEnd [MakeUppercase] [MoveRight])]), MakeLowercase, LoopWhile(NotAtEnd [MakeLowercase, Drop]), Drop])", "cost_per_iteration": [[43, 58], [48, 57], [49, 56], [57, 55], [66, 52], [68, 51], [77, 47], [80, 46], [82, 45], [112, 44], [117, 43], [159, 42], [163, 41], [205, 38], [539, 37], [642, 36], [659, 35], [699, 34], [709, 33], [724, 17], [730, 15], [733, 14], [875, 13], [950, 12], [1012, 7], [1028, 6], [1747, 5], [1789, 4], [1810, 2], [2910, 1], [10045, 0]], "number_of_iterations": 10046}
{"file": "strings/1-50-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.0039119999999997, "program_length": 23, "number_of_explored_programs": 6510, "search_depth": 2, "time_destroy": 0.026, "time_repair": 0.186, "time_cost": 0.6, "explored_per_size_tokens": [0, 0, 16, 35, 46, 106, 196, 221, 277, 369, 435, 414, 395, 462, 477, 391, 287, 314, 277, 229, 164, 162, 156, 121, 92, 96, 85, 67, 66, 46, 54, 56, 36, 28, 31, 19, 23, 28, 21, 24, 20, 16, 11, 24, 19, 16, 13, 15, 7, 8, 7, 6, 3, 6, 5, 3, 2, 3, 1, 2, 1], "explored_per_size_sequence": [0, 0, 70, 274, 557, 793, 1087, 1070, 868, 621, 341, 239, 159, 102, 64, 38, 31, 36, 36, 37, 42, 15, 16, 12, 2], "program": "Program([MoveRight, MoveLeft, LoopWhile(IsNotSpace [Drop, Drop]), LoopWhile(AtEnd [If(IsNumber [Drop] [MoveLeft])]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [MakeLowercase])]), LoopWhile(IsNotLetter [MakeLowercase, MoveRight]), MoveLeft, LoopWhile(NotAtEnd [Drop, MakeLowercase]), Drop])", "cost_per_iteration": [[1, 62], [12, 60], [16, 59], [17, 58], [22, 57], [24, 48], [27, 47], [114, 46], [125, 45], [211, 44], [235, 43], [247, 42], [248, 41], [256, 40], [291, 39], [326, 36], [349, 35], [448, 34], [532, 33], [679, 32], [1050, 30], [1078, 29], [1085, 28], [1130, 27], [1134, 26], [1156, 4], [6429, 2], [6562, 1], [6878, 0]], "number_of_iterations": 6879}
{"file": "strings/1-6-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.15231499999999998, "program_length": 9, "number_of_explored_programs": 162, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.008, "explored_per_size_tokens": [0, 3, 4, 2, 11, 9, 15, 10, 12, 18, 8, 12, 23, 6, 10, 9, 2, 3, 4, 0, 0, 0, 1], "explored_per_size_sequence": [0, 9, 25, 38, 32, 29, 22, 7], "program": "Program([LoopWhile(IsUppercase [If(IsLowercase [MakeUppercase] [MakeLowercase])]), LoopWhile(IsLetter [If(IsSpace [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[9, 2], [13, 1], [165, 0]], "number_of_iterations": 166}
{"file": "strings/1-6-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01675699999999991, "program_length": 14, "number_of_explored_programs": 77, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 3, 1, 1, 4, 3, 8, 3, 3, 7, 10, 3, 2, 5, 2, 3, 1, 5, 2, 4, 2, 1, 1, 1, 1, 1], "explored_per_size_sequence": [0, 5, 5, 9, 14, 7, 9, 6, 10, 7, 3, 2], "program": "Program([MakeUppercase, LoopWhile(IsUppercase [Drop, Drop]), LoopWhile(AtEnd [If(AtStart [MoveLeft] [MakeLowercase])]), LoopWhile(IsLowercase [If(IsNumber [MoveRight] [Drop])]), Drop, MoveRight])", "cost_per_iteration": [[8, 6], [18, 5], [24, 4], [53, 3], [71, 2], [76, 0]], "number_of_iterations": 77}
{"file": "strings/1-6-8.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.030456999999999956, "program_length": 6, "number_of_explored_programs": 105, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.01, "explored_per_size_tokens": [0, 2, 1, 2, 6, 7, 12, 9, 8, 12, 8, 11, 7, 6, 5, 2, 0, 0, 5, 1, 1], "explored_per_size_sequence": [0, 4, 6, 12, 15, 18, 23, 17, 5, 5], "program": "Program([Drop, MoveRight, Drop, Drop, MoveLeft, Drop])", "cost_per_iteration": [[6, 2], [21, 1], [105, 0]], "number_of_iterations": 106}
{"file": "strings/1-6-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02388200000000007, "program_length": 16, "number_of_explored_programs": 110, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 2, 2, 4, 4, 2, 4, 9, 6, 8, 5, 4, 9, 6, 7, 9, 7, 4, 2, 6, 4, 2, 2, 2], "explored_per_size_sequence": [0, 3, 4, 8, 12, 26, 20, 16, 13, 7, 1], "program": "Program([Drop, MoveRight, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [Drop])]), LoopWhile(IsLowercase [If(IsLetter [MoveRight] [Drop])]), LoopWhile(IsSpace [If(IsNotNumber [Drop] [MoveRight])]), MoveLeft, Drop])", "cost_per_iteration": [[2, 7], [4, 4], [54, 3], [79, 1], [110, 0]], "number_of_iterations": 111}
{"file": "strings/1-7-2.pl", "test_cost": 4.222222222222222, "train_cost": 1, "execution_time": 10.00009, "program_length": 28, "number_of_explored_programs": 88785, "search_depth": 38, "time_destroy": 0.466, "time_repair": 2.881, "time_cost": 4.515, "explored_per_size_tokens": [0, 0, 5, 25, 255, 1195, 2823, 4960, 6721, 7951, 9293, 10899, 9662, 8172, 6812, 5675, 4994, 3588, 1842, 1840, 1263, 283, 264, 201, 8, 7, 10, 8, 6, 4, 4, 4, 3, 0, 3, 1, 0, 4], "explored_per_size_sequence": [0, 0, 1609, 5068, 10397, 16303, 19235, 16862, 12169, 6844, 238, 17, 22, 4, 11, 4, 2], "program": "Program([MoveRight, Drop, MakeUppercase, LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [MoveRight])]), LoopWhile(IsLetter [If(IsLowercase [MakeUppercase] [MoveLeft])]), MoveLeft, MoveRight, Drop, MakeUppercase, MoveRight, MoveLeft, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveRight])]), LoopWhile(IsNumber [If(IsNotLetter [MakeLowercase] [MoveRight])]), LoopWhile(NotAtEnd [MakeUppercase, Drop])])", "cost_per_iteration": [[1, 9], [11, 3], [14, 2], [25, 1]], "number_of_iterations": 113302}
{"file": "strings/1-7-3.pl", "test_cost": 0.2222222222222222, "train_cost": 0, "execution_time": 8.446613, "program_length": 18, "number_of_explored_programs": 80323, "search_depth": 33, "time_destroy": 0.324, "time_repair": 2.104, "time_cost": 3.964, "explored_per_size_tokens": [0, 5, 25, 274, 1321, 1858, 1925, 2869, 4902, 6667, 6840, 6304, 6938, 8562, 7350, 5638, 4596, 4029, 3584, 2450, 1280, 1277, 949, 278, 187, 187, 22, 4, 2], "explored_per_size_sequence": [0, 952, 4194, 9181, 14564, 17400, 15376, 11275, 6289, 993, 98, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MoveRight])]), MakeUppercase, LoopWhile(IsNotLowercase [Drop, MoveRight]), LoopWhile(IsNotUppercase [MakeUppercase, Drop]), LoopWhile(IsUppercase [If(IsNumber [MakeUppercase] [MoveRight])]), LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[3, 17], [25, 3], [364, 2], [11321, 1], [99283, 0]], "number_of_iterations": 99284}
{"file": "strings/1-7-4.pl", "test_cost": 1, "train_cost": 1, "execution_time": 10.000026000000002, "program_length": 9, "number_of_explored_programs": 101021, "search_depth": 46, "time_destroy": 0.492, "time_repair": 2.869, "time_cost": 4.529, "explored_per_size_tokens": [0, 5, 25, 452, 3257, 7061, 8033, 8908, 12298, 12890, 10894, 7108, 7035, 8258, 4967, 2190, 3056, 2246, 749, 674, 485, 186, 118, 31, 37, 33, 3, 7, 3, 4, 1, 3, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 2025, 11062, 22398, 29255, 21081, 12362, 1984, 765, 33, 16, 17, 10, 7, 5, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MoveRight])]), Drop, MoveRight, LoopWhile(NotAtEnd [MakeUppercase, Drop])])", "cost_per_iteration": [[5, 10], [150, 6], [158, 5], [182, 3], [204, 2], [123780, 1]], "number_of_iterations": 136397}
{"file": "strings/1-7-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.11005099999999857, "program_length": 28, "number_of_explored_programs": 446, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.019, "time_cost": 0.039, "explored_per_size_tokens": [0, 0, 1, 3, 2, 1, 0, 1, 1, 3, 1, 1, 2, 2, 2, 4, 4, 3, 4, 1, 4, 10, 11, 7, 11, 15, 16, 18, 32, 15, 15, 25, 32, 20, 21, 23, 24, 29, 12, 13, 15, 10, 9, 9, 9, 2, 1, 2], "explored_per_size_sequence": [0, 2, 2, 4, 2, 1, 6, 7, 9, 7, 28, 36, 53, 83, 82, 53, 43, 20, 7, 1], "program": "Program([MoveRight, LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MakeUppercase])]), Drop, LoopWhile(IsUppercase [If(NotAtEnd [MoveRight] [Drop])]), MoveRight, MoveLeft, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop, MoveRight, Drop, Drop, LoopWhile(IsLowercase [If(AtStart [MakeUppercase] [Drop])]), LoopWhile(IsSpace [If(IsNotSpace [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[5, 16], [9, 12], [24, 10], [29, 4], [70, 3], [93, 2], [201, 1], [447, 0]], "number_of_iterations": 448}
{"file": "strings/1-8-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04814700000000016, "program_length": 15, "number_of_explored_programs": 415, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.01, "time_cost": 0.019, "explored_per_size_tokens": [0, 2, 3, 3, 7, 11, 7, 8, 13, 17, 25, 29, 18, 31, 27, 22, 29, 23, 24, 27, 23, 16, 23, 6, 7, 2, 2, 3, 2, 2, 0, 3], "explored_per_size_sequence": [0, 5, 18, 30, 46, 70, 61, 78, 60, 23, 19, 5], "program": "Program([LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveRight])]), MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsNumber [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[3, 9], [27, 8], [31, 7], [36, 6], [107, 4], [110, 1], [417, 0]], "number_of_iterations": 418}
{"file": "strings/1-8-3.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.010594999999998578, "program_length": 11, "number_of_explored_programs": 39, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 0, 1, 2, 0, 1, 2, 0, 1, 3, 2, 0, 1, 1, 3, 0, 5, 3, 1, 1, 1, 1, 3, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 1, 1, 2, 2, 2, 4, 3, 2, 9, 4, 0, 5, 2], "program": "Program([LoopWhile(IsLetter [Drop, MakeLowercase]), Drop, MakeLowercase, MoveRight, Drop, MoveLeft, Drop, Drop, Drop])", "cost_per_iteration": [[3, 5], [10, 4], [12, 3], [14, 2], [26, 1], [38, 0]], "number_of_iterations": 39}
{"file": "strings/1-8-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.03471500000000205, "program_length": 21, "number_of_explored_programs": 255, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.014, "explored_per_size_tokens": [0, 3, 3, 3, 4, 3, 8, 11, 2, 10, 3, 7, 21, 8, 3, 14, 6, 12, 21, 14, 9, 18, 14, 15, 5, 5, 8, 8, 5, 3, 2, 2, 2, 2, 1], "explored_per_size_sequence": [0, 6, 6, 18, 21, 18, 20, 24, 16, 28, 26, 33, 20, 14, 5], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), MakeLowercase, Drop, MakeUppercase, LoopWhile(IsLetter [If(AtStart [Drop] [MakeLowercase])]), LoopWhile(IsUppercase [MoveRight, MoveLeft]), Drop, LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveRight])]), MakeUppercase])", "cost_per_iteration": [[11, 11], [19, 10], [27, 7], [76, 6], [82, 4], [125, 2], [144, 1], [257, 0]], "number_of_iterations": 258}
{"file": "strings/1-8-5.pl", "test_cost": 1.1111111111111112, "train_cost": 0, "execution_time": 0.156488999999997, "program_length": 14, "number_of_explored_programs": 234, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.009, "explored_per_size_tokens": [0, 3, 3, 1, 3, 4, 1, 10, 6, 11, 11, 14, 14, 16, 22, 13, 13, 11, 20, 11, 11, 16, 4, 7, 3, 2, 0, 0, 2, 1, 0, 1], "explored_per_size_sequence": [0, 5, 5, 5, 18, 12, 18, 19, 24, 27, 28, 29, 25, 11, 8], "program": "Program([MakeLowercase, LoopWhile(IsLetter [If(AtStart [Drop] [MoveRight])]), Drop, MakeUppercase, Drop, MoveRight, Drop, Drop, MoveLeft, Drop, Drop])", "cost_per_iteration": [[16, 8], [22, 7], [48, 4], [59, 3], [76, 2], [79, 1], [234, 0]], "number_of_iterations": 235}
{"file": "strings/1-8-6.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.03913100000000114, "program_length": 30, "number_of_explored_programs": 235, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.016, "explored_per_size_tokens": [0, 0, 1, 2, 1, 4, 2, 1, 3, 3, 3, 4, 1, 3, 2, 3, 2, 0, 4, 8, 4, 10, 8, 6, 4, 18, 8, 10, 7, 8, 16, 16, 11, 11, 14, 8, 7, 4, 4, 5, 2, 4, 3], "explored_per_size_sequence": [0, 0, 6, 5, 8, 7, 4, 3, 4, 10, 19, 15, 31, 43, 31, 27, 12, 3, 7], "program": "Program([MakeLowercase, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeLowercase])]), MoveRight, LoopWhile(IsLetter [If(IsUppercase [Drop] [MoveRight])]), LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [MakeUppercase])]), MoveLeft, MoveLeft, LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MoveLeft])]), Drop, MakeUppercase, Drop, Drop, MoveLeft, MoveLeft, Drop, Drop, MoveLeft, Drop])", "cost_per_iteration": [[3, 11], [24, 7], [29, 6], [32, 5], [33, 4], [34, 3], [164, 2], [233, 1], [234, 0]], "number_of_iterations": 235}
{"file": "strings/1-8-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010767999999998779, "program_length": 23, "number_of_explored_programs": 51, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 1, 4, 4, 5, 4, 2, 3, 4, 4, 1, 2, 1, 3, 1, 1, 2, 0, 1, 1, 1], "explored_per_size_sequence": [0, 0, 2, 6, 7, 10, 5, 7, 7, 6, 0, 1], "program": "Program([LoopWhile(IsNotLowercase [Drop, MakeLowercase]), MakeLowercase, LoopWhile(IsNumber [If(IsNotLetter [Drop] [MoveRight])]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveRight])]), Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsUppercase [MakeLowercase] [Drop])]), MakeLowercase, LoopWhile(IsSpace [If(NotAtStart [MakeUppercase] [Drop])])])", "cost_per_iteration": [[2, 7], [8, 6], [41, 5], [43, 1], [51, 0]], "number_of_iterations": 52}
{"file": "strings/1-8-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0179399999999994, "program_length": 26, "number_of_explored_programs": 118, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 1, 3, 0, 3, 1, 2, 2, 1, 1, 3, 3, 5, 5, 3, 6, 8, 5, 5, 6, 4, 5, 7, 8, 5, 3, 3, 4, 4, 1, 1, 2, 1, 5, 2], "explored_per_size_sequence": [0, 3, 4, 3, 6, 6, 11, 13, 20, 15, 12, 10, 12, 1, 2], "program": "Program([MakeLowercase, LoopWhile(IsUppercase [If(AtStart [MoveLeft] [MakeLowercase])]), LoopWhile(IsLowercase [Drop, Drop]), LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveLeft])]), MakeUppercase, LoopWhile(IsNumber [If(NotAtEnd [MakeUppercase] [MoveLeft])]), Drop, MakeUppercase, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeUppercase])]), MakeLowercase, MakeUppercase, Drop])", "cost_per_iteration": [[6, 7], [20, 6], [43, 5], [76, 2], [113, 1], [117, 0]], "number_of_iterations": 118}
{"file": "strings/1-8-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009834000000001453, "program_length": 20, "number_of_explored_programs": 43, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 1, 0, 2, 3, 1, 3, 2, 4, 4, 2, 2, 3, 2, 4, 2, 1, 3, 2], "explored_per_size_sequence": [0, 2, 2, 7, 5, 5, 6, 5, 8, 3], "program": "Program([LoopWhile(IsLetter [If(AtEnd [MakeUppercase] [Drop])]), Drop, LoopWhile(IsLowercase [MakeLowercase, MoveRight]), LoopWhile(IsLetter [If(AtEnd [MoveLeft] [Drop])]), MakeLowercase, MakeUppercase, LoopWhile(IsLowercase [If(IsNumber [MoveLeft] [MoveRight])]), Drop, MoveRight])", "cost_per_iteration": [[1, 6], [9, 5], [17, 2], [24, 1], [42, 0]], "number_of_iterations": 43}
{"file": "strings/1-9-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.589582, "program_length": 18, "number_of_explored_programs": 4556, "search_depth": 2, "time_destroy": 0.018, "time_repair": 0.122, "time_cost": 0.208, "explored_per_size_tokens": [0, 2, 3, 6, 27, 24, 45, 88, 116, 162, 199, 258, 323, 353, 410, 463, 410, 360, 298, 270, 229, 188, 88, 94, 65, 26, 17, 15, 6, 1, 3, 5, 2], "explored_per_size_sequence": [0, 8, 19, 85, 306, 502, 740, 886, 822, 642, 358, 121, 55, 12], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [MoveRight])]), MakeLowercase, LoopWhile(IsNotUppercase [Drop, MoveRight]), Drop, LoopWhile(IsLetter [MakeUppercase, Drop]), LoopWhile(IsSpace [If(NotAtStart [Drop] [MakeLowercase])]), Drop, Drop])", "cost_per_iteration": [[7, 8], [23, 7], [106, 6], [113, 5], [117, 3], [141, 2], [4929, 1], [5081, 0]], "number_of_iterations": 5082}
{"file": "strings/1-9-3.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.0931519999999999, "program_length": 11, "number_of_explored_programs": 949, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.022, "time_cost": 0.041, "explored_per_size_tokens": [0, 4, 7, 10, 22, 28, 36, 45, 53, 51, 58, 68, 56, 78, 63, 57, 53, 52, 42, 27, 25, 22, 20, 17, 8, 7, 11, 7, 5, 6, 4, 3, 2, 0, 0, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 17, 35, 71, 95, 155, 148, 133, 105, 86, 49, 25, 11, 10, 4, 4, 1], "program": "Program([MoveRight, MoveRight, MoveRight, MoveRight, MakeLowercase, LoopWhile(NotAtEnd [MakeLowercase, Drop]), MakeUppercase, Drop, MakeLowercase])", "cost_per_iteration": [[24, 11], [63, 10], [75, 5], [109, 4], [162, 3], [396, 2], [510, 1], [964, 0]], "number_of_iterations": 965}
{"file": "strings/1-9-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 2.406614999999995, "program_length": 24, "number_of_explored_programs": 22200, "search_depth": 8, "time_destroy": 0.083, "time_repair": 0.599, "time_cost": 1.104, "explored_per_size_tokens": [0, 4, 3, 7, 26, 47, 135, 194, 282, 540, 742, 939, 970, 1180, 1534, 1840, 1756, 1602, 1602, 1526, 1408, 1275, 989, 839, 752, 565, 426, 298, 206, 165, 150, 55, 45, 37, 17, 14, 9, 7, 6, 2, 2, 2, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 6, 12, 308, 851, 1653, 2609, 3294, 3362, 3156, 2728, 1679, 1299, 819, 347, 40, 31, 5, 1], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MakeLowercase])]), Drop, LoopWhile(IsLowercase [If(IsNotNumber [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveRight])]), Drop, MakeLowercase, LoopWhile(IsNotUppercase [MakeUppercase, Drop]), Drop, LoopWhile(IsNumber [If(AtEnd [MakeUppercase] [MoveLeft])])])", "cost_per_iteration": [[26, 11], [56, 10], [90, 9], [123, 6], [129, 5], [141, 4], [145, 3], [1307, 2], [24926, 1], [25039, 0]], "number_of_iterations": 25040}
{"file": "strings/1-9-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05865500000000168, "program_length": 17, "number_of_explored_programs": 469, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.012, "time_cost": 0.025, "explored_per_size_tokens": [0, 4, 5, 7, 13, 14, 10, 5, 11, 14, 16, 13, 19, 17, 13, 19, 21, 24, 27, 32, 29, 24, 25, 19, 12, 21, 13, 6, 8, 10, 9, 5, 1, 0, 1, 2], "explored_per_size_sequence": [0, 14, 24, 23, 31, 33, 49, 60, 71, 66, 44, 33, 19, 2], "program": "Program([MoveRight, LoopWhile(NotAtEnd [MoveRight, MakeLowercase]), LoopWhile(IsLetter [If(AtStart [MakeLowercase] [Drop])]), MakeLowercase, Drop, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [Drop])]), Drop, MoveLeft])", "cost_per_iteration": [[42, 11], [58, 8], [77, 7], [117, 6], [215, 1], [476, 0]], "number_of_iterations": 477}
{"file": "strings/1-9-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06748600000000238, "program_length": 16, "number_of_explored_programs": 645, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.015, "time_cost": 0.028, "explored_per_size_tokens": [0, 5, 8, 4, 10, 23, 25, 24, 24, 35, 39, 37, 29, 51, 46, 51, 36, 23, 36, 35, 27, 18, 17, 15, 5, 8, 7, 7], "explored_per_size_sequence": [0, 16, 44, 71, 105, 110, 122, 78, 70, 24, 4, 1], "program": "Program([MoveRight, MakeUppercase, LoopWhile(IsLetter [If(IsLowercase [MoveRight] [MakeLowercase])]), MoveRight, LoopWhile(IsLetter [If(IsSpace [MakeUppercase] [Drop])]), Drop, LoopWhile(IsNotSpace [MakeLowercase, Drop]), Drop])", "cost_per_iteration": [[44, 10], [67, 9], [77, 4], [649, 1], [671, 0]], "number_of_iterations": 672}
{"file": "strings/1-9-7.pl", "test_cost": 0.6666666666666666, "train_cost": 0, "execution_time": 0.13158500000000117, "program_length": 16, "number_of_explored_programs": 1396, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.031, "time_cost": 0.062, "explored_per_size_tokens": [0, 3, 4, 4, 6, 16, 21, 17, 23, 52, 65, 88, 111, 95, 94, 103, 111, 99, 98, 87, 75, 49, 48, 38, 24, 19, 15, 16, 7, 1, 3, 3, 0, 0, 0, 1], "explored_per_size_sequence": [0, 8, 15, 33, 24, 23, 76, 107, 166, 213, 203, 174, 152, 85, 58, 37, 13, 9], "program": "Program([MoveRight, MoveRight, LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(NotAtEnd [MoveRight, Drop]), Drop, Drop, Drop, MoveLeft, Drop, Drop, Drop])", "cost_per_iteration": [[1, 7], [89, 5], [120, 3], [169, 2], [1375, 1], [1425, 0]], "number_of_iterations": 1426}
{"file": "strings/1-9-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 1.0042940000000016, "program_length": 17, "number_of_explored_programs": 9319, "search_depth": 4, "time_destroy": 0.036, "time_repair": 0.234, "time_cost": 0.406, "explored_per_size_tokens": [0, 5, 23, 67, 161, 221, 273, 414, 605, 738, 747, 718, 875, 910, 725, 543, 527, 489, 374, 254, 203, 180, 77, 65, 46, 26, 18, 8, 10, 9, 3, 1, 2, 1, 0, 1], "explored_per_size_sequence": [0, 123, 474, 977, 1644, 1959, 1763, 1290, 776, 156, 86, 52, 18, 0, 1], "program": "Program([MoveRight, MakeUppercase, MakeUppercase, LoopWhile(IsLetter [If(IsNotUppercase [MoveRight] [MakeLowercase])]), MoveRight, Drop, LoopWhile(IsNotSpace [Drop, MakeUppercase]), Drop, LoopWhile(IsLetter [MakeLowercase, Drop]), Drop])", "cost_per_iteration": [[13, 11], [25, 10], [31, 5], [57, 4], [10578, 1], [10813, 0]], "number_of_iterations": 10814}
{"file": "strings/1-9-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.09106600000000498, "program_length": 26, "number_of_explored_programs": 821, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.02, "time_cost": 0.039, "explored_per_size_tokens": [0, 2, 4, 4, 10, 10, 4, 11, 13, 24, 26, 27, 29, 54, 52, 50, 52, 77, 44, 44, 33, 46, 29, 40, 27, 29, 18, 10, 13, 12, 9, 9, 3, 2, 2, 2], "explored_per_size_sequence": [0, 6, 17, 9, 30, 32, 57, 111, 143, 116, 101, 96, 47, 30, 21, 5], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeUppercase] [MoveRight])]), MoveRight, LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [MoveLeft])]), LoopWhile(IsLetter [If(IsNotLetter [MoveRight] [Drop])]), Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsNotLowercase [MoveLeft] [Drop])]), Drop, MakeUppercase, MakeLowercase, LoopWhile(AtStart [If(IsNumber [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[41, 11], [52, 10], [71, 9], [116, 8], [126, 7], [132, 5], [183, 4], [237, 3], [778, 1], [842, 0]], "number_of_iterations": 843}
{"file": "strings/1-10-2.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.046358999999995376, "program_length": 20, "number_of_explored_programs": 535, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.011, "time_cost": 0.018, "explored_per_size_tokens": [0, 3, 5, 6, 17, 19, 17, 33, 47, 52, 52, 45, 47, 35, 30, 27, 27, 10, 19, 18, 8, 6, 2, 5, 1, 1, 2, 1], "explored_per_size_sequence": [0, 8, 11, 20, 40, 69, 71, 94, 87, 61, 37, 31, 6], "program": "Program([MoveRight, MoveRight, LoopWhile(AtStart [If(IsUppercase [MakeUppercase] [MoveLeft])]), MakeLowercase, LoopWhile(IsLowercase [If(IsNotSpace [MoveRight] [MoveLeft])]), LoopWhile(IsUppercase [If(IsNotNumber [MakeLowercase] [MoveRight])]), Drop, Drop, Drop, MakeLowercase, Drop])", "cost_per_iteration": [[33, 3], [79, 2], [497, 1], [553, 0]], "number_of_iterations": 554}
{"file": "strings/1-10-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.02253499999999775, "program_length": 23, "number_of_explored_programs": 205, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.007, "explored_per_size_tokens": [0, 5, 6, 10, 24, 8, 14, 19, 15, 10, 10, 11, 15, 6, 5, 4, 4, 1, 3, 6, 2, 5, 2, 4, 4, 2, 2, 1, 1, 1, 3, 0, 0, 1, 1], "explored_per_size_sequence": [0, 23, 38, 42, 47, 9, 13, 3, 2, 6, 7, 5, 6, 3, 1], "program": "Program([LoopWhile(IsNotLowercase [MoveRight, MoveRight]), MoveRight, MakeUppercase, MakeLowercase, LoopWhile(AtEnd [If(IsNumber [MoveLeft] [MoveRight])]), LoopWhile(AtStart [If(AtEnd [Drop] [MoveRight])]), Drop, Drop, MakeLowercase, LoopWhile(IsNotUppercase [MakeLowercase, MakeUppercase]), LoopWhile(IsNotSpace [MakeLowercase, Drop])])", "cost_per_iteration": [[109, 4], [192, 3], [205, 2], [218, 1], [229, 0]], "number_of_iterations": 230}
{"file": "strings/1-10-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06861799999999363, "program_length": 18, "number_of_explored_programs": 661, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.016, "time_cost": 0.031, "explored_per_size_tokens": [0, 5, 11, 8, 33, 41, 39, 36, 37, 35, 47, 52, 47, 40, 39, 36, 33, 26, 22, 21, 17, 18, 6, 2, 5, 2, 1, 0, 2], "explored_per_size_sequence": [0, 27, 54, 75, 101, 90, 86, 80, 64, 47, 27, 8, 1, 0, 1], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsNumber [If(IsUppercase [MakeUppercase] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotUppercase [MoveRight] [Drop])]), MoveRight, Drop, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeLowercase])]), MakeUppercase, Drop])", "cost_per_iteration": [[65, 5], [79, 4], [393, 2], [400, 1], [697, 0]], "number_of_iterations": 698}
{"file": "strings/1-10-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.2296000000000049, "program_length": 20, "number_of_explored_programs": 962, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.023, "time_cost": 0.041, "explored_per_size_tokens": [0, 5, 19, 27, 60, 93, 78, 66, 67, 100, 95, 59, 64, 55, 40, 39, 23, 26, 14, 7, 10, 9, 3, 2, 0, 0, 1], "explored_per_size_sequence": [0, 53, 168, 235, 256, 137, 89, 13, 11], "program": "Program([LoopWhile(AtStart [If(AtEnd [MoveLeft] [MoveRight])]), MakeUppercase, LoopWhile(IsNumber [If(NotAtStart [MoveRight] [MakeLowercase])]), MakeUppercase, LoopWhile(IsLetter [If(IsLowercase [MoveRight] [MakeLowercase])]), Drop, Drop, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveLeft])])])", "cost_per_iteration": [[222, 6], [934, 1], [1076, 0]], "number_of_iterations": 1077}
{"file": "strings/1-10-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.9208049999999943, "program_length": 18, "number_of_explored_programs": 10035, "search_depth": 4, "time_destroy": 0.042, "time_repair": 0.256, "time_cost": 0.416, "explored_per_size_tokens": [0, 5, 24, 74, 205, 421, 651, 685, 695, 877, 1035, 1140, 835, 688, 684, 616, 465, 319, 203, 194, 116, 45, 29, 19, 4, 3, 1, 0, 1, 1], "explored_per_size_sequence": [0, 73, 318, 826, 1466, 1872, 2052, 1632, 1120, 606, 43, 21, 6], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [MoveRight] [Drop])]), MoveRight, MoveRight, LoopWhile(AtEnd [If(IsLowercase [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), MoveLeft, Drop, Drop])", "cost_per_iteration": [[5, 5], [10, 4], [1291, 3], [1854, 2], [11614, 1], [11834, 0]], "number_of_iterations": 11835}
{"file": "strings/1-10-7.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.08100900000000166, "program_length": 35, "number_of_explored_programs": 643, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.02, "time_cost": 0.034, "explored_per_size_tokens": [0, 5, 17, 29, 72, 65, 63, 54, 42, 52, 51, 14, 30, 29, 1, 8, 4, 7, 3, 1, 4, 3, 3, 5, 0, 1, 2, 0, 2, 1, 0, 8, 4, 4, 4, 5, 3, 7, 5, 9, 7, 6, 0, 3, 4, 0, 3, 2, 1], "explored_per_size_sequence": [0, 70, 120, 148, 177, 21, 11, 5, 8, 3, 6, 4, 0, 5, 11, 9, 16, 11, 8, 7, 3], "program": "Program([LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(IsNumber [If(NotAtEnd [MakeLowercase] [MoveLeft])]), MakeUppercase, LoopWhile(IsLowercase [If(AtStart [MakeUppercase] [Drop])]), Drop, MoveRight, MakeLowercase, LoopWhile(IsSpace [If(AtStart [MoveRight] [Drop])]), Drop, Drop, Drop, MoveLeft, LoopWhile(IsUppercase [If(IsNotSpace [Drop] [MoveLeft])]), Drop, Drop, LoopWhile(AtEnd [If(NotAtStart [MakeUppercase] [Drop])]), MakeLowercase])", "cost_per_iteration": [[521, 6], [607, 5], [626, 4], [639, 3], [645, 2], [661, 1], [715, 0]], "number_of_iterations": 716}
{"file": "strings/1-10-8.pl", "test_cost": 1.2222222222222223, "train_cost": 0, "execution_time": 0.036192999999997255, "program_length": 25, "number_of_explored_programs": 273, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.014, "explored_per_size_tokens": [0, 5, 6, 4, 12, 21, 13, 14, 20, 18, 19, 20, 22, 18, 15, 15, 11, 4, 5, 6, 8, 3, 3, 4, 0, 3, 1, 0, 0, 2, 0, 1], "explored_per_size_sequence": [0, 11, 33, 32, 34, 10, 16, 26, 27, 31, 19, 18, 9, 2, 5], "program": "Program([MoveRight, MakeLowercase, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [MoveRight])]), Drop, Drop, LoopWhile(AtStart [If(IsUppercase [Drop] [MakeLowercase])]), Drop, LoopWhile(IsUppercase [If(NotAtStart [MoveRight] [Drop])]), Drop, Drop, Drop, LoopWhile(IsLowercase [If(AtEnd [MakeLowercase] [MakeUppercase])]), MakeUppercase])", "cost_per_iteration": [[116, 5], [130, 4], [257, 3], [261, 2], [268, 1], [290, 0]], "number_of_iterations": 291}
{"file": "strings/1-10-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 8.746903000000003, "program_length": 13, "number_of_explored_programs": 104409, "search_depth": 44, "time_destroy": 0.426, "time_repair": 2.591, "time_cost": 3.725, "explored_per_size_tokens": [0, 5, 22, 73, 203, 338, 565, 1319, 4080, 7193, 9664, 11289, 12698, 11629, 10385, 8642, 7457, 6655, 4509, 2564, 2429, 1501, 458, 422, 253, 17, 12, 13, 5, 3, 3, 1, 0, 0, 2], "explored_per_size_sequence": [0, 116, 397, 1003, 1752, 4405, 8550, 13671, 18779, 19801, 16706, 12182, 6688, 219, 86, 54], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(NotAtEnd [MoveRight] [MakeUppercase])]), LoopWhile(IsSpace [If(IsNotLetter [Drop] [MoveLeft])]), LoopWhile(IsLetter [If(AtEnd [MoveRight] [Drop])])])", "cost_per_iteration": [[10, 4], [43, 3], [372, 2], [798, 1], [132487, 0]], "number_of_iterations": 132488}
{"file": "strings/1-11-2.pl", "test_cost": 4.222222222222222, "train_cost": 0, "execution_time": 1.3908640000000005, "program_length": 18, "number_of_explored_programs": 16985, "search_depth": 7, "time_destroy": 0.066, "time_repair": 0.398, "time_cost": 0.597, "explored_per_size_tokens": [0, 5, 24, 109, 375, 556, 708, 1109, 1599, 1813, 2157, 1672, 1472, 1374, 1062, 982, 755, 418, 373, 252, 92, 50, 22, 6], "explored_per_size_sequence": [0, 261, 1029, 2033, 3029, 3930, 3162, 2301, 1218, 12, 10], "program": "Program([MoveRight, Drop, Drop, Drop, MoveRight, Drop, LoopWhile(IsNumber [If(IsSpace [MakeLowercase] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [MakeLowercase])]), LoopWhile(IsUppercase [MoveRight, MakeLowercase])])", "cost_per_iteration": [[5, 3], [29, 2], [131, 1], [20745, 0]], "number_of_iterations": 20746}
{"file": "strings/1-11-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 6.493039000000003, "program_length": 21, "number_of_explored_programs": 57083, "search_depth": 24, "time_destroy": 0.27, "time_repair": 1.72, "time_cost": 2.782, "explored_per_size_tokens": [0, 5, 25, 349, 2146, 3698, 3613, 2999, 3342, 4875, 5327, 3678, 3634, 5367, 4372, 2833, 2183, 2376, 2327, 1369, 526, 962, 676, 83, 163, 141, 4, 5, 2, 2, 1], "explored_per_size_sequence": [0, 1460, 5286, 9689, 14904, 12110, 8316, 4795, 401, 76, 37, 6, 3], "program": "Program([LoopWhile(IsLetter [If(NotAtStart [Drop] [MoveRight])]), LoopWhile(IsSpace [If(IsUppercase [MakeUppercase] [Drop])]), LoopWhile(IsUppercase [If(IsNumber [MoveLeft] [MoveRight])]), Drop, LoopWhile(AtStart [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(AtEnd [MakeUppercase] [Drop])])])", "cost_per_iteration": [[0, 10], [1, 6], [18, 5], [78, 4], [94, 2], [165, 1], [69908, 0]], "number_of_iterations": 69909}
{"file": "strings/1-11-4.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.02766099999999483, "program_length": 14, "number_of_explored_programs": 201, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.009, "explored_per_size_tokens": [0, 1, 2, 2, 1, 2, 3, 2, 2, 2, 8, 7, 14, 11, 14, 18, 15, 11, 14, 15, 18, 12, 8, 4, 6, 2, 2, 3, 2], "explored_per_size_sequence": [0, 4, 4, 6, 6, 3, 8, 17, 32, 36, 33, 23, 15, 13, 1], "program": "Program([LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveRight])]), Drop, MoveRight, Drop, Drop, Drop, LoopWhile(AtEnd [If(IsLowercase [MoveLeft] [MakeLowercase])]), Drop])", "cost_per_iteration": [[12, 7], [22, 4], [47, 3], [68, 1], [201, 0]], "number_of_iterations": 202}
{"file": "strings/1-11-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10329799999999523, "program_length": 22, "number_of_explored_programs": 767, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.021, "time_cost": 0.048, "explored_per_size_tokens": [0, 3, 1, 2, 2, 4, 4, 8, 2, 5, 5, 7, 6, 10, 18, 27, 28, 32, 38, 54, 49, 50, 43, 69, 45, 38, 36, 31, 35, 32, 24, 11, 17, 10, 6, 6, 5, 2, 1, 1], "explored_per_size_sequence": [0, 4, 5, 9, 18, 9, 2, 8, 30, 54, 100, 144, 136, 98, 82, 47, 7, 7, 2, 5], "program": "Program([LoopWhile(IsUppercase [If(IsNotLetter [MoveLeft] [MoveRight])]), LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [Drop])]), MoveRight, Drop, MoveRight, LoopWhile(IsLowercase [If(IsNumber [MakeUppercase] [Drop])]), MoveLeft, Drop, MoveLeft])", "cost_per_iteration": [[1, 6], [52, 5], [54, 4], [62, 3], [63, 2], [228, 1], [777, 0]], "number_of_iterations": 778}
{"file": "strings/1-11-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01968000000000103, "program_length": 35, "number_of_explored_programs": 105, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 0, 0, 1, 0, 2, 2, 1, 1, 3, 2, 3, 4, 2, 7, 2, 3, 2, 3, 4, 1, 4, 4, 5, 3, 3, 6, 6, 9, 2, 3, 1, 2, 4, 3, 1, 1, 1, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 2, 4, 4, 6, 12, 8, 17, 15, 14, 13, 3, 7], "program": "Program([LoopWhile(AtStart [If(NotAtStart [Drop] [MoveRight])]), Drop, LoopWhile(IsLetter [If(NotAtStart [Drop] [MakeLowercase])]), Drop, LoopWhile(IsNumber [If(NotAtStart [MoveRight] [MakeUppercase])]), LoopWhile(AtStart [If(IsUppercase [Drop] [MoveRight])]), MakeUppercase, LoopWhile(IsSpace [MoveRight, Drop]), LoopWhile(IsUppercase [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveRight])]), LoopWhile(IsNumber [If(IsSpace [MoveRight] [MoveLeft])]), MoveLeft])", "cost_per_iteration": [[0, 10], [18, 9], [21, 8], [24, 6], [25, 5], [37, 3], [40, 1], [105, 0]], "number_of_iterations": 106}
{"file": "strings/1-11-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0722290000000001, "program_length": 12, "number_of_explored_programs": 721, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.017, "time_cost": 0.031, "explored_per_size_tokens": [0, 5, 13, 9, 10, 34, 49, 36, 31, 55, 55, 67, 57, 45, 46, 32, 42, 29, 30, 26, 15, 14, 11, 7, 0, 1, 1, 1], "explored_per_size_sequence": [0, 11, 48, 105, 118, 148, 118, 98, 57, 18], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveLeft])]), Drop, MoveRight, MakeUppercase, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [Drop])])])", "cost_per_iteration": [[37, 5], [49, 4], [68, 2], [100, 1], [753, 0]], "number_of_iterations": 754}
{"file": "strings/1-11-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.13742399999999577, "program_length": 18, "number_of_explored_programs": 228, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.01, "explored_per_size_tokens": [0, 4, 5, 2, 6, 10, 4, 6, 10, 19, 21, 7, 10, 13, 15, 14, 7, 12, 15, 15, 6, 6, 5, 1, 4, 4, 1, 4, 1, 0, 0, 1], "explored_per_size_sequence": [0, 10, 19, 17, 27, 28, 23, 18, 20, 27, 22, 9, 4, 4], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(AtStart [MoveRight] [Drop])]), Drop, MakeUppercase, MoveRight, Drop, LoopWhile(IsSpace [If(IsNotLetter [MoveRight] [MoveLeft])]), LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveLeft])]), MoveLeft])", "cost_per_iteration": [[2, 5], [108, 4], [117, 2], [224, 1], [234, 0]], "number_of_iterations": 235}
{"file": "strings/1-11-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01307899999999762, "program_length": 28, "number_of_explored_programs": 59, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 1, 1, 2, 0, 1, 3, 2, 4, 0, 3, 2, 4, 1, 2, 0, 3, 2, 2, 4, 1, 2, 0, 7, 1, 2, 0, 1, 2, 3, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 2, 2, 10, 4, 6, 2, 9, 11, 4, 4, 2, 1], "program": "Program([LoopWhile(IsSpace [If(IsLowercase [MakeLowercase] [MoveRight])]), MoveRight, LoopWhile(IsLetter [If(NotAtStart [Drop] [MoveRight])]), LoopWhile(IsUppercase [If(IsLetter [MakeLowercase] [MoveRight])]), Drop, LoopWhile(IsUppercase [If(NotAtStart [MoveRight] [MakeLowercase])]), Drop, LoopWhile(AtEnd [If(IsNotLetter [MakeUppercase] [MoveRight])]), LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeUppercase])]), MoveRight])", "cost_per_iteration": [[6, 8], [13, 6], [22, 5], [37, 4], [45, 1], [60, 0]], "number_of_iterations": 61}
{"file": "strings/1-12-2.pl", "test_cost": 2.5555555555555554, "train_cost": 1, "execution_time": 10.000109000000002, "program_length": 24, "number_of_explored_programs": 76543, "search_depth": 27, "time_destroy": 0.289, "time_repair": 2.314, "time_cost": 4.775, "explored_per_size_tokens": [0, 4, 13, 18, 39, 53, 63, 86, 89, 98, 142, 237, 327, 379, 817, 1206, 1779, 2695, 3778, 4692, 5071, 5702, 6445, 7080, 7279, 5956, 5072, 4338, 3765, 3217, 2142, 1342, 1202, 786, 247, 236, 127, 9, 9, 3], "explored_per_size_sequence": [0, 24, 50, 102, 205, 325, 418, 556, 1302, 3521, 6437, 10282, 13208, 13331, 11677, 8352, 4471, 1535, 698, 44, 5], "program": "Program([MakeUppercase, MakeUppercase, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [MoveRight])]), MoveRight, MakeUppercase, MoveRight, MoveRight, MoveRight, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [MoveRight])]), Drop, Drop, Drop, LoopWhile(NotAtEnd [MoveRight, Drop]), Drop, Drop, Drop])", "cost_per_iteration": [[21, 11], [237, 10], [238, 9], [255, 7], [284, 6], [313, 5], [387, 4], [3155, 3], [4797, 2], [11152, 1]], "number_of_iterations": 85194}
{"file": "strings/1-12-3.pl", "test_cost": 8.222222222222221, "train_cost": 5, "execution_time": 10.000008999999991, "program_length": 14, "number_of_explored_programs": 106627, "search_depth": 49, "time_destroy": 0.502, "time_repair": 2.947, "time_cost": 4.353, "explored_per_size_tokens": [0, 5, 25, 437, 2965, 6464, 8284, 8842, 9725, 13087, 13049, 9640, 7940, 7475, 6492, 4512, 2373, 2234, 1831, 533, 303, 331, 67, 3, 3, 5, 1, 1], "explored_per_size_sequence": [0, 1937, 8680, 16845, 25847, 22907, 17598, 10615, 2144, 27, 17, 7, 3], "program": "Program([LoopWhile(IsLowercase [If(AtEnd [MakeLowercase] [MakeUppercase])]), MoveRight, LoopWhile(NotAtEnd [MoveRight, Drop]), LoopWhile(AtStart [If(IsUppercase [Drop] [MakeUppercase])]), Drop, MakeUppercase])", "cost_per_iteration": [[7, 12], [53, 9], [103, 8], [153, 7], [180, 6], [207, 5]], "number_of_iterations": 145338}
{"file": "strings/1-12-4.pl", "test_cost": 1, "train_cost": 1, "execution_time": 10.000078000000002, "program_length": 19, "number_of_explored_programs": 86886, "search_depth": 33, "time_destroy": 0.344, "time_repair": 2.501, "time_cost": 4.53, "explored_per_size_tokens": [0, 4, 6, 11, 16, 40, 125, 416, 1269, 2193, 3427, 4598, 5522, 6162, 6321, 6642, 6942, 7180, 7809, 6299, 5083, 4109, 3570, 3234, 2095, 1101, 1265, 855, 182, 218, 165, 8, 11, 0, 4, 2, 2], "explored_per_size_sequence": [0, 4, 18, 1774, 5467, 10787, 16179, 18580, 15824, 11278, 6202, 493, 210, 43, 21, 6], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [MoveRight] [MakeUppercase])]), Drop, LoopWhile(IsSpace [If(IsNotLowercase [MakeUppercase] [MakeLowercase])]), MakeUppercase, LoopWhile(IsLetter [If(AtStart [Drop] [MoveRight])]), LoopWhile(NotAtEnd [Drop, MakeUppercase]), Drop])", "cost_per_iteration": [[0, 12], [31, 7], [221, 6], [726, 5], [799, 4], [3724, 2], [4139, 1]], "number_of_iterations": 101574}
{"file": "strings/1-12-5.pl", "test_cost": 4.444444444444445, "train_cost": 1, "execution_time": 10.00002400000001, "program_length": 20, "number_of_explored_programs": 77193, "search_depth": 29, "time_destroy": 0.294, "time_repair": 2.31, "time_cost": 4.755, "explored_per_size_tokens": [0, 5, 25, 87, 277, 337, 343, 407, 558, 759, 851, 1160, 1813, 2230, 2402, 3283, 4211, 4545, 4830, 5047, 5386, 5651, 6176, 5332, 4892, 3794, 3166, 3133, 2136, 1371, 1308, 756, 362, 323, 135, 67, 35], "explored_per_size_sequence": [0, 208, 562, 966, 1244, 2259, 4924, 8755, 12874, 14879, 13655, 9900, 5566, 1399, 2], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsLowercase [If(IsNotUppercase [MoveRight] [Drop])]), Drop, MakeUppercase, LoopWhile(IsLetter [If(NotAtStart [MoveRight] [MoveLeft])]), LoopWhile(NotAtEnd [MoveRight, Drop]), LoopWhile(IsLetter [If(IsNotLowercase [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[2, 11], [321, 10], [4711, 8], [4855, 7], [4949, 5], [5138, 3], [5278, 2], [8459, 1]], "number_of_iterations": 87629}
{"file": "strings/1-13-2.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.04741500000000087, "program_length": 35, "number_of_explored_programs": 248, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.017, "explored_per_size_tokens": [0, 4, 2, 1, 5, 3, 4, 3, 2, 8, 2, 10, 7, 14, 7, 9, 10, 6, 8, 4, 12, 8, 10, 4, 7, 6, 2, 8, 10, 7, 8, 4, 9, 10, 7, 8, 6, 6, 2, 2, 1, 2], "explored_per_size_sequence": [0, 7, 7, 9, 12, 10, 17, 13, 14, 18, 13, 13, 16, 20, 15, 17, 25, 13, 7, 2], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), MoveRight, MoveLeft, Drop, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveLeft])]), Drop, MoveLeft, Drop, LoopWhile(IsLowercase [MakeLowercase, MoveRight]), LoopWhile(IsUppercase [If(IsLowercase [MakeUppercase] [MoveLeft])]), LoopWhile(IsLetter [If(IsNotUppercase [MakeLowercase] [MoveLeft])]), Drop, MakeUppercase, LoopWhile(IsSpace [If(IsLetter [MoveLeft] [MakeLowercase])]), Drop, Drop, Drop])", "cost_per_iteration": [[15, 16], [43, 12], [44, 8], [51, 7], [94, 5], [125, 4], [139, 3], [141, 2], [219, 1], [247, 0]], "number_of_iterations": 248}
{"file": "strings/1-13-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.0802500000000066, "program_length": 24, "number_of_explored_programs": 620, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.017, "time_cost": 0.036, "explored_per_size_tokens": [0, 3, 1, 5, 8, 9, 12, 10, 15, 21, 27, 28, 20, 32, 32, 29, 26, 35, 36, 32, 31, 39, 20, 27, 20, 22, 23, 13, 9, 11, 6, 3, 3, 7, 2, 2, 1], "explored_per_size_sequence": [0, 8, 12, 34, 62, 73, 68, 88, 63, 52, 33, 47, 34, 21, 13, 12], "program": "Program([LoopWhile(IsLetter [If(NotAtStart [MoveLeft] [Drop])]), Drop, LoopWhile(IsLowercase [If(IsNumber [MoveLeft] [Drop])]), MoveRight, MoveLeft, Drop, LoopWhile(IsLetter [If(IsNotSpace [MoveRight] [MoveLeft])]), MakeUppercase, MakeLowercase, MoveRight, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[4, 13], [22, 12], [45, 10], [58, 4], [455, 3], [482, 1], [624, 0]], "number_of_iterations": 625}
{"file": "strings/1-13-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.3660679999999985, "program_length": 15, "number_of_explored_programs": 14520, "search_depth": 6, "time_destroy": 0.059, "time_repair": 0.361, "time_cost": 0.66, "explored_per_size_tokens": [0, 5, 25, 109, 355, 540, 766, 1063, 1334, 1413, 1451, 1418, 1282, 1101, 879, 798, 679, 433, 282, 252, 155, 60, 57, 26, 4, 11, 8, 5, 3, 2, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 200, 762, 1623, 2302, 2678, 2609, 2190, 1397, 729, 14, 7, 5, 4], "program": "Program([LoopWhile(IsLowercase [Drop, Drop]), LoopWhile(AtEnd [If(AtStart [MoveRight] [MakeUppercase])]), Drop, MoveRight, MoveRight, MoveRight, MoveRight, LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[17, 12], [27, 11], [48, 6], [55, 5], [123, 4], [3296, 3], [16706, 2], [16734, 1], [16762, 0]], "number_of_iterations": 16763}
{"file": "strings/1-13-5.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.09656699999999319, "program_length": 24, "number_of_explored_programs": 665, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.02, "time_cost": 0.044, "explored_per_size_tokens": [0, 5, 3, 2, 11, 20, 12, 11, 14, 24, 33, 26, 22, 50, 38, 33, 31, 23, 33, 25, 32, 35, 35, 31, 21, 26, 19, 13, 10, 8, 7, 6, 5, 1], "explored_per_size_sequence": [0, 10, 35, 40, 94, 80, 72, 69, 68, 62, 50, 41, 31, 11, 2], "program": "Program([LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [Drop])]), LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), MoveLeft, LoopWhile(IsNotLowercase [MakeUppercase, Drop]), LoopWhile(IsLetter [If(IsNotLetter [MakeLowercase] [MoveRight])]), Drop, LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop, Drop, Drop])", "cost_per_iteration": [[0, 13], [3, 11], [24, 10], [27, 8], [101, 7], [108, 6], [148, 5], [287, 4], [431, 3], [434, 1], [682, 0]], "number_of_iterations": 683}
{"file": "strings/1-14-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.021509000000008882, "program_length": 33, "number_of_explored_programs": 76, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 5, 1, 4, 6, 1, 6, 7, 7, 8, 3, 4, 2, 5, 1, 2, 0, 1], "explored_per_size_sequence": [0, 1, 1, 1, 1, 0, 1, 0, 2, 0, 1, 3, 0, 1, 2, 6, 8, 9, 11, 18, 5, 4, 1], "program": "Program([Drop, Drop, MoveRight, LoopWhile(IsSpace [If(AtEnd [Drop] [MakeLowercase])]), Drop, MakeUppercase, Drop, MakeLowercase, Drop, Drop, LoopWhile(IsNumber [If(IsNotSpace [MakeLowercase] [MoveLeft])]), MakeUppercase, Drop, MoveLeft, LoopWhile(IsNumber [If(IsLowercase [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsLowercase [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[2, 14], [4, 13], [7, 12], [11, 10], [12, 3], [31, 2], [51, 1], [76, 0]], "number_of_iterations": 77}
{"file": "strings/1-14-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.17134399999999061, "program_length": 34, "number_of_explored_programs": 247, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.017, "explored_per_size_tokens": [0, 1, 3, 1, 1, 2, 5, 0, 2, 4, 0, 1, 2, 5, 2, 1, 2, 2, 3, 3, 4, 5, 4, 4, 6, 5, 6, 9, 9, 15, 8, 16, 14, 14, 21, 7, 16, 8, 15, 7, 5, 2, 4, 1, 0, 2], "explored_per_size_sequence": [0, 1, 4, 9, 2, 2, 2, 4, 4, 6, 3, 2, 4, 5, 7, 13, 15, 28, 33, 26, 30, 25, 18, 4], "program": "Program([MakeUppercase, LoopWhile(IsNotSpace [Drop, MakeUppercase]), Drop, LoopWhile(IsLetter [If(AtStart [Drop] [MakeUppercase])]), MakeUppercase, LoopWhile(AtStart [If(NotAtEnd [MoveRight] [MakeLowercase])]), Drop, Drop, MoveLeft, MakeLowercase, Drop, Drop, MakeUppercase, Drop, Drop, LoopWhile(IsUppercase [If(IsLowercase [MakeLowercase] [Drop])]), MakeUppercase, MakeLowercase, LoopWhile(IsNumber [If(IsNotLowercase [Drop] [MakeLowercase])]), Drop])", "cost_per_iteration": [[3, 16], [13, 14], [26, 13], [29, 12], [32, 10], [36, 8], [43, 4], [55, 3], [65, 2], [116, 1], [248, 0]], "number_of_iterations": 249}
{"file": "strings/1-14-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.02280600000000277, "program_length": 19, "number_of_explored_programs": 172, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.007, "explored_per_size_tokens": [0, 1, 4, 4, 2, 2, 12, 11, 6, 10, 6, 7, 14, 10, 7, 9, 3, 7, 7, 9, 6, 9, 4, 6, 0, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 7, 19, 15, 18, 26, 19, 8, 11, 9, 17, 10, 8, 2, 2], "program": "Program([MakeUppercase, MakeUppercase, LoopWhile(IsLetter [If(IsLowercase [MoveLeft] [Drop])]), Drop, LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [MakeUppercase])]), Drop, MakeUppercase, Drop, Drop, MakeLowercase, Drop, Drop, Drop])", "cost_per_iteration": [[0, 9], [1, 7], [10, 6], [110, 4], [113, 3], [143, 2], [151, 1], [173, 0]], "number_of_iterations": 174}
{"file": "strings/1-14-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.012603999999996063, "program_length": 19, "number_of_explored_programs": 62, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 1, 2, 0, 4, 2, 2, 1, 2, 2, 3, 0, 3, 1, 3, 3, 3, 3, 4, 2, 3, 1, 2, 3, 0, 3, 1, 1, 0, 2, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 8, 6, 3, 7, 3, 5, 4, 9, 6, 2, 5, 2], "program": "Program([LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeLowercase])]), MakeUppercase, LoopWhile(IsNotLetter [Drop, Drop]), LoopWhile(IsLetter [If(IsSpace [MoveLeft] [Drop])]), Drop, Drop, LoopWhile(IsUppercase [If(IsLowercase [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[1, 14], [11, 12], [20, 11], [25, 10], [27, 7], [32, 6], [47, 1], [61, 0]], "number_of_iterations": 62}
{"file": "strings/1-14-6.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.05445999999999174, "program_length": 42, "number_of_explored_programs": 321, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.022, "explored_per_size_tokens": [0, 1, 0, 0, 2, 4, 5, 5, 5, 8, 4, 2, 3, 9, 7, 7, 6, 6, 8, 5, 2, 10, 7, 2, 8, 5, 6, 8, 7, 4, 4, 3, 8, 8, 11, 7, 8, 6, 10, 8, 14, 11, 11, 11, 14, 7, 8, 3, 8, 3, 1, 4, 5, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 9, 14, 17, 15, 13, 12, 10, 14, 15, 4, 14, 7, 21, 18, 28, 40, 25, 26, 13, 3, 0, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotUppercase [MoveRight] [Drop])]), MakeUppercase, Drop, LoopWhile(IsUppercase [If(AtEnd [MakeUppercase] [Drop])]), Drop, MakeUppercase, LoopWhile(IsSpace [If(IsNotLetter [MakeUppercase] [Drop])]), LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveLeft])]), MoveRight, Drop, Drop, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [MakeLowercase])]), Drop, LoopWhile(IsNumber [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(IsLowercase [MoveLeft, MakeUppercase]), LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MakeUppercase])]), Drop, MoveRight])", "cost_per_iteration": [[4, 16], [41, 12], [68, 11], [84, 9], [97, 8], [122, 7], [147, 4], [151, 3], [159, 1], [320, 0]], "number_of_iterations": 321}
{"file": "strings/1-14-7.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.059044000000000096, "program_length": 54, "number_of_explored_programs": 282, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.025, "explored_per_size_tokens": [0, 0, 0, 0, 3, 1, 1, 0, 1, 2, 2, 0, 1, 1, 3, 1, 1, 1, 1, 4, 2, 4, 3, 4, 3, 3, 2, 3, 3, 3, 2, 0, 5, 0, 4, 2, 4, 8, 5, 7, 9, 8, 12, 12, 5, 12, 12, 10, 4, 14, 11, 12, 10, 13, 9, 9, 3, 7, 9, 4, 3, 3, 1], "explored_per_size_sequence": [0, 3, 2, 2, 3, 3, 2, 4, 2, 5, 7, 6, 4, 5, 3, 2, 3, 2, 3, 9, 14, 17, 17, 14, 13, 15, 13, 19, 18, 15, 21, 23, 11, 2], "program": "Program([LoopWhile(IsLetter [If(AtEnd [MoveRight] [Drop])]), MakeUppercase, Drop, MakeLowercase, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeUppercase])]), MakeLowercase, MoveRight, Drop, MakeUppercase, MakeLowercase, MoveRight, Drop, MakeUppercase, MoveRight, Drop, MakeLowercase, Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [Drop])]), MoveLeft, MoveLeft, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), MoveLeft, Drop, LoopWhile(IsLetter [If(AtStart [Drop] [MoveRight])]), MoveLeft, LoopWhile(IsUppercase [If(IsLetter [MoveLeft] [MoveRight])]), Drop, MoveLeft, Drop, MakeUppercase, LoopWhile(IsLowercase [If(NotAtStart [MakeLowercase] [MoveRight])]), Drop])", "cost_per_iteration": [[3, 17], [8, 16], [13, 15], [22, 13], [31, 12], [51, 11], [52, 10], [67, 9], [70, 6], [82, 5], [99, 4], [157, 3], [179, 2], [215, 1], [283, 0]], "number_of_iterations": 284}
{"file": "strings/1-14-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.160578000000001, "program_length": 11, "number_of_explored_programs": 229, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.016, "explored_per_size_tokens": [0, 0, 0, 0, 3, 3, 0, 0, 2, 7, 2, 5, 2, 5, 5, 5, 4, 2, 2, 4, 5, 9, 3, 9, 8, 5, 6, 19, 19, 12, 8, 15, 9, 6, 7, 7, 11, 4, 6, 4, 3, 0, 2, 0, 1], "explored_per_size_sequence": [0, 3, 3, 4, 1, 9, 8, 4, 9, 9, 11, 10, 10, 8, 17, 24, 33, 29, 17, 11, 6, 3], "program": "Program([MakeUppercase, LoopWhile(IsNumber [If(AtEnd [Drop] [MakeUppercase])]), MakeUppercase, Drop, LoopWhile(IsNotNumber [Drop, MakeLowercase]), MoveRight])", "cost_per_iteration": [[2, 34], [9, 33], [14, 32], [32, 31], [43, 30], [46, 29], [50, 28], [77, 26], [84, 24], [93, 23], [119, 22], [168, 21], [175, 20], [180, 2], [192, 1], [229, 0]], "number_of_iterations": 230}
{"file": "strings/1-14-9.pl", "test_cost": 8.444444444444445, "train_cost": 0, "execution_time": 0.013930000000001996, "program_length": 18, "number_of_explored_programs": 81, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 1, 1, 2, 6, 8, 10, 5, 5, 9, 6, 5, 2, 4, 2, 7, 1, 2, 0, 1, 2], "explored_per_size_sequence": [0, 2, 12, 13, 26, 8, 9, 8, 3], "program": "Program([LoopWhile(AtStart [If(IsNotLetter [MoveRight] [Drop])]), LoopWhile(IsUppercase [Drop, MoveLeft]), Drop, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeUppercase])]), LoopWhile(IsNumber [If(AtEnd [MakeLowercase] [Drop])]), MakeLowercase, Drop])", "cost_per_iteration": [[1, 7], [16, 6], [32, 5], [81, 0]], "number_of_iterations": 82}
{"file": "strings/1-15-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 8.018347000000006, "program_length": 34, "number_of_explored_programs": 90968, "search_depth": 49, "time_destroy": 0.478, "time_repair": 2.616, "time_cost": 3.256, "explored_per_size_tokens": [0, 5, 25, 475, 4407, 12558, 12688, 10333, 10527, 13232, 9688, 2148, 5820, 5478, 276, 879, 1148, 18, 23, 21, 28, 36, 59, 73, 70, 71, 90, 62, 93, 103, 65, 68, 75, 64, 58, 44, 42, 34, 29, 18, 16, 7, 7, 1, 3, 2, 0, 1], "explored_per_size_sequence": [0, 2175, 21623, 31447, 34389, 16, 24, 22, 31, 26, 50, 76, 75, 103, 129, 155, 137, 147, 132, 110, 66, 29, 6], "program": "Program([MakeLowercase, LoopWhile(IsNotUppercase [MoveRight, MoveRight]), LoopWhile(IsNotLowercase [MakeUppercase, MoveRight]), LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [MoveRight])]), MoveLeft, LoopWhile(IsNumber [If(AtStart [MoveLeft] [Drop])]), LoopWhile(IsLetter [If(IsNotUppercase [MoveRight] [MakeLowercase])]), MakeUppercase, MoveRight, LoopWhile(IsLowercase [MakeLowercase, MoveRight]), MakeLowercase, Drop, MoveRight, MoveRight, MoveLeft, LoopWhile(IsLetter [If(NotAtStart [Drop] [MoveRight])])])", "cost_per_iteration": [[145946, 7], [145997, 6], [146073, 4], [146104, 3], [146466, 2], [146527, 1], [147320, 0]], "number_of_iterations": 147321}
{"file": "strings/1-15-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 1.7559150000000017, "program_length": 24, "number_of_explored_programs": 19251, "search_depth": 9, "time_destroy": 0.091, "time_repair": 0.51, "time_cost": 0.81, "explored_per_size_tokens": [0, 5, 25, 390, 2123, 2719, 2113, 1711, 1761, 2230, 1680, 345, 1027, 1009, 125, 280, 319, 163, 172, 156, 157, 135, 117, 116, 106, 82, 63, 43, 24, 24, 8, 8, 6, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1640, 4360, 5319, 5984, 3, 16, 67, 131, 255, 318, 340, 337, 263, 147, 59, 11, 1], "program": "Program([MoveRight, MakeUppercase, LoopWhile(IsLetter [If(NotAtEnd [MoveRight] [MakeUppercase])]), LoopWhile(AtEnd [MoveRight, MakeUppercase]), LoopWhile(NotAtEnd [MoveRight, MoveRight]), LoopWhile(NotAtEnd [MoveRight, MakeLowercase]), LoopWhile(IsLowercase [If(IsNotLetter [MoveLeft] [Drop])]), Drop, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[24138, 7], [24153, 6], [24161, 5], [24167, 4], [24168, 3], [24175, 2], [25058, 1], [26148, 0]], "number_of_iterations": 26149}
{"file": "strings/1-15-4.pl", "test_cost": 4.111111111111111, "train_cost": 0, "execution_time": 0.9273239999999987, "program_length": 24, "number_of_explored_programs": 11575, "search_depth": 6, "time_destroy": 0.052, "time_repair": 0.286, "time_cost": 0.401, "explored_per_size_tokens": [0, 5, 25, 323, 1594, 1764, 1384, 1143, 1137, 1405, 1068, 238, 609, 594, 33, 103, 104, 4, 1, 3, 4, 1, 0, 3, 2, 1, 1, 1, 4, 5, 0, 3, 2, 2, 1, 0, 1, 2, 2, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 1296, 2863, 3434, 3910, 4, 6, 13, 9, 6, 5, 0, 2, 2, 3, 2, 3, 6, 5, 3, 3], "program": "Program([LoopWhile(IsNumber [If(AtStart [MoveLeft] [MakeUppercase])]), MakeUppercase, LoopWhile(NotAtEnd [MoveRight, MakeLowercase]), MakeUppercase, Drop, MakeLowercase, Drop, Drop, Drop, LoopWhile(IsLowercase [If(IsNotSpace [MoveLeft] [Drop])]), Drop, Drop, Drop, MakeUppercase, MakeLowercase, Drop])", "cost_per_iteration": [[15554, 7], [15561, 6], [15598, 5], [15605, 4], [15609, 3], [15614, 2], [15629, 1], [15632, 0]], "number_of_iterations": 15633}
{"file": "strings/1-15-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.06406500000001358, "program_length": 26, "number_of_explored_programs": 874, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.018, "time_cost": 0.025, "explored_per_size_tokens": [0, 5, 23, 43, 138, 122, 91, 72, 75, 101, 71, 22, 46, 38, 3, 7, 8, 0, 1, 1, 1, 0, 2, 1, 0, 0, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 131, 211, 251, 271, 3, 0, 2, 1, 1, 2, 1], "program": "Program([LoopWhile(IsLowercase [If(IsNotLetter [MakeLowercase] [Drop])]), LoopWhile(NotAtEnd [MoveRight, MoveRight]), LoopWhile(IsSpace [If(IsLowercase [MoveRight] [MakeLowercase])]), LoopWhile(IsLetter [If(AtEnd [Drop] [MoveRight])]), LoopWhile(AtStart [MakeLowercase, MoveRight]), Drop, MakeUppercase, Drop, LoopWhile(IsLowercase [If(AtEnd [Drop] [MakeUppercase])]), MakeLowercase])", "cost_per_iteration": [[1031, 5], [1042, 4], [1044, 3], [1045, 2], [1047, 0]], "number_of_iterations": 1048}
{"file": "strings/1-16-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.17545900000000003, "program_length": 41, "number_of_explored_programs": 119, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.014, "explored_per_size_tokens": [0, 1, 0, 2, 2, 2, 2, 2, 0, 3, 2, 1, 2, 2, 4, 1, 4, 1, 9, 1, 1, 4, 1, 2, 2, 4, 1, 3, 2, 7, 4, 4, 6, 3, 4, 4, 3, 5, 7, 0, 0, 2, 3, 1, 2, 1, 2], "explored_per_size_sequence": [0, 2, 0, 6, 5, 2, 3, 5, 12, 7, 4, 4, 5, 9, 10, 11, 11, 7, 8, 4, 1, 2, 1], "program": "Program([MoveRight, LoopWhile(IsUppercase [If(AtEnd [MakeLowercase] [Drop])]), LoopWhile(IsLowercase [If(AtStart [MakeUppercase] [Drop])]), MakeUppercase, LoopWhile(IsSpace [If(IsNotUppercase [MoveLeft] [Drop])]), MakeUppercase, Drop, MakeLowercase, LoopWhile(IsLowercase [Drop, Drop]), LoopWhile(AtStart [If(IsNumber [MoveLeft] [MoveRight])]), Drop, LoopWhile(IsLowercase [MakeUppercase, Drop]), MoveRight, MoveLeft, LoopWhile(IsUppercase [If(IsNotLetter [Drop] [MakeUppercase])]), MakeUppercase, Drop, MoveLeft, LoopWhile(NotAtStart [MakeUppercase, MoveRight]), Drop])", "cost_per_iteration": [[5, 17], [13, 16], [22, 15], [30, 12], [54, 9], [66, 8], [90, 2], [102, 1], [118, 0]], "number_of_iterations": 119}
{"file": "strings/1-16-3.pl", "test_cost": 6.111111111111111, "train_cost": 0, "execution_time": 0.07256999999999991, "program_length": 26, "number_of_explored_programs": 358, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.015, "time_cost": 0.031, "explored_per_size_tokens": [0, 1, 2, 1, 1, 0, 1, 4, 1, 3, 4, 2, 6, 11, 5, 10, 6, 12, 14, 20, 16, 17, 29, 20, 21, 26, 20, 22, 16, 12, 10, 9, 8, 11, 9, 0, 2, 0, 3, 1, 0, 0, 2], "explored_per_size_sequence": [0, 1, 2, 3, 5, 1, 7, 11, 4, 24, 38, 50, 51, 72, 42, 24, 15, 4, 4], "program": "Program([Drop, Drop, LoopWhile(IsLowercase [If(IsNotLetter [MoveLeft] [Drop])]), MakeLowercase, Drop, Drop, LoopWhile(IsLowercase [If(AtEnd [MoveLeft] [Drop])]), MakeLowercase, Drop, LoopWhile(IsNumber [If(IsNotSpace [Drop] [MakeUppercase])]), MoveRight, MoveLeft, LoopWhile(IsUppercase [If(IsNotLowercase [MakeLowercase] [MoveLeft])]), Drop])", "cost_per_iteration": [[0, 18], [12, 17], [20, 16], [24, 15], [38, 10], [39, 9], [65, 7], [117, 5], [144, 4], [231, 2], [259, 1], [359, 0]], "number_of_iterations": 360}
{"file": "strings/1-16-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.03608699999999998, "program_length": 44, "number_of_explored_programs": 141, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.012, "explored_per_size_tokens": [0, 1, 1, 2, 4, 3, 4, 3, 4, 2, 2, 0, 4, 2, 2, 2, 1, 1, 2, 3, 0, 1, 2, 1, 3, 1, 1, 2, 3, 1, 1, 3, 7, 3, 3, 1, 3, 2, 7, 4, 4, 5, 5, 2, 5, 1, 4, 4, 3, 3, 2, 1, 1, 2, 0, 3, 3, 0, 0, 1], "explored_per_size_sequence": [0, 4, 8, 8, 10, 4, 2, 2, 2, 5, 4, 1, 4, 6, 7, 5, 3, 6, 9, 7, 10, 12, 10, 7, 1, 3, 1], "program": "Program([LoopWhile(IsNumber [If(IsSpace [MoveLeft] [MoveRight])]), MoveRight, MakeUppercase, LoopWhile(IsLetter [If(AtEnd [MakeUppercase] [Drop])]), MakeUppercase, Drop, MoveRight, MoveLeft, Drop, LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeUppercase])]), Drop, MakeLowercase, MakeUppercase, Drop, MoveLeft, Drop, Drop, LoopWhile(IsLowercase [If(IsNotLetter [MoveRight] [Drop])]), MakeLowercase, LoopWhile(AtEnd [If(IsNotUppercase [MakeLowercase] [MoveRight])]), Drop, LoopWhile(IsUppercase [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(IsLetter [If(AtEnd [MoveLeft] [MoveRight])])])", "cost_per_iteration": [[11, 18], [33, 17], [35, 11], [37, 10], [43, 9], [53, 8], [56, 6], [74, 5], [83, 4], [101, 3], [108, 1], [142, 0]], "number_of_iterations": 143}
{"file": "strings/1-16-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.030389999999999917, "program_length": 25, "number_of_explored_programs": 130, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.01, "explored_per_size_tokens": [0, 1, 0, 1, 2, 0, 0, 1, 0, 5, 4, 6, 10, 4, 2, 4, 6, 3, 7, 6, 6, 3, 9, 6, 5, 6, 5, 8, 6, 3, 0, 5, 0, 4, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 1, 0, 1, 6, 1, 13, 22, 13, 20, 18, 18, 8, 8, 1], "program": "Program([MoveRight, MakeUppercase, Drop, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), LoopWhile(IsNumber [If(IsLetter [MoveRight] [MakeLowercase])]), LoopWhile(IsLetter [If(AtStart [MoveRight] [Drop])]), LoopWhile(IsSpace [If(AtEnd [Drop] [MoveRight])]), Drop, LoopWhile(IsLowercase [MoveLeft, MakeLowercase]), Drop, MoveRight, MoveLeft])", "cost_per_iteration": [[3, 13], [5, 12], [19, 11], [22, 10], [33, 6], [45, 5], [51, 2], [54, 1], [130, 0]], "number_of_iterations": 131}
{"file": "strings/1-17-2.pl", "test_cost": 1, "train_cost": 0, "execution_time": 8.967352, "program_length": 17, "number_of_explored_programs": 73052, "search_depth": 32, "time_destroy": 0.394, "time_repair": 2.356, "time_cost": 4.462, "explored_per_size_tokens": [0, 5, 25, 358, 2094, 3824, 4133, 4808, 6838, 7751, 7186, 5589, 5914, 6680, 4796, 2781, 2957, 2876, 1520, 861, 897, 603, 191, 161, 108, 31, 17, 8, 7, 4, 9, 5, 4, 5, 4, 1, 1], "explored_per_size_sequence": [0, 1453, 5534, 11478, 16236, 15365, 11873, 6388, 3796, 801, 36, 36, 21, 18, 13, 2, 2], "program": "Program([LoopWhile(AtStart [If(IsLowercase [MakeLowercase] [MoveRight])]), LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveLeft])]), Drop, MoveRight, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), MoveRight, LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[1, 16], [3, 15], [34, 14], [83, 13], [88, 11], [150, 10], [181, 2], [42204, 1], [93383, 0]], "number_of_iterations": 93384}
{"file": "strings/1-17-3.pl", "test_cost": 6.222222222222222, "train_cost": 0, "execution_time": 0.4325790000000005, "program_length": 19, "number_of_explored_programs": 1489, "search_depth": 1, "time_destroy": 0.007, "time_repair": 0.054, "time_cost": 0.134, "explored_per_size_tokens": [0, 1, 1, 1, 6, 5, 5, 2, 2, 7, 10, 9, 27, 29, 46, 42, 53, 62, 70, 83, 88, 83, 99, 94, 81, 84, 70, 76, 52, 45, 43, 54, 25, 25, 23, 22, 10, 17, 10, 9, 8, 3, 1, 4, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 8, 7, 13, 11, 12, 27, 53, 78, 135, 174, 207, 200, 153, 123, 86, 60, 62, 42, 19, 16, 3], "program": "Program([MoveRight, MakeUppercase, MoveRight, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLetter [If(AtStart [MoveRight] [Drop])]), Drop, MoveRight, Drop, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), MoveLeft])", "cost_per_iteration": [[24, 14], [28, 13], [30, 12], [55, 7], [149, 6], [164, 5], [177, 4], [210, 3], [311, 2], [368, 1], [1522, 0]], "number_of_iterations": 1523}
{"file": "strings/1-17-4.pl", "test_cost": Infinity, "train_cost": 1, "execution_time": 10.000069000000002, "program_length": 17, "number_of_explored_programs": 88724, "search_depth": 35, "time_destroy": 0.348, "time_repair": 2.427, "time_cost": 4.838, "explored_per_size_tokens": [0, 5, 5, 5, 14, 17, 10, 32, 84, 221, 461, 1068, 1532, 1980, 2490, 4233, 6201, 7713, 8413, 9200, 8496, 7564, 6451, 5679, 5099, 3630, 2277, 2204, 1448, 777, 517, 374, 190, 113, 70, 60, 29, 14, 11, 9, 5, 8, 4, 2, 5, 0, 2, 2], "explored_per_size_sequence": [0, 12, 25, 19, 28, 73, 316, 870, 3582, 7743, 12342, 16833, 17230, 14350, 9792, 4993, 236, 141, 47, 44, 33, 10, 5], "program": "Program([MoveRight, LoopWhile(IsNotUppercase [MakeUppercase, Drop]), LoopWhile(NotAtEnd [MoveRight, Drop]), MakeUppercase, LoopWhile(IsLetter [MakeUppercase, Drop]), Drop, Drop, MoveLeft, MoveLeft, Drop, Drop])", "cost_per_iteration": [[69, 16], [92, 14], [125, 13], [156, 12], [167, 9], [192, 8], [200, 5], [216, 4], [288, 3], [428, 2], [13243, 1]], "number_of_iterations": 104831}
{"file": "strings/1-17-5.pl", "test_cost": 0.8888888888888888, "train_cost": 1, "execution_time": 10.000035, "program_length": 16, "number_of_explored_programs": 84912, "search_depth": 34, "time_destroy": 0.387, "time_repair": 2.455, "time_cost": 5.115, "explored_per_size_tokens": [0, 5, 25, 334, 1865, 2953, 2990, 3283, 4440, 5024, 5017, 4350, 5164, 6361, 5860, 5328, 6030, 5394, 4537, 3909, 3192, 2643, 2015, 1405, 1165, 676, 421, 322, 103, 60, 37, 2, 2], "explored_per_size_sequence": [0, 1315, 4261, 7866, 10346, 8977, 8541, 7813, 9704, 9990, 8117, 5412, 2342, 192, 36], "program": "Program([MoveRight, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), LoopWhile(AtEnd [Drop, MakeUppercase]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveRight])]), Drop, MoveRight, LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[0, 16], [14, 15], [25, 8], [36, 6], [76, 4], [972, 3], [48108, 2], [48675, 1]], "number_of_iterations": 104323}
{"file": "strings/1-18-2.pl", "test_cost": 10.11111111111111, "train_cost": 4, "execution_time": 10.000077999999998, "program_length": 18, "number_of_explored_programs": 81350, "search_depth": 31, "time_destroy": 0.321, "time_repair": 2.31, "time_cost": 5.032, "explored_per_size_tokens": [0, 1, 0, 2, 1, 0, 3, 4, 13, 51, 166, 630, 931, 1623, 2710, 3877, 5050, 6124, 7066, 8275, 8252, 7558, 6418, 5472, 4822, 3915, 2910, 2100, 1393, 979, 552, 223, 158, 65, 6], "explored_per_size_sequence": [0, 2, 0, 6, 4, 4, 12, 61, 2419, 6237, 10796, 15630, 16662, 14103, 9858, 5257, 222, 76, 1], "program": "Program([MoveRight, LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), MakeLowercase, Drop, MakeLowercase, LoopWhile(IsLowercase [MakeLowercase, Drop]), Drop, Drop, Drop, Drop, Drop, MoveRight, Drop])", "cost_per_iteration": [[10, 20], [16, 10], [79, 9], [81, 8], [121, 7], [147, 6], [458, 5], [1259, 4]], "number_of_iterations": 93911}
{"file": "strings/1-18-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.0369710000000012, "program_length": 32, "number_of_explored_programs": 188, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.013, "explored_per_size_tokens": [0, 2, 2, 4, 8, 7, 12, 8, 9, 12, 15, 3, 10, 5, 8, 5, 2, 5, 3, 4, 6, 1, 5, 2, 2, 3, 2, 3, 3, 3, 2, 2, 4, 6, 0, 1, 5, 3, 3, 0, 3, 3, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 7, 14, 29, 34, 18, 11, 16, 12, 3, 8, 10, 11, 9, 5, 1], "program": "Program([LoopWhile(IsLowercase [If(NotAtStart [Drop] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotLetter [MakeLowercase] [MoveRight])]), MoveRight, Drop, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeLowercase])]), LoopWhile(IsLowercase [If(IsNumber [MoveLeft] [Drop])]), Drop, LoopWhile(AtStart [If(IsNotUppercase [MoveLeft] [Drop])]), LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeLowercase])]), Drop, LoopWhile(AtEnd [If(IsLowercase [Drop] [MoveLeft])])])", "cost_per_iteration": [[29, 10], [116, 5], [134, 4], [135, 1], [187, 0]], "number_of_iterations": 188}
{"file": "strings/1-18-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.6514049999999969, "program_length": 32, "number_of_explored_programs": 4321, "search_depth": 2, "time_destroy": 0.016, "time_repair": 0.11, "time_cost": 0.291, "explored_per_size_tokens": [0, 2, 0, 0, 1, 1, 3, 12, 16, 27, 52, 69, 92, 155, 190, 282, 335, 356, 351, 433, 351, 343, 271, 250, 200, 156, 112, 88, 77, 34, 25, 12, 14, 3, 2, 3, 2, 1], "explored_per_size_sequence": [0, 2, 5, 7, 9, 24, 25, 160, 309, 533, 701, 838, 687, 520, 315, 97, 68, 19, 2], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsNotLowercase [MakeLowercase] [MoveRight])]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [Drop])]), MoveRight, LoopWhile(AtStart [If(NotAtEnd [MoveLeft] [MakeUppercase])]), Drop, MoveLeft, MakeLowercase, Drop, LoopWhile(AtStart [If(IsNotNumber [MoveLeft] [Drop])]), LoopWhile(IsNumber [If(IsSpace [MoveLeft] [Drop])]), LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MakeUppercase])])])", "cost_per_iteration": [[9, 21], [24, 20], [26, 19], [48, 18], [57, 17], [95, 9], [101, 8], [127, 7], [230, 6], [457, 5], [4411, 4], [4468, 2], [4491, 1], [4538, 0]], "number_of_iterations": 4539}
{"file": "strings/1-18-5.pl", "test_cost": 5.222222222222222, "train_cost": 0, "execution_time": 0.12913700000000006, "program_length": 22, "number_of_explored_programs": 1150, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.028, "time_cost": 0.062, "explored_per_size_tokens": [0, 4, 3, 3, 8, 11, 17, 25, 24, 43, 46, 49, 79, 76, 87, 96, 74, 90, 88, 72, 57, 50, 43, 30, 19, 18, 20, 11, 0, 4, 1, 0, 2], "explored_per_size_sequence": [0, 7, 8, 25, 62, 83, 165, 196, 225, 179, 115, 63, 22], "program": "Program([LoopWhile(IsLetter [If(AtEnd [Drop] [MoveRight])]), MoveRight, MoveRight, LoopWhile(IsLetter [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeLowercase])]), Drop, MoveLeft, Drop, LoopWhile(IsNumber [If(IsNotNumber [MoveLeft] [Drop])])])", "cost_per_iteration": [[20, 12], [52, 11], [57, 10], [104, 5], [346, 4], [404, 3], [1139, 1], [1180, 0]], "number_of_iterations": 1181}
{"file": "strings/1-19-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.019002000000000407, "program_length": 21, "number_of_explored_programs": 106, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.007, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 2, 4, 5, 4, 3, 7, 6, 9, 3, 5, 8, 10, 2, 3, 8, 7, 6, 4, 4, 3, 2, 1], "explored_per_size_sequence": [0, 0, 0, 9, 6, 11, 13, 10, 18, 11, 14, 11, 1, 2], "program": "Program([Drop, MoveRight, MoveRight, LoopWhile(IsLetter [Drop, MakeLowercase]), MoveLeft, LoopWhile(IsSpace [If(AtStart [MoveLeft] [Drop])]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [Drop])]), Drop, LoopWhile(IsNotLowercase [MakeLowercase, MoveLeft]), Drop, Drop])", "cost_per_iteration": [[3, 8], [7, 7], [32, 6], [38, 5], [42, 2], [45, 1], [105, 0]], "number_of_iterations": 106}
{"file": "strings/1-19-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02525500000000136, "program_length": 16, "number_of_explored_programs": 154, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.01, "explored_per_size_tokens": [0, 2, 1, 0, 1, 3, 7, 7, 2, 12, 10, 6, 9, 7, 18, 7, 11, 6, 13, 4, 3, 4, 3, 8, 3, 0, 1, 0, 2, 1, 0, 1, 1, 1], "explored_per_size_sequence": [0, 3, 6, 13, 29, 18, 38, 20, 10, 7, 9, 1], "program": "Program([LoopWhile(IsNumber [If(IsUppercase [MoveRight] [MakeLowercase])]), MakeLowercase, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveRight])]), Drop, LoopWhile(NotAtStart [MoveLeft, Drop]), LoopWhile(IsSpace [MakeLowercase, Drop])])", "cost_per_iteration": [[2, 6], [25, 3], [29, 2], [35, 1], [154, 0]], "number_of_iterations": 155}
{"file": "strings/1-19-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02169800000000066, "program_length": 12, "number_of_explored_programs": 136, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.008, "explored_per_size_tokens": [0, 3, 4, 3, 7, 16, 6, 4, 12, 16, 11, 10, 11, 15, 6, 6, 1, 4, 0, 0, 0, 1], "explored_per_size_sequence": [0, 10, 30, 27, 34, 26, 9], "program": "Program([LoopWhile(AtStart [If(IsLetter [Drop] [MoveRight])]), MoveRight, MoveLeft, LoopWhile(IsNumber [If(IsNotUppercase [MakeUppercase] [MakeLowercase])]), MoveLeft, Drop])", "cost_per_iteration": [[1, 1], [139, 0]], "number_of_iterations": 140}
{"file": "strings/1-19-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.014589000000000851, "program_length": 16, "number_of_explored_programs": 88, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 1, 2, 5, 9, 4, 3, 5, 11, 9, 5, 6, 6, 8, 2, 2, 5, 1, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 5, 12, 18, 25, 19, 8, 1], "program": "Program([LoopWhile(IsLowercase [If(IsNotLowercase [MoveRight] [MakeUppercase])]), LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(AtEnd [If(IsNumber [MoveLeft] [Drop])]), LoopWhile(IsSpace [If(NotAtEnd [Drop] [MakeUppercase])])])", "cost_per_iteration": [[0, 10], [3, 1], [88, 0]], "number_of_iterations": 89}
{"file": "strings/1-19-6.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.13452600000000103, "program_length": 22, "number_of_explored_programs": 81, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.007, "explored_per_size_tokens": [0, 2, 0, 3, 1, 3, 1, 2, 2, 1, 1, 1, 2, 0, 1, 4, 0, 3, 6, 4, 6, 7, 5, 6, 3, 4, 3, 2, 2, 3, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 3, 4, 6, 6, 1, 0, 1, 1, 1, 4, 3, 8, 8, 5, 7, 10, 6, 5, 2], "program": "Program([Drop, Drop, MakeLowercase, LoopWhile(IsUppercase [If(IsNumber [MakeUppercase] [MoveRight])]), LoopWhile(AtStart [MoveRight, Drop]), MoveLeft, MoveRight, Drop, Drop, Drop, Drop, MoveLeft, Drop, LoopWhile(IsNumber [If(IsNotUppercase [Drop] [MakeLowercase])])])", "cost_per_iteration": [[5, 7], [14, 6], [19, 5], [25, 4], [32, 2], [42, 1], [80, 0]], "number_of_iterations": 81}
{"file": "strings/1-19-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011554000000003839, "program_length": 11, "number_of_explored_programs": 59, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 1, 0, 2, 2, 1, 4, 4, 2, 3, 3, 1, 3, 3, 4, 3, 7, 1, 3, 2, 2, 3, 0, 0, 1, 1, 1], "explored_per_size_sequence": [0, 2, 5, 8, 12, 10, 11, 4, 7], "program": "Program([LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveRight])]), MakeLowercase, Drop])", "cost_per_iteration": [[0, 1], [58, 0]], "number_of_iterations": 59}
{"file": "strings/1-19-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010536000000001877, "program_length": 18, "number_of_explored_programs": 44, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.003, "explored_per_size_tokens": [0, 1, 2, 1, 2, 2, 8, 5, 2, 4, 1, 2, 3, 3, 0, 2, 2, 2, 2], "explored_per_size_sequence": [0, 2, 7, 14, 13, 2, 3, 3], "program": "Program([LoopWhile(IsLowercase [If(IsNotNumber [MakeUppercase] [MoveLeft])]), LoopWhile(IsNotSpace [MakeLowercase, Drop]), LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [MakeLowercase])]), MakeLowercase, MakeUppercase, LoopWhile(IsNumber [If(IsNotUppercase [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[1, 6], [9, 5], [11, 4], [22, 1], [43, 0]], "number_of_iterations": 44}
{"file": "strings/1-19-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00731299999999635, "program_length": 11, "number_of_explored_programs": 16, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 1, 1, 3, 0, 0, 2, 1, 0, 1, 1, 2, 1, 3], "explored_per_size_sequence": [0, 0, 3, 4, 4, 2, 0, 3], "program": "Program([MakeUppercase, LoopWhile(IsNumber [If(IsUppercase [MoveLeft] [Drop])]), MakeUppercase, LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [Drop])]), Drop])", "cost_per_iteration": [[1, 3], [15, 0]], "number_of_iterations": 16}
{"file": "strings/1-20-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.09426100000000304, "program_length": 23, "number_of_explored_programs": 718, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.02, "time_cost": 0.043, "explored_per_size_tokens": [0, 1, 1, 1, 0, 0, 2, 1, 2, 8, 5, 2, 10, 11, 15, 26, 28, 22, 34, 30, 45, 51, 43, 43, 58, 32, 39, 33, 30, 23, 30, 17, 15, 23, 12, 6, 11, 1, 0, 2, 1, 0, 3, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 2, 7, 5, 12, 14, 25, 19, 43, 84, 89, 123, 127, 83, 53, 28, 2, 0, 1], "program": "Program([MakeLowercase, MakeUppercase, LoopWhile(AtStart [If(IsSpace [MoveRight] [Drop])]), Drop, LoopWhile(IsLetter [MakeLowercase, Drop]), MakeLowercase, Drop, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), MoveLeft, LoopWhile(IsNotLetter [Drop, Drop]), MakeUppercase, MoveRight, MoveLeft])", "cost_per_iteration": [[5, 16], [9, 15], [21, 14], [25, 13], [46, 12], [82, 7], [83, 4], [88, 3], [162, 2], [236, 1], [728, 0]], "number_of_iterations": 729}
{"file": "strings/1-20-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.1394549999999981, "program_length": 23, "number_of_explored_programs": 132, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.004, "time_cost": 0.009, "explored_per_size_tokens": [0, 0, 0, 1, 2, 3, 0, 1, 2, 1, 1, 2, 1, 2, 1, 0, 3, 1, 1, 1, 3, 2, 4, 4, 2, 5, 7, 7, 4, 6, 6, 8, 7, 6, 8, 8, 6, 6, 2, 3, 2, 1, 0, 0, 2], "explored_per_size_sequence": [0, 0, 3, 1, 3, 4, 2, 1, 6, 2, 1, 2, 3, 4, 10, 16, 17, 14, 23, 12, 5, 3], "program": "Program([Drop, LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MoveRight])]), Drop, MakeUppercase, MoveLeft, MoveLeft, MoveLeft, Drop, MakeUppercase, LoopWhile(IsNotSpace [MakeUppercase, Drop]), Drop, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveLeft])]), Drop, MakeUppercase, MoveRight])", "cost_per_iteration": [[0, 16], [8, 15], [13, 9], [21, 8], [28, 6], [29, 2], [45, 1], [132, 0]], "number_of_iterations": 133}
{"file": "strings/1-20-4.pl", "test_cost": 8.777777777777779, "train_cost": 0, "execution_time": 0.03897299999999859, "program_length": 26, "number_of_explored_programs": 213, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.017, "explored_per_size_tokens": [0, 2, 0, 0, 1, 1, 3, 1, 4, 2, 3, 3, 0, 1, 0, 0, 4, 3, 2, 4, 5, 5, 7, 7, 6, 5, 8, 13, 15, 8, 9, 9, 5, 6, 7, 8, 5, 4, 4, 1, 5, 4, 0, 5, 7, 4, 3, 2, 3, 4, 2, 1, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 1, 6, 5, 10, 0, 10, 4, 2, 0, 3, 3, 14, 17, 18, 27, 17, 30, 17, 12, 10, 3, 1], "program": "Program([LoopWhile(IsNumber [If(NotAtStart [MakeUppercase] [Drop])]), LoopWhile(IsLowercase [If(IsNotLowercase [MakeUppercase] [Drop])]), MakeLowercase, Drop, Drop, LoopWhile(AtEnd [If(NotAtEnd [Drop] [MoveRight])]), MakeLowercase, Drop, Drop, MakeLowercase, Drop, Drop, Drop, LoopWhile(IsLowercase [If(AtEnd [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[5, 16], [15, 15], [24, 13], [41, 11], [42, 10], [43, 9], [49, 8], [54, 7], [96, 5], [131, 1], [214, 0]], "number_of_iterations": 215}
{"file": "strings/1-20-5.pl", "test_cost": 6.222222222222222, "train_cost": 0, "execution_time": 0.04934599999999989, "program_length": 28, "number_of_explored_programs": 281, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.021, "explored_per_size_tokens": [0, 2, 0, 1, 2, 2, 2, 0, 1, 1, 1, 1, 0, 3, 1, 3, 1, 2, 4, 0, 7, 7, 7, 4, 13, 10, 13, 18, 9, 15, 14, 14, 14, 11, 13, 3, 6, 8, 6, 7, 5, 4, 5, 6, 7, 1, 4, 4, 3, 4, 2, 1, 5, 2, 2], "explored_per_size_sequence": [0, 3, 2, 3, 2, 3, 3, 4, 0, 11, 10, 13, 30, 40, 27, 32, 15, 11, 10, 9, 1, 6, 9, 9, 11, 7, 4, 4, 2], "program": "Program([MakeLowercase, LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MakeLowercase])]), MoveRight, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveLeft])]), Drop, Drop, MoveLeft, LoopWhile(IsLetter [MakeUppercase, Drop]), LoopWhile(IsNumber [If(NotAtEnd [MoveLeft] [Drop])]), MoveRight, LoopWhile(IsLetter [If(IsLowercase [MakeUppercase] [MoveLeft])]), Drop, MoveRight, MoveRight])", "cost_per_iteration": [[4, 21], [5, 19], [16, 18], [19, 9], [24, 8], [26, 7], [31, 6], [32, 4], [36, 3], [44, 2], [107, 1], [283, 0]], "number_of_iterations": 284}
{"file": "strings/1-21-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.4742570000000015, "program_length": 6, "number_of_explored_programs": 5886, "search_depth": 3, "time_destroy": 0.022, "time_repair": 0.129, "time_cost": 0.218, "explored_per_size_tokens": [0, 5, 24, 77, 204, 379, 441, 454, 488, 554, 671, 554, 451, 397, 360, 281, 158, 103, 103, 67, 23, 31, 20, 3, 8, 4, 1, 3, 3, 3, 2, 1, 0, 2, 1, 3, 2, 2, 0, 1, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 84, 360, 648, 1057, 1344, 1107, 783, 427, 35, 9, 13, 5, 8, 4, 1, 1], "program": "Program([Drop, LoopWhile(IsLetter [Drop, Drop]), Drop, MakeUppercase])", "cost_per_iteration": [[5, 13], [12, 7], [63, 6], [69, 5], [99, 4], [449, 3], [6775, 1], [6818, 0]], "number_of_iterations": 6819}
{"file": "strings/1-21-3.pl", "test_cost": 5.555555555555555, "train_cost": 0, "execution_time": 0.062156000000001654, "program_length": 18, "number_of_explored_programs": 435, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.012, "time_cost": 0.028, "explored_per_size_tokens": [0, 0, 0, 0, 0, 2, 2, 1, 3, 3, 4, 2, 3, 15, 16, 12, 12, 21, 20, 27, 36, 28, 25, 24, 22, 34, 26, 16, 17, 19, 15, 9, 3, 5, 7, 2, 2, 1, 0, 1], "explored_per_size_sequence": [0, 0, 4, 5, 4, 11, 11, 27, 41, 59, 72, 69, 61, 41, 25, 4, 1], "program": "Program([MakeUppercase, LoopWhile(AtStart [If(IsLetter [Drop] [MoveRight])]), MakeUppercase, LoopWhile(AtStart [If(IsUppercase [Drop] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(AtStart [MakeUppercase] [Drop])]), Drop, MoveLeft, Drop])", "cost_per_iteration": [[1, 8], [6, 7], [32, 6], [50, 5], [51, 3], [53, 2], [58, 1], [435, 0]], "number_of_iterations": 436}
{"file": "strings/1-21-4.pl", "test_cost": 4.222222222222222, "train_cost": 0, "execution_time": 0.13116999999999734, "program_length": 39, "number_of_explored_programs": 106, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.008, "explored_per_size_tokens": [0, 2, 2, 0, 1, 2, 1, 3, 3, 4, 4, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 0, 5, 1, 3, 5, 1, 4, 1, 2, 0, 3, 3, 2, 3, 1, 2, 5, 1, 6, 3, 4, 3, 0, 4, 1, 4, 2, 0, 1], "explored_per_size_sequence": [0, 2, 3, 4, 8, 6, 2, 4, 2, 1, 1, 4, 3, 9, 4, 3, 6, 3, 1, 5, 7, 7, 9, 8, 3, 0, 1], "program": "Program([LoopWhile(IsLetter [If(IsNotLowercase [MoveRight] [Drop])]), MoveLeft, MakeUppercase, Drop, Drop, Drop, MakeLowercase, MoveRight, Drop, LoopWhile(IsSpace [If(IsLetter [Drop] [MakeLowercase])]), LoopWhile(IsNumber [If(IsNotSpace [MakeUppercase] [MoveRight])]), LoopWhile(IsLetter [If(AtStart [MakeLowercase] [Drop])]), Drop, MakeUppercase, MoveLeft, Drop, MakeLowercase, Drop, MakeLowercase, LoopWhile(IsNumber [If(IsNotNumber [Drop] [MakeUppercase])]), Drop, MakeLowercase, Drop, Drop])", "cost_per_iteration": [[6, 26], [10, 15], [11, 14], [22, 13], [30, 12], [36, 11], [42, 10], [58, 9], [60, 5], [67, 4], [72, 3], [76, 2], [88, 1], [106, 0]], "number_of_iterations": 107}
{"file": "strings/1-21-5.pl", "test_cost": 4.666666666666667, "train_cost": 0, "execution_time": 0.03955500000000001, "program_length": 39, "number_of_explored_programs": 200, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.016, "explored_per_size_tokens": [0, 0, 0, 1, 2, 0, 1, 2, 3, 3, 4, 5, 2, 2, 3, 2, 1, 1, 5, 0, 0, 2, 2, 3, 3, 4, 4, 7, 2, 4, 5, 6, 4, 2, 9, 4, 6, 12, 7, 9, 6, 11, 7, 7, 10, 3, 3, 3, 3, 1, 1, 6, 1, 2, 1, 2, 1], "explored_per_size_sequence": [0, 2, 2, 4, 7, 11, 8, 7, 5, 13, 10, 8, 9, 8, 2, 12, 10, 7, 15, 20, 21, 11, 7, 0, 1], "program": "Program([LoopWhile(IsSpace [MoveLeft, MakeUppercase]), LoopWhile(IsUppercase [Drop, MakeUppercase]), MoveRight, MoveLeft, MakeLowercase, MakeUppercase, MoveRight, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeUppercase])]), LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MakeUppercase])]), MoveLeft, LoopWhile(IsSpace [If(AtEnd [MakeUppercase] [Drop])]), LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [MoveLeft])]), Drop, Drop, LoopWhile(IsUppercase [If(IsSpace [MakeLowercase] [MakeUppercase])]), MoveRight, Drop, MoveLeft, Drop, MoveRight])", "cost_per_iteration": [[0, 26], [6, 25], [14, 24], [19, 12], [34, 11], [49, 6], [74, 5], [81, 3], [98, 2], [108, 1], [199, 0]], "number_of_iterations": 200}
{"file": "strings/1-22-2.pl", "test_cost": 2.5555555555555554, "train_cost": 2, "execution_time": 10.000027000000003, "program_length": 13, "number_of_explored_programs": 101559, "search_depth": 46, "time_destroy": 0.484, "time_repair": 2.782, "time_cost": 4.759, "explored_per_size_tokens": [0, 5, 25, 445, 3193, 7099, 8400, 9031, 10918, 13471, 11628, 8073, 7240, 7287, 5477, 3178, 2084, 2098, 1153, 250, 308, 187, 2, 3, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 1986, 10127, 19082, 27526, 21434, 14619, 6725, 38, 12, 6, 4], "program": "Program([MakeUppercase, LoopWhile(AtEnd [If(IsNotLetter [Drop] [MoveRight])]), MoveRight, LoopWhile(IsNumber [If(NotAtStart [MoveLeft] [MakeUppercase])]), LoopWhile(NotAtEnd [Drop, MakeUppercase])])", "cost_per_iteration": [[1, 25], [20, 24], [42, 23], [45, 3], [199, 2]], "number_of_iterations": 135885}
{"file": "strings/1-22-3.pl", "test_cost": 2.6666666666666665, "train_cost": 2, "execution_time": 10.000025, "program_length": 10, "number_of_explored_programs": 104693, "search_depth": 48, "time_destroy": 0.475, "time_repair": 2.72, "time_cost": 4.839, "explored_per_size_tokens": [0, 5, 25, 455, 3320, 7477, 8421, 8576, 11194, 14053, 12340, 8193, 7095, 7928, 5938, 2945, 2283, 2447, 1056, 272, 426, 220, 6, 10, 4, 3, 1], "explored_per_size_sequence": [0, 2024, 10047, 20068, 28769, 22080, 14964, 6582, 85, 31, 13, 6, 11, 9, 1, 3], "program": "Program([MoveRight, LoopWhile(NotAtStart [Drop, MakeLowercase]), LoopWhile(IsSpace [If(AtEnd [Drop] [MoveRight])]), MakeUppercase, MakeUppercase])", "cost_per_iteration": [[1, 27], [6, 21], [66, 20], [79, 11], [249, 9], [251, 8], [256, 7], [287, 3], [808, 2]], "number_of_iterations": 143074}
{"file": "strings/1-22-4.pl", "test_cost": 1.5555555555555556, "train_cost": 2, "execution_time": 10.000039999999998, "program_length": 12, "number_of_explored_programs": 87574, "search_depth": 36, "time_destroy": 0.389, "time_repair": 2.547, "time_cost": 4.803, "explored_per_size_tokens": [0, 5, 25, 180, 641, 892, 1027, 1430, 2857, 4650, 5857, 6048, 6598, 7172, 8204, 8712, 7302, 6149, 4988, 4225, 3694, 2561, 1229, 1462, 933, 201, 236, 162, 16, 14, 21, 20, 13, 12, 12, 6, 7, 2, 1, 3, 1, 2, 1, 0, 2, 1], "explored_per_size_sequence": [0, 477, 1127, 3530, 7775, 11615, 15900, 16866, 14062, 10218, 5549, 152, 42, 52, 44, 49, 46, 39, 15, 14, 2], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(NotAtStart [Drop] [MoveRight])]), MakeLowercase, Drop, MakeUppercase, MoveRight, LoopWhile(NotAtEnd [Drop, MakeLowercase])])", "cost_per_iteration": [[0, 20], [10, 19], [12, 18], [16, 17], [19, 15], [33, 12], [36, 11], [42, 9], [56, 8], [66, 7], [90, 4], [92, 3], [14510, 2]], "number_of_iterations": 108629}
{"file": "strings/1-22-5.pl", "test_cost": Infinity, "train_cost": 3, "execution_time": 10.000046000000012, "program_length": 52, "number_of_explored_programs": 109070, "search_depth": 48, "time_destroy": 0.48, "time_repair": 2.815, "time_cost": 4.572, "explored_per_size_tokens": [0, 5, 25, 457, 3229, 7564, 8697, 9587, 11304, 13556, 11729, 7819, 7210, 7476, 5371, 3128, 2279, 2150, 1153, 470, 568, 456, 332, 339, 346, 376, 367, 346, 296, 300, 255, 244, 208, 186, 154, 124, 124, 104, 106, 64, 75, 59, 56, 42, 32, 38, 37, 31, 38, 20, 21, 14, 13, 24, 16, 12, 10, 12, 6, 4, 2, 1, 0, 2, 0, 1], "explored_per_size_sequence": [0, 2004, 10627, 19961, 28649, 21646, 14366, 5632, 303, 85, 129, 261, 453, 637, 729, 732, 671, 545, 403, 351, 291, 196, 103, 51, 52, 53, 47, 46, 26, 14, 7], "program": "Program([LoopWhile(IsNotLetter [Drop, MoveRight]), MakeLowercase, MakeLowercase, MakeUppercase, MakeUppercase, LoopWhile(IsSpace [If(IsUppercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(IsNotLetter [MakeUppercase] [MoveRight])]), Drop, MoveLeft, LoopWhile(IsSpace [If(IsNotSpace [MakeLowercase] [MoveLeft])]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsNotNumber [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MoveLeft])]), MoveLeft, Drop, LoopWhile(IsNumber [If(IsNotNumber [MakeLowercase] [MakeUppercase])]), Drop, MakeLowercase, Drop, MakeLowercase, Drop, LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MoveRight])]), Drop, MakeLowercase, Drop])", "cost_per_iteration": [[13, 20], [26, 17], [38, 16], [42, 15], [51, 14], [57, 12], [60, 9], [64, 8], [79, 7], [87, 6], [99, 5], [108, 4], [111, 3]], "number_of_iterations": 143844}
{"file": "strings/1-23-2.pl", "test_cost": 1.1111111111111112, "train_cost": 0, "execution_time": 0.1415980000000019, "program_length": 16, "number_of_explored_programs": 117, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 1, 1, 1, 2, 2, 2, 6, 3, 5, 6, 7, 4, 7, 9, 6, 8, 6, 4, 8, 2, 3, 5, 2, 1, 4, 4, 2, 1, 2, 1, 1, 0, 1], "explored_per_size_sequence": [0, 1, 3, 5, 13, 10, 9, 13, 4, 8, 7, 7, 7, 8, 5, 3, 7, 5, 2], "program": "Program([Drop, MoveRight, Drop, LoopWhile(AtEnd [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(IsNumber [If(IsNotLowercase [Drop] [MakeUppercase])]), Drop, Drop, MakeLowercase, Drop, Drop])", "cost_per_iteration": [[0, 7], [7, 6], [29, 5], [31, 4], [53, 3], [62, 2], [63, 1], [116, 0]], "number_of_iterations": 117}
{"file": "strings/1-23-3.pl", "test_cost": 0.8888888888888888, "train_cost": 1, "execution_time": 10.000077000000005, "program_length": 14, "number_of_explored_programs": 118054, "search_depth": 57, "time_destroy": 0.547, "time_repair": 3.124, "time_cost": 4.108, "explored_per_size_tokens": [0, 5, 25, 471, 3692, 8558, 9543, 14726, 15693, 15388, 11975, 7294, 10796, 9064, 1538, 3865, 3923, 222, 527, 682, 24, 20, 11, 4, 4, 3, 1], "explored_per_size_sequence": [0, 2159, 20436, 33755, 39747, 21218, 436, 213, 45, 34, 11], "program": "Program([LoopWhile(IsUppercase [Drop, MoveRight]), MoveRight, LoopWhile(NotAtEnd [MakeLowercase, Drop]), LoopWhile(AtStart [If(IsLowercase [Drop] [MoveRight])]), LoopWhile(NotAtEnd [MoveRight, Drop])])", "cost_per_iteration": [[3, 6], [6, 5], [20, 2], [239, 1]], "number_of_iterations": 169703}
{"file": "strings/1-23-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.021988000000007446, "program_length": 25, "number_of_explored_programs": 92, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 0, 1, 0, 2, 1, 1, 1, 2, 2, 0, 2, 0, 3, 0, 2, 2, 4, 1, 3, 5, 3, 7, 6, 3, 8, 4, 5, 5, 3, 1, 3, 5, 0, 1, 4, 1, 1], "explored_per_size_sequence": [0, 1, 3, 3, 4, 0, 3, 6, 7, 5, 7, 16, 12, 10, 8, 5, 2], "program": "Program([LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsSpace [MoveRight] [Drop])]), LoopWhile(IsNumber [If(AtEnd [MakeLowercase] [Drop])]), Drop, Drop, Drop, Drop, MoveRight, Drop, MoveLeft, MoveLeft, Drop, MakeUppercase, LoopWhile(IsLetter [MakeUppercase, MakeLowercase])])", "cost_per_iteration": [[1, 5], [3, 4], [16, 3], [22, 2], [47, 1], [91, 0]], "number_of_iterations": 92}
{"file": "strings/1-23-5.pl", "test_cost": 1.7777777777777777, "train_cost": 0, "execution_time": 0.0196679999999958, "program_length": 21, "number_of_explored_programs": 127, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 0, 0, 1, 2, 4, 3, 5, 4, 5, 4, 4, 1, 1, 6, 3, 4, 4, 6, 3, 4, 9, 10, 8, 7, 5, 5, 6, 6, 2, 0, 1, 0, 2, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 7, 9, 7, 7, 3, 15, 13, 21, 17, 15, 8, 3], "program": "Program([LoopWhile(IsNumber [If(IsNotLowercase [Drop] [MoveRight])]), LoopWhile(IsLowercase [If(IsNumber [MoveRight] [MakeLowercase])]), Drop, MoveRight, LoopWhile(NotAtEnd [MoveRight, Drop]), LoopWhile(IsLetter [If(IsSpace [MakeUppercase] [MoveRight])]), Drop, MakeUppercase, MoveLeft, Drop])", "cost_per_iteration": [[0, 7], [9, 6], [18, 5], [20, 4], [32, 3], [35, 1], [127, 0]], "number_of_iterations": 128}
{"file": "strings/1-23-6.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.019491000000002145, "program_length": 14, "number_of_explored_programs": 168, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.005, "explored_per_size_tokens": [0, 4, 3, 5, 9, 6, 12, 8, 11, 15, 12, 10, 7, 9, 6, 9, 10, 8, 3, 5, 3, 8, 2, 2, 1], "explored_per_size_sequence": [0, 7, 10, 19, 27, 23, 26, 22, 16, 13, 5], "program": "Program([Drop, Drop, Drop, LoopWhile(IsUppercase [If(AtEnd [MoveRight] [MakeLowercase])]), LoopWhile(IsNumber [If(NotAtEnd [Drop] [MoveRight])]), Drop, Drop, Drop])", "cost_per_iteration": [[12, 7], [15, 6], [24, 5], [71, 4], [79, 2], [168, 0]], "number_of_iterations": 169}
{"file": "strings/1-23-7.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.13669000000000153, "program_length": 19, "number_of_explored_programs": 162, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 2, 0, 1, 1, 7, 2, 5, 1, 5, 11, 10, 10, 10, 6, 5, 12, 12, 5, 10, 12, 6, 5, 5, 3, 6, 3, 2, 1, 1, 1, 1, 0, 1], "explored_per_size_sequence": [0, 3, 5, 7, 22, 21, 23, 19, 21, 13, 11, 9, 3, 3, 0, 2], "program": "Program([LoopWhile(IsNumber [If(NotAtStart [MoveLeft] [Drop])]), Drop, LoopWhile(IsNumber [If(IsNotLowercase [Drop] [MoveRight])]), Drop, Drop, MoveRight, MakeUppercase, Drop, LoopWhile(AtStart [If(NotAtEnd [MakeUppercase] [Drop])]), MoveLeft])", "cost_per_iteration": [[4, 6], [5, 5], [25, 3], [31, 2], [35, 1], [166, 0]], "number_of_iterations": 167}
{"file": "strings/1-23-8.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.010686999999990121, "program_length": 24, "number_of_explored_programs": 73, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.002, "explored_per_size_tokens": [0, 3, 2, 4, 1, 10, 1, 3, 7, 5, 3, 7, 5, 4, 2, 6, 1, 1, 2, 1, 2, 1, 0, 1, 1], "explored_per_size_sequence": [0, 4, 11, 10, 6, 10, 8, 3, 3, 7, 4, 3, 1, 2, 0, 0, 1], "program": "Program([Drop, Drop, MoveRight, MakeUppercase, LoopWhile(AtStart [If(IsNumber [MoveRight] [MoveLeft])]), Drop, MakeUppercase, MakeLowercase, MoveLeft, MakeLowercase, LoopWhile(IsNumber [If(IsLetter [MoveLeft] [Drop])]), LoopWhile(IsLetter [MakeLowercase, MoveLeft]), Drop, Drop, Drop, Drop])", "cost_per_iteration": [[5, 7], [23, 6], [31, 5], [54, 4], [60, 3], [62, 2], [71, 1], [73, 0]], "number_of_iterations": 74}
{"file": "strings/1-23-9.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.014578999999997677, "program_length": 14, "number_of_explored_programs": 134, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 3, 4, 4, 4, 16, 10, 11, 12, 11, 11, 13, 9, 4, 8, 3, 4, 3, 1, 3], "explored_per_size_sequence": [0, 4, 14, 22, 23, 28, 21, 12, 5, 5], "program": "Program([Drop, LoopWhile(IsNumber [MakeUppercase, MakeUppercase]), Drop, Drop, Drop, Drop, Drop, MakeLowercase, LoopWhile(IsUppercase [If(NotAtEnd [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[9, 5], [24, 4], [46, 3], [101, 2], [140, 0]], "number_of_iterations": 141}
{"file": "strings/1-24-2.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.009507000000013477, "program_length": 9, "number_of_explored_programs": 51, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 3, 1, 0, 1, 3, 0, 3, 4, 5, 3, 4, 2, 6, 9, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 5, 1, 8, 7, 2, 4, 10, 3, 3, 5], "program": "Program([MakeLowercase, Drop, Drop, Drop, Drop, MakeLowercase, MakeLowercase, MoveRight, MakeUppercase])", "cost_per_iteration": [[3, 3], [18, 2], [26, 1], [51, 0]], "number_of_iterations": 52}
{"file": "strings/1-24-3.pl", "test_cost": 0.7777777777777778, "train_cost": 0, "execution_time": 0.006995000000003415, "program_length": 8, "number_of_explored_programs": 23, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 0, 2, 1, 2, 1, 3, 0, 1, 3, 2, 3, 0, 0, 0, 1, 2], "explored_per_size_sequence": [0, 1, 2, 3, 5, 6, 2, 3, 0, 1], "program": "Program([Drop, MakeUppercase, Drop, Drop, LoopWhile(IsSpace [If(IsUppercase [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[0, 2], [10, 1], [22, 0]], "number_of_iterations": 23}
{"file": "strings/1-24-4.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.013909999999995648, "program_length": 10, "number_of_explored_programs": 127, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 0, 3, 3, 2, 12, 7, 8, 7, 9, 7, 15, 13, 5, 9, 5, 4, 4, 5, 2, 1, 4, 0, 2], "explored_per_size_sequence": [0, 2, 6, 9, 12, 25, 27, 17, 13, 12, 3, 1], "program": "Program([Drop, Drop, MakeLowercase, Drop, LoopWhile(IsUppercase [If(NotAtEnd [Drop] [MakeLowercase])]), Drop, MakeLowercase])", "cost_per_iteration": [[4, 2], [17, 1], [127, 0]], "number_of_iterations": 128}
{"file": "strings/1-24-5.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.1262219999999985, "program_length": 13, "number_of_explored_programs": 57, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 1, 1, 8, 5, 8, 3, 6, 2, 6, 5, 4, 2, 2, 2, 0, 1], "explored_per_size_sequence": [0, 6, 6, 14, 12, 3, 7, 7, 2], "program": "Program([MakeLowercase, Drop, LoopWhile(IsNotNumber [Drop, MoveRight]), Drop, LoopWhile(IsLowercase [If(IsNotLetter [Drop] [MoveLeft])]), MakeUppercase, Drop, Drop])", "cost_per_iteration": [[18, 3], [42, 2], [53, 1], [56, 0]], "number_of_iterations": 57}
{"file": "strings/1-24-6.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.012541999999996278, "program_length": 18, "number_of_explored_programs": 101, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 3, 4, 8, 6, 4, 7, 6, 7, 6, 5, 8, 6, 12, 6, 3, 1, 4, 3, 2], "explored_per_size_sequence": [0, 5, 10, 17, 15, 19, 9, 13, 9, 4], "program": "Program([Drop, MakeLowercase, Drop, LoopWhile(IsSpace [If(IsNotUppercase [MakeLowercase] [Drop])]), LoopWhile(IsUppercase [If(IsNotLowercase [MakeUppercase] [Drop])]), MakeLowercase, Drop, LoopWhile(IsUppercase [If(IsNotLetter [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[3, 3], [7, 2], [45, 1], [103, 0]], "number_of_iterations": 104}
{"file": "strings/1-24-7.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.018698999999998023, "program_length": 6, "number_of_explored_programs": 167, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 0, 0, 2, 4, 2, 7, 5, 5, 11, 8, 10, 7, 17, 11, 9, 12, 9, 16, 5, 8, 3, 5, 3, 3, 2, 1, 1, 1], "explored_per_size_sequence": [0, 2, 1, 7, 6, 7, 16, 20, 23, 28, 25, 17, 12, 3], "program": "Program([Drop, MakeUppercase, MoveRight, Drop, MakeLowercase, Drop])", "cost_per_iteration": [[6, 2], [25, 1], [166, 0]], "number_of_iterations": 167}
{"file": "strings/1-24-8.pl", "test_cost": 1.2222222222222223, "train_cost": 0, "execution_time": 0.0098210000000023, "program_length": 18, "number_of_explored_programs": 49, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 0, 0, 1, 1, 1, 2, 3, 3, 1, 1, 4, 8, 2, 5, 3, 5, 2, 2, 3, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 7, 9, 13, 8, 6, 5, 1], "program": "Program([MoveRight, Drop, Drop, LoopWhile(IsSpace [If(NotAtStart [Drop] [MakeLowercase])]), Drop, MakeLowercase, LoopWhile(IsUppercase [If(IsSpace [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[0, 3], [27, 2], [43, 1], [48, 0]], "number_of_iterations": 49}
{"file": "strings/1-24-9.pl", "test_cost": 0.3333333333333333, "train_cost": 0, "execution_time": 0.008664000000010219, "program_length": 21, "number_of_explored_programs": 38, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 2, 0, 0, 2, 2, 2, 3, 3, 2, 2, 1, 3, 1, 2, 3, 1, 0, 3, 3, 1, 0, 0, 1], "explored_per_size_sequence": [0, 1, 0, 6, 5, 8, 6, 5, 4, 2, 1], "program": "Program([Drop, LoopWhile(AtEnd [If(IsNotLowercase [Drop] [MoveLeft])]), MakeLowercase, LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [Drop])]), Drop, Drop, Drop, LoopWhile(AtStart [If(AtEnd [MoveLeft] [MoveRight])]), LoopWhile(AtEnd [If(AtStart [MakeLowercase] [MoveRight])])])", "cost_per_iteration": [[1, 3], [16, 2], [28, 1], [38, 0]], "number_of_iterations": 39}
{"file": "strings/1-25-2.pl", "test_cost": 0.2222222222222222, "train_cost": 0, "execution_time": 0.1382380000000012, "program_length": 14, "number_of_explored_programs": 100, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 3, 1, 3, 4, 7, 7, 14, 6, 8, 10, 11, 7, 8, 4, 2, 3, 1, 0, 1], "explored_per_size_sequence": [0, 6, 14, 19, 25, 14, 12, 5, 3, 2], "program": "Program([LoopWhile(IsNotNumber [MakeLowercase, Drop]), MoveRight, Drop, LoopWhile(IsLowercase [If(IsNotLowercase [MoveLeft] [Drop])]), LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [MakeLowercase])]), Drop])", "cost_per_iteration": [[17, 9], [22, 6], [74, 4], [81, 3], [100, 1], [101, 0]], "number_of_iterations": 102}
{"file": "strings/1-25-3.pl", "test_cost": Infinity, "train_cost": 1, "execution_time": 10.000070000000008, "program_length": 25, "number_of_explored_programs": 112477, "search_depth": 53, "time_destroy": 0.525, "time_repair": 3.006, "time_cost": 4.35, "explored_per_size_tokens": [0, 5, 25, 470, 3676, 8128, 9308, 14186, 14901, 14458, 11290, 7024, 10272, 8500, 1499, 3617, 3592, 261, 518, 613, 40, 24, 17, 7, 13, 11, 8, 4, 1, 2, 3, 0, 1, 1, 2], "explored_per_size_sequence": [0, 2155, 20037, 31965, 37400, 19868, 648, 184, 79, 53, 43, 21, 15, 6, 3], "program": "Program([MakeUppercase, LoopWhile(IsLetter [If(AtEnd [MakeLowercase] [Drop])]), Drop, MakeUppercase, MoveRight, LoopWhile(IsLowercase [If(AtStart [MoveRight] [Drop])]), MoveLeft, Drop, LoopWhile(IsUppercase [If(IsLetter [MoveLeft] [MakeUppercase])]), LoopWhile(NotAtStart [MakeUppercase, MoveLeft]), LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [MoveRight])])])", "cost_per_iteration": [[3, 12], [20, 11], [28, 10], [43, 9], [56, 3], [58, 2], [82, 1]], "number_of_iterations": 159036}
{"file": "strings/1-25-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.027562000000003195, "program_length": 21, "number_of_explored_programs": 126, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.007, "explored_per_size_tokens": [0, 2, 0, 0, 2, 1, 2, 2, 1, 3, 0, 4, 3, 2, 6, 4, 8, 5, 12, 8, 6, 9, 6, 4, 5, 8, 9, 5, 2, 2, 1, 0, 1, 2, 0, 1], "explored_per_size_sequence": [0, 4, 2, 2, 6, 7, 11, 18, 21, 24, 16, 12, 3], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveRight])]), MoveRight, MoveLeft, MoveRight, LoopWhile(IsLetter [If(AtStart [MoveRight] [Drop])]), LoopWhile(IsUppercase [MoveLeft, MoveLeft]), Drop, MoveLeft, LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveLeft])])])", "cost_per_iteration": [[9, 9], [17, 8], [34, 1], [126, 0]], "number_of_iterations": 127}
{"file": "strings/1-25-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.016469000000000733, "program_length": 23, "number_of_explored_programs": 137, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 4, 3, 4, 17, 12, 11, 17, 18, 11, 13, 2, 4, 3, 3, 6, 3, 1, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 13, 35, 30, 39, 14, 0, 1, 1, 1, 2, 1], "program": "Program([LoopWhile(IsLowercase [Drop, Drop]), MoveRight, Drop, MakeUppercase, LoopWhile(AtStart [If(IsLetter [MakeUppercase] [Drop])]), LoopWhile(IsNotNumber [MakeLowercase, Drop]), LoopWhile(IsSpace [If(IsNotLetter [MakeUppercase] [MoveLeft])]), Drop, MakeUppercase, LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [MakeLowercase])])])", "cost_per_iteration": [[5, 4], [135, 3], [139, 1], [147, 0]], "number_of_iterations": 148}
{"file": "strings/1-25-6.pl", "test_cost": 1.2222222222222223, "train_cost": 0, "execution_time": 0.020009999999999195, "program_length": 15, "number_of_explored_programs": 143, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 1, 2, 1, 8, 10, 7, 7, 7, 10, 8, 6, 10, 8, 13, 5, 4, 5, 6, 6, 3, 4, 2, 3, 0, 4, 0, 1, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 6, 14, 21, 31, 26, 17, 7, 11, 6, 2, 1, 1], "program": "Program([MakeLowercase, LoopWhile(IsNotNumber [MakeUppercase, Drop]), LoopWhile(AtStart [If(AtEnd [Drop] [MoveRight])]), MakeUppercase, Drop, MakeLowercase, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 7], [19, 6], [27, 5], [130, 4], [136, 2], [145, 1], [146, 0]], "number_of_iterations": 147}
{"file": "strings/1-25-7.pl", "test_cost": 0.2222222222222222, "train_cost": 0, "execution_time": 0.0123569999999944, "program_length": 16, "number_of_explored_programs": 60, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 0, 1, 0, 0, 0, 3, 0, 1, 2, 5, 3, 4, 6, 3, 5, 6, 0, 6, 2, 7, 0, 1, 1, 1, 1, 1, 1], "explored_per_size_sequence": [0, 0, 1, 3, 5, 5, 18, 16, 8, 3, 1], "program": "Program([MakeUppercase, Drop, LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveLeft])]), LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MoveRight])]), MoveRight, LoopWhile(IsLowercase [If(IsSpace [MoveLeft] [Drop])]), Drop])", "cost_per_iteration": [[0, 10], [1, 7], [9, 1], [60, 0]], "number_of_iterations": 61}
{"file": "strings/1-25-8.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.13371499999999514, "program_length": 24, "number_of_explored_programs": 57, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 1, 0, 2, 1, 3, 2, 1, 2, 2, 3, 2, 2, 4, 2, 1, 2, 1, 1, 1, 0, 5, 2, 2, 3, 3, 3, 2, 3, 0, 1], "explored_per_size_sequence": [0, 4, 3, 6, 8, 9, 4, 10, 8, 3, 2], "program": "Program([LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsUppercase [If(AtEnd [MoveLeft] [MakeUppercase])]), Drop, LoopWhile(IsNumber [If(IsNotSpace [MakeLowercase] [Drop])]), LoopWhile(IsNumber [MoveRight, Drop]), LoopWhile(IsUppercase [If(IsNotUppercase [MoveRight] [MakeLowercase])]), LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MakeLowercase])])])", "cost_per_iteration": [[6, 10], [16, 6], [20, 5], [28, 1], [56, 0]], "number_of_iterations": 57}
{"file": "strings/1-25-9.pl", "test_cost": 0.1111111111111111, "train_cost": 0, "execution_time": 0.14929600000000676, "program_length": 10, "number_of_explored_programs": 1764, "search_depth": 1, "time_destroy": 0.007, "time_repair": 0.04, "time_cost": 0.065, "explored_per_size_tokens": [0, 5, 17, 28, 88, 129, 150, 124, 142, 203, 199, 125, 101, 100, 106, 72, 46, 41, 28, 21, 6, 12, 5, 3, 4, 2, 2, 0, 1, 3, 1], "explored_per_size_sequence": [0, 58, 135, 294, 399, 350, 255, 181, 55, 16, 13, 7, 1], "program": "Program([LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveLeft])]), MoveRight, MoveRight, LoopWhile(NotAtStart [Drop, MakeUppercase]), MakeLowercase])", "cost_per_iteration": [[2, 10], [21, 1], [1942, 0]], "number_of_iterations": 1943}
{"file": "strings/1-26-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.04901199999999051, "program_length": 16, "number_of_explored_programs": 505, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.012, "time_cost": 0.018, "explored_per_size_tokens": [0, 4, 4, 6, 11, 28, 9, 24, 29, 23, 38, 39, 43, 52, 41, 34, 35, 23, 17, 14, 12, 7, 7, 1, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 8, 32, 28, 66, 78, 65, 73, 58, 47, 38, 12], "program": "Program([LoopWhile(AtStart [If(IsNotLowercase [MoveRight] [Drop])]), MakeLowercase, MoveRight, MakeLowercase, LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), LoopWhile(IsNumber [If(NotAtStart [MakeUppercase] [Drop])]), MakeLowercase, MakeLowercase])", "cost_per_iteration": [[2, 4], [184, 3], [261, 2], [522, 0]], "number_of_iterations": 523}
{"file": "strings/1-26-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10174299999999903, "program_length": 9, "number_of_explored_programs": 1296, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.029, "time_cost": 0.041, "explored_per_size_tokens": [0, 4, 11, 19, 45, 76, 107, 141, 123, 109, 122, 119, 105, 100, 58, 54, 37, 25, 16, 7, 10, 3, 5], "explored_per_size_sequence": [0, 17, 50, 101, 195, 232, 253, 208, 144, 71, 25], "program": "Program([MakeUppercase, MoveRight, LoopWhile(AtEnd [MakeLowercase, MakeUppercase]), LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), MakeLowercase])", "cost_per_iteration": [[1, 3], [6, 2], [228, 1], [1434, 0]], "number_of_iterations": 1435}
{"file": "strings/1-26-4.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.05720800000000281, "program_length": 15, "number_of_explored_programs": 634, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.015, "time_cost": 0.022, "explored_per_size_tokens": [0, 3, 7, 10, 24, 25, 27, 42, 45, 48, 38, 43, 36, 41, 48, 40, 28, 27, 17, 17, 16, 19, 14, 9, 4, 2, 2, 1, 1], "explored_per_size_sequence": [0, 9, 22, 45, 71, 76, 85, 59, 62, 44, 64, 42, 27, 20, 8], "program": "Program([MoveRight, MakeLowercase, MoveRight, MakeLowercase, MakeLowercase, MoveRight, LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MoveLeft])]), MoveRight, MakeLowercase, MoveRight, MakeLowercase, MakeLowercase])", "cost_per_iteration": [[12, 4], [41, 3], [377, 2], [509, 1], [655, 0]], "number_of_iterations": 656}
{"file": "strings/1-26-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.2720250000000135, "program_length": 14, "number_of_explored_programs": 1955, "search_depth": 1, "time_destroy": 0.008, "time_repair": 0.044, "time_cost": 0.063, "explored_per_size_tokens": [0, 4, 11, 18, 43, 109, 161, 196, 183, 220, 182, 159, 172, 141, 115, 87, 48, 46, 37, 13, 6, 4], "explored_per_size_sequence": [0, 6, 49, 144, 231, 333, 427, 392, 232, 122, 19], "program": "Program([MakeUppercase, MoveRight, MakeLowercase, MoveRight, MakeLowercase, LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MakeLowercase])]), MakeLowercase, LoopWhile(IsUppercase [If(IsNotNumber [MakeLowercase] [MoveRight])])])", "cost_per_iteration": [[0, 3], [80, 2], [142, 1], [2149, 0]], "number_of_iterations": 2150}
