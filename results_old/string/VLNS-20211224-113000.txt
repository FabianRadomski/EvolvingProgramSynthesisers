{"file": "strings/1-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007105000000000139, "program_length": 1, "number_of_explored_programs": 16, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 3, 0, 2, 3, 2, 0, 2, 0, 2, 0, 1, 0, 1], "explored_per_size_sequence": [0, 7, 2, 3, 4], "program": "Program([Drop])", "cost_per_iteration": [[18, 0]], "number_of_iterations": 19}
{"file": "strings/1-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0066749999999999865, "program_length": 10, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], "explored_per_size_sequence": [0, 0, 1, 1, 1], "program": "Program([LoopWhile(IsLowercase [If(NotAtEnd [MoveLeft] [MakeLowercase])]), Drop, LoopWhile(IsNumber [If(NotAtEnd [MakeLowercase] [MoveRight])]), MoveRight])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/1-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006719999999999615, "program_length": 9, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 3, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 0, 1], "program": "Program([LoopWhile(AtEnd [If(IsNumber [MoveRight] [MoveLeft])]), LoopWhile(AtEnd [If(NotAtStart [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/1-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007434000000000385, "program_length": 7, "number_of_explored_programs": 10, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 1, 2], "explored_per_size_sequence": [0, 2, 1, 1, 6], "program": "Program([MakeLowercase, LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [MoveLeft])]), MakeUppercase, Drop])", "cost_per_iteration": [[9, 0]], "number_of_iterations": 10}
{"file": "strings/1-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0068990000000002105, "program_length": 2, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 0, 0, 1, 0, 0, 0, 2], "explored_per_size_sequence": [0, 0, 2, 1, 1], "program": "Program([MakeLowercase, Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/1-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007176999999999989, "program_length": 3, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 1, 3, 2, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 4, 1, 1], "program": "Program([MakeUppercase, MakeUppercase, Drop])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006756000000000206, "program_length": 5, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1, 1], "program": "Program([LoopWhile(NotAtStart [MoveLeft, MakeLowercase]), MakeUppercase, Drop])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/1-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007117999999999736, "program_length": 7, "number_of_explored_programs": 14, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 5, 1, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 3, 4, 0, 7], "program": "Program([Drop, MoveRight, MakeLowercase, LoopWhile(IsSpace [If(IsNotLetter [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[13, 0]], "number_of_iterations": 14}
{"file": "strings/1-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006855999999999973, "program_length": 1, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 1, 1, 0, 0, 0, 0, 2], "explored_per_size_sequence": [0, 3, 0, 2, 1], "program": "Program([Drop])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/1-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01847999999999983, "program_length": 29, "number_of_explored_programs": 105, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 1, 2, 2, 5, 7, 9, 6, 1, 4, 6, 6, 1, 0, 4, 1, 2, 2, 2, 2, 6, 1, 3, 6, 4, 1, 4, 4, 0, 5, 2, 2, 1, 0, 2, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 7, 6, 9, 12, 12, 4, 2, 2, 1, 0, 2, 0, 3, 5, 8, 8, 13, 5, 3, 1, 2], "program": "Program([Drop, Drop, LoopWhile(IsNumber [If(IsNotUppercase [Drop] [MakeLowercase])]), LoopWhile(IsLetter [If(AtStart [MoveRight] [MakeLowercase])]), Drop, MoveRight, LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MakeLowercase])]), LoopWhile(IsUppercase [If(IsNotLetter [MakeUppercase] [MakeLowercase])]), MakeUppercase, Drop, MoveRight, Drop, Drop, MoveLeft, Drop, MoveLeft, Drop])", "cost_per_iteration": [[2, 10], [6, 9], [41, 8], [56, 7], [57, 6], [59, 4], [60, 3], [73, 2], [106, 0]], "number_of_iterations": 107}
{"file": "strings/1-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.024808000000000163, "program_length": 11, "number_of_explored_programs": 176, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.009, "explored_per_size_tokens": [0, 2, 1, 2, 4, 9, 3, 2, 14, 12, 11, 12, 12, 10, 16, 8, 12, 8, 6, 8, 7, 5, 5, 2, 2, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 4, 7, 14, 13, 10, 16, 13, 19, 13, 18, 17, 15, 7, 8, 2], "program": "Program([MoveRight, LoopWhile(IsLowercase [Drop, Drop]), Drop, Drop, Drop, MakeUppercase, Drop, MoveLeft, Drop])", "cost_per_iteration": [[18, 5], [36, 4], [44, 3], [73, 2], [101, 1], [177, 0]], "number_of_iterations": 178}
{"file": "strings/1-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.021472999999999853, "program_length": 21, "number_of_explored_programs": 93, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.006, "explored_per_size_tokens": [0, 2, 1, 1, 2, 3, 2, 1, 0, 4, 0, 2, 1, 1, 4, 3, 4, 7, 7, 6, 4, 10, 6, 7, 0, 3, 1, 4, 2, 2, 1, 0, 2], "explored_per_size_sequence": [0, 4, 3, 6, 2, 0, 3, 3, 6, 7, 9, 8, 6, 11, 6, 7, 8, 4], "program": "Program([Drop, Drop, MoveRight, LoopWhile(IsLetter [If(IsNotLetter [MoveRight] [Drop])]), MakeLowercase, Drop, Drop, Drop, MakeUppercase, Drop, MoveLeft, MakeLowercase, MakeUppercase, LoopWhile(AtEnd [If(AtStart [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[11, 9], [16, 5], [17, 4], [48, 3], [66, 2], [77, 1], [94, 0]], "number_of_iterations": 95}
{"file": "strings/1-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04388600000000009, "program_length": 27, "number_of_explored_programs": 300, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.017, "explored_per_size_tokens": [0, 0, 1, 1, 1, 2, 2, 4, 3, 8, 5, 4, 8, 10, 6, 3, 9, 6, 12, 8, 12, 9, 18, 21, 27, 20, 22, 15, 12, 16, 8, 4, 12, 6, 3, 0, 2], "explored_per_size_sequence": [0, 0, 2, 7, 8, 14, 8, 14, 6, 6, 4, 3, 6, 9, 6, 15, 23, 26, 37, 39, 29, 16, 17, 5], "program": "Program([Drop, MoveRight, Drop, Drop, Drop, MoveRight, MoveRight, Drop, MoveLeft, LoopWhile(IsNumber [If(IsLetter [MoveRight] [Drop])]), Drop, MakeLowercase, LoopWhile(IsUppercase [MakeUppercase, MakeLowercase]), Drop, Drop, MoveLeft, Drop, LoopWhile(IsSpace [MakeLowercase, Drop]), MoveLeft, Drop])", "cost_per_iteration": [[0, 9], [21, 8], [47, 7], [61, 6], [69, 5], [78, 4], [85, 3], [121, 2], [127, 1], [300, 0]], "number_of_iterations": 301}
{"file": "strings/1-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.052823000000000064, "program_length": 14, "number_of_explored_programs": 318, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.011, "time_cost": 0.021, "explored_per_size_tokens": [0, 0, 0, 1, 0, 2, 3, 4, 2, 4, 10, 7, 6, 11, 12, 10, 11, 12, 15, 22, 21, 16, 17, 20, 12, 6, 10, 14, 8, 9, 12, 5, 5, 10, 4, 6, 2, 3, 2, 1, 1, 1, 1], "explored_per_size_sequence": [0, 0, 2, 5, 4, 5, 3, 7, 13, 12, 25, 35, 36, 39, 41, 29, 23, 20, 12, 7], "program": "Program([Drop, Drop, MoveRight, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveLeft])]), Drop, MakeLowercase, MoveLeft, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[1, 10], [11, 9], [20, 8], [21, 7], [37, 6], [45, 4], [50, 3], [63, 2], [75, 1], [319, 0]], "number_of_iterations": 320}
{"file": "strings/1-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.044932000000000194, "program_length": 28, "number_of_explored_programs": 263, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.017, "explored_per_size_tokens": [0, 1, 1, 5, 7, 8, 8, 11, 18, 11, 13, 17, 17, 15, 9, 7, 13, 13, 17, 9, 14, 17, 5, 10, 5, 4, 0, 1, 3, 2, 1, 0, 1], "explored_per_size_sequence": [0, 10, 5, 22, 33, 34, 44, 35, 31, 19, 12, 7, 11], "program": "Program([Drop, MakeUppercase, LoopWhile(IsLetter [If(IsNotLowercase [Drop] [MakeLowercase])]), Drop, LoopWhile(IsNotSpace [MakeLowercase, Drop]), Drop, LoopWhile(NotAtStart [Drop, MakeLowercase]), LoopWhile(IsLowercase [If(IsNotLetter [MoveRight] [Drop])]), MakeLowercase, Drop, LoopWhile(AtStart [If(IsNotUppercase [MakeLowercase] [MoveRight])]), LoopWhile(IsSpace [If(IsNotSpace [MoveRight] [MakeLowercase])])])", "cost_per_iteration": [[1, 10], [34, 9], [43, 5], [46, 4], [47, 3], [197, 2], [247, 1], [263, 0]], "number_of_iterations": 264}
{"file": "strings/1-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04469800000000035, "program_length": 25, "number_of_explored_programs": 296, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.018, "explored_per_size_tokens": [0, 3, 0, 2, 1, 4, 4, 4, 10, 11, 12, 10, 13, 22, 18, 21, 27, 24, 19, 19, 14, 15, 14, 7, 8, 7, 1, 3, 1, 1, 0, 1], "explored_per_size_sequence": [0, 4, 3, 11, 8, 13, 26, 38, 46, 41, 50, 30, 17, 9], "program": "Program([Drop, MakeLowercase, MoveRight, Drop, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MoveRight])]), Drop, LoopWhile(AtEnd [If(IsUppercase [MakeUppercase] [Drop])]), MoveLeft, MakeUppercase, MakeUppercase, LoopWhile(IsLowercase [If(AtEnd [MakeLowercase] [Drop])]), LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[11, 10], [16, 8], [31, 5], [41, 4], [47, 3], [127, 2], [270, 1], [302, 0]], "number_of_iterations": 303}
{"file": "strings/1-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.028232000000000035, "program_length": 14, "number_of_explored_programs": 176, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.01, "explored_per_size_tokens": [0, 0, 0, 2, 3, 0, 3, 1, 3, 2, 7, 10, 7, 10, 5, 10, 9, 7, 8, 13, 13, 7, 8, 8, 2, 6, 5, 5, 5, 2, 2, 2, 3, 0, 0, 1, 4, 2, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 0, 3, 4, 10, 14, 16, 21, 12, 33, 20, 13, 15, 4, 5, 2, 1], "program": "Program([Drop, LoopWhile(IsLetter [If(AtStart [Drop] [MakeUppercase])]), Drop, LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 10], [14, 9], [18, 8], [26, 7], [33, 6], [38, 5], [106, 2], [159, 1], [175, 0]], "number_of_iterations": 176}
{"file": "strings/1-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.04050500000000001, "program_length": 13, "number_of_explored_programs": 229, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.015, "explored_per_size_tokens": [0, 3, 1, 3, 5, 3, 10, 4, 6, 12, 8, 9, 20, 12, 20, 15, 23, 18, 8, 9, 6, 10, 6, 8, 2, 4, 0, 3, 0, 1], "explored_per_size_sequence": [0, 7, 4, 12, 17, 13, 20, 30, 30, 42, 28, 19, 3, 4], "program": "Program([LoopWhile(IsNotLowercase [Drop, Drop]), Drop, LoopWhile(IsLetter [MakeLowercase, Drop]), Drop, MakeUppercase, MakeUppercase, Drop, Drop, Drop])", "cost_per_iteration": [[19, 10], [27, 8], [31, 7], [40, 5], [43, 1], [230, 0]], "number_of_iterations": 231}
{"file": "strings/1-3-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.8616569999999997, "program_length": 10, "number_of_explored_programs": 9114, "search_depth": 4, "time_destroy": 0.046, "time_repair": 0.272, "time_cost": 0.356, "explored_per_size_tokens": [0, 5, 25, 180, 615, 752, 804, 1147, 1076, 1007, 829, 531, 754, 590, 189, 258, 224, 37, 46, 35, 7, 2, 1], "explored_per_size_sequence": [0, 479, 1457, 2081, 2465, 1493, 453, 373, 187, 68, 40, 13, 5], "program": "Program([MakeUppercase, LoopWhile(IsNumber [If(NotAtEnd [Drop] [MakeLowercase])]), MoveRight, LoopWhile(IsLowercase [If(IsNotLowercase [MoveLeft] [Drop])])])", "cost_per_iteration": [[4, 4], [76, 3], [103, 2], [106, 1], [11217, 0]], "number_of_iterations": 11218}
{"file": "strings/1-3-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.015912000000000148, "program_length": 11, "number_of_explored_programs": 125, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 2, 6, 7, 11, 3, 13, 8, 10, 10, 12, 9, 6, 7, 8, 4, 3, 0, 1, 2, 1], "explored_per_size_sequence": [0, 4, 14, 16, 23, 27, 21, 14, 6], "program": "Program([MakeUppercase, LoopWhile(IsUppercase [If(IsSpace [MakeUppercase] [MoveRight])]), Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveRight])])])", "cost_per_iteration": [[0, 3], [25, 1], [127, 0]], "number_of_iterations": 128}
{"file": "strings/1-3-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.26859999999999973, "program_length": 12, "number_of_explored_programs": 3446, "search_depth": 2, "time_destroy": 0.013, "time_repair": 0.077, "time_cost": 0.114, "explored_per_size_tokens": [0, 5, 23, 64, 165, 235, 228, 232, 346, 310, 285, 263, 228, 241, 183, 119, 126, 111, 64, 50, 52, 27, 22, 25, 10, 7, 4, 4, 4, 4, 3, 2, 2, 1, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 115, 303, 504, 585, 425, 368, 223, 245, 220, 176, 125, 57, 57, 32, 6, 2, 3], "program": "Program([MakeUppercase, MoveRight, LoopWhile(AtEnd [If(NotAtStart [MakeLowercase] [MoveRight])]), LoopWhile(NotAtStart [Drop, Drop]), LoopWhile(IsSpace [MakeLowercase, MoveLeft])])", "cost_per_iteration": [[4, 5], [18, 4], [31, 3], [34, 2], [80, 1], [3825, 0]], "number_of_iterations": 3826}
{"file": "strings/1-3-4.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.07364999999999977, "program_length": 14, "number_of_explored_programs": 936, "search_depth": 1, "time_destroy": 0.004, "time_repair": 0.021, "time_cost": 0.028, "explored_per_size_tokens": [0, 4, 15, 17, 61, 68, 88, 102, 107, 94, 67, 70, 67, 51, 36, 25, 23, 15, 9, 3, 9, 2, 2, 1], "explored_per_size_sequence": [0, 22, 69, 92, 163, 203, 183, 130, 59, 9, 4, 2], "program": "Program([LoopWhile(IsNumber [If(IsUppercase [MakeUppercase] [Drop])]), MakeUppercase, LoopWhile(AtStart [If(IsNotNumber [MoveRight] [MakeLowercase])]), MakeLowercase, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[12, 3], [17, 2], [21, 1], [1043, 0]], "number_of_iterations": 1044}
{"file": "strings/1-3-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.139494, "program_length": 10, "number_of_explored_programs": 1482, "search_depth": 1, "time_destroy": 0.008, "time_repair": 0.045, "time_cost": 0.054, "explored_per_size_tokens": [0, 5, 23, 37, 131, 147, 168, 193, 158, 116, 125, 108, 103, 66, 39, 20, 27, 8, 5, 3], "explored_per_size_sequence": [0, 70, 180, 246, 379, 291, 208, 108], "program": "Program([LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MakeUppercase])]), MakeUppercase, MoveRight, LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MoveRight])])])", "cost_per_iteration": [[5, 3], [41, 2], [64, 1], [1741, 0]], "number_of_iterations": 1742}
{"file": "strings/1-3-6.pl", "test_cost": 1.3333333333333333, "train_cost": 0, "execution_time": 0.05835400000000002, "program_length": 5, "number_of_explored_programs": 606, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.017, "time_cost": 0.022, "explored_per_size_tokens": [0, 5, 13, 26, 36, 60, 60, 78, 47, 50, 56, 47, 41, 31, 12, 18, 14, 6, 3, 2, 1], "explored_per_size_sequence": [0, 16, 56, 92, 141, 119, 98, 66, 18], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop])", "cost_per_iteration": [[0, 3], [10, 2], [36, 1], [645, 0]], "number_of_iterations": 646}
{"file": "strings/1-3-7.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.1216750000000002, "program_length": 6, "number_of_explored_programs": 1191, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.036, "time_cost": 0.049, "explored_per_size_tokens": [0, 5, 12, 32, 51, 114, 127, 137, 132, 112, 109, 87, 71, 71, 47, 33, 28, 10, 1, 5, 7], "explored_per_size_sequence": [0, 24, 84, 158, 224, 241, 208, 159, 93], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[1, 4], [11, 3], [38, 2], [68, 1], [1332, 0]], "number_of_iterations": 1333}
{"file": "strings/1-3-8.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.04062699999999975, "program_length": 6, "number_of_explored_programs": 376, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.01, "time_cost": 0.014, "explored_per_size_tokens": [0, 2, 4, 11, 23, 22, 44, 29, 41, 38, 33, 29, 30, 18, 18, 11, 8, 5, 5, 3, 0, 2], "explored_per_size_sequence": [0, 6, 17, 37, 53, 72, 76, 56, 34, 22, 3], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[8, 3], [12, 2], [25, 1], [389, 0]], "number_of_iterations": 390}
{"file": "strings/1-3-9.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.1005189999999998, "program_length": 9, "number_of_explored_programs": 1007, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.029, "time_cost": 0.04, "explored_per_size_tokens": [0, 3, 11, 14, 45, 80, 71, 108, 107, 82, 101, 91, 62, 57, 55, 40, 26, 23, 18, 4, 5, 4], "explored_per_size_sequence": [0, 10, 44, 74, 152, 212, 168, 160, 115, 52, 13, 4, 3], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsNotUppercase [MoveRight, MakeUppercase]), Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 4], [13, 3], [36, 2], [96, 1], [1055, 0]], "number_of_iterations": 1056}
{"file": "strings/1-4-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010190000000000143, "program_length": 5, "number_of_explored_programs": 6, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 1], "program": "Program([LoopWhile(IsUppercase [If(IsNotSpace [MoveRight] [MakeLowercase])]), MakeUppercase])", "cost_per_iteration": [[5, 0]], "number_of_iterations": 6}
{"file": "strings/1-4-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007706999999999908, "program_length": 10, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 0, 0, 1], "program": "Program([MakeUppercase, LoopWhile(AtEnd [If(NotAtStart [MakeLowercase] [Drop])]), LoopWhile(IsSpace [If(IsUppercase [Drop] [MoveLeft])]), MakeUppercase])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/1-4-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009101999999999943, "program_length": 5, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 1, 1], "program": "Program([LoopWhile(AtEnd [If(IsLowercase [MoveRight] [MakeLowercase])]), MakeUppercase])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/1-4-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.005695999999999923, "program_length": 6, "number_of_explored_programs": 1, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsUppercase [If(IsNotNumber [MoveRight] [MoveLeft])])])", "cost_per_iteration": [[0, 0]], "number_of_iterations": 1}
{"file": "strings/1-4-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006607999999999947, "program_length": 9, "number_of_explored_programs": 7, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 2, 0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 3, 2], "program": "Program([LoopWhile(AtEnd [If(IsNotLetter [MakeLowercase] [MoveLeft])]), LoopWhile(IsSpace [If(NotAtStart [MoveLeft] [MoveRight])]), MakeUppercase])", "cost_per_iteration": [[6, 0]], "number_of_iterations": 7}
{"file": "strings/1-4-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011917999999999651, "program_length": 1, "number_of_explored_programs": 36, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 2, 6, 5, 2, 3, 3, 6, 0, 0, 2, 2, 2, 0, 1], "explored_per_size_sequence": [0, 11, 6, 13, 6], "program": "Program([MakeUppercase])", "cost_per_iteration": [[35, 0]], "number_of_iterations": 36}
{"file": "strings/1-4-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006683999999999912, "program_length": 7, "number_of_explored_programs": 11, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 2, 0, 3, 2, 1, 2, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 4, 1, 3], "program": "Program([MakeUppercase, LoopWhile(IsLowercase [If(IsNumber [MoveRight] [MoveLeft])]), MoveRight, MakeLowercase])", "cost_per_iteration": [[10, 0]], "number_of_iterations": 11}
{"file": "strings/1-4-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006269999999999776, "program_length": 7, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 0, 1, 3], "explored_per_size_sequence": [0, 1, 1, 1, 2], "program": "Program([LoopWhile(IsUppercase [MakeUppercase, MakeUppercase]), LoopWhile(IsLowercase [If(IsUppercase [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/1-4-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006381999999999888, "program_length": 9, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 0, 0, 1, 2], "program": "Program([MakeLowercase, LoopWhile(IsSpace [If(IsNotNumber [Drop] [MoveRight])]), MakeUppercase, LoopWhile(AtEnd [Drop, MakeLowercase])])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/1-5-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.028510999999999953, "program_length": 12, "number_of_explored_programs": 310, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.01, "explored_per_size_tokens": [0, 5, 14, 22, 46, 39, 24, 26, 37, 40, 21, 6, 9, 13, 1, 5, 2], "explored_per_size_sequence": [0, 54, 89, 87, 80], "program": "Program([LoopWhile(AtEnd [If(NotAtStart [Drop] [MakeLowercase])]), LoopWhile(IsLetter [If(IsLowercase [MoveRight] [MakeUppercase])]), Drop, LoopWhile(IsNotLowercase [MakeLowercase, MakeLowercase])])", "cost_per_iteration": [[366, 0]], "number_of_iterations": 367}
{"file": "strings/1-5-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009386999999999812, "program_length": 7, "number_of_explored_programs": 50, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 4, 6, 1, 9, 8, 4, 2, 5, 3, 4, 0, 2, 2], "explored_per_size_sequence": [0, 9, 21, 9, 11], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotUppercase [MoveRight] [MakeLowercase])]), Drop, MakeLowercase])", "cost_per_iteration": [[52, 0]], "number_of_iterations": 53}
{"file": "strings/1-5-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02025800000000011, "program_length": 5, "number_of_explored_programs": 185, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 5, 11, 10, 32, 27, 22, 13, 15, 23, 5, 2, 10, 9, 0, 0, 1], "explored_per_size_sequence": [0, 38, 47, 60, 40], "program": "Program([LoopWhile(IsLetter [If(IsNotLowercase [MoveLeft] [MoveRight])]), Drop])", "cost_per_iteration": [[212, 0]], "number_of_iterations": 213}
{"file": "strings/1-5-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.021707000000000143, "program_length": 9, "number_of_explored_programs": 217, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.007, "explored_per_size_tokens": [0, 5, 11, 16, 41, 19, 24, 22, 18, 22, 12, 3, 11, 9, 0, 3, 1], "explored_per_size_sequence": [0, 44, 42, 55, 76], "program": "Program([LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [MoveRight])]), LoopWhile(IsUppercase [If(IsNotLowercase [Drop] [MoveRight])]), Drop])", "cost_per_iteration": [[248, 0]], "number_of_iterations": 249}
{"file": "strings/1-5-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.10557999999999979, "program_length": 13, "number_of_explored_programs": 1171, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.032, "time_cost": 0.043, "explored_per_size_tokens": [0, 5, 25, 68, 185, 178, 135, 91, 100, 134, 106, 22, 55, 58, 1, 5, 3], "explored_per_size_sequence": [0, 173, 278, 368, 352], "program": "Program([LoopWhile(IsLowercase [If(IsNotUppercase [MoveRight] [MoveLeft])]), LoopWhile(IsSpace [If(IsUppercase [MakeLowercase] [MoveLeft])]), LoopWhile(AtStart [If(IsUppercase [MakeUppercase] [MoveLeft])]), Drop])", "cost_per_iteration": [[1433, 0]], "number_of_iterations": 1434}
{"file": "strings/1-5-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.024325999999999848, "program_length": 5, "number_of_explored_programs": 266, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.008, "explored_per_size_tokens": [0, 5, 12, 16, 50, 28, 30, 22, 23, 37, 17, 3, 12, 8, 0, 0, 3], "explored_per_size_sequence": [0, 51, 62, 82, 71], "program": "Program([LoopWhile(IsLowercase [If(IsNumber [MoveLeft] [MoveRight])]), Drop])", "cost_per_iteration": [[301, 0]], "number_of_iterations": 302}
{"file": "strings/1-5-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.016433000000000142, "program_length": 9, "number_of_explored_programs": 169, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 5, 12, 8, 31, 27, 16, 11, 6, 23, 13, 3, 8, 5, 0, 0, 1], "explored_per_size_sequence": [0, 35, 47, 43, 44], "program": "Program([LoopWhile(AtEnd [If(IsNotLowercase [MakeLowercase] [MakeUppercase])]), LoopWhile(IsLowercase [If(IsLetter [MoveRight] [MakeLowercase])]), Drop])", "cost_per_iteration": [[191, 0]], "number_of_iterations": 192}
{"file": "strings/1-5-8.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.013952000000000186, "program_length": 9, "number_of_explored_programs": 104, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 5, 5, 6, 13, 8, 8, 9, 11, 12, 8, 4, 7, 5, 0, 2, 1], "explored_per_size_sequence": [0, 12, 25, 35, 32], "program": "Program([MoveRight, LoopWhile(IsLetter [MoveRight, MoveRight]), LoopWhile(AtStart [If(IsUppercase [MakeLowercase] [MoveLeft])]), Drop])", "cost_per_iteration": [[114, 0]], "number_of_iterations": 115}
{"file": "strings/1-5-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.023366999999999916, "program_length": 6, "number_of_explored_programs": 240, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.007, "explored_per_size_tokens": [0, 5, 13, 17, 47, 22, 30, 18, 16, 21, 17, 4, 10, 13, 0, 4, 3], "explored_per_size_sequence": [0, 46, 54, 66, 74], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotLowercase [MakeUppercase] [MoveRight])]), Drop])", "cost_per_iteration": [[268, 0]], "number_of_iterations": 269}
{"file": "strings/1-6-1.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.00989500000000021, "program_length": 27, "number_of_explored_programs": 26, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 3, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 1, 1, 0, 2, 0, 2, 1, 1, 1, 1, 1, 2, 0, 1, 0, 3, 1, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 1, 3, 1, 2, 0, 2, 3, 4, 4, 1, 2], "program": "Program([Drop, LoopWhile(IsUppercase [If(NotAtStart [MoveLeft] [MakeUppercase])]), LoopWhile(IsUppercase [If(IsNotUppercase [MoveRight] [MakeLowercase])]), MakeUppercase, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(IsSpace [If(IsNotUppercase [Drop] [MoveRight])]), MoveLeft, Drop, LoopWhile(IsSpace [If(IsLetter [Drop] [MakeLowercase])]), MakeUppercase])", "cost_per_iteration": [[6, 3], [8, 2], [17, 1], [25, 0]], "number_of_iterations": 26}
{"file": "strings/1-6-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009266999999999914, "program_length": 23, "number_of_explored_programs": 29, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 0, 3, 4, 0, 0, 1, 1, 2, 1, 1, 1, 3, 3, 1, 2, 0, 1, 2, 0, 0, 2], "explored_per_size_sequence": [0, 2, 5, 3, 3, 5, 5, 3, 3], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsUppercase [MakeLowercase] [Drop])]), MoveLeft, LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), LoopWhile(IsNumber [If(IsSpace [Drop] [MoveRight])]), LoopWhile(AtStart [If(IsNotLetter [Drop] [MoveRight])]), MakeLowercase, LoopWhile(IsNumber [If(NotAtEnd [MoveLeft] [MoveRight])])])", "cost_per_iteration": [[6, 2], [12, 1], [28, 0]], "number_of_iterations": 29}
{"file": "strings/1-6-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.008510999999999935, "program_length": 20, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 0, 2, 0, 0, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 1, 1, 3, 0, 2, 1, 3, 2], "program": "Program([MakeLowercase, LoopWhile(AtEnd [If(IsUppercase [MoveRight] [Drop])]), LoopWhile(IsNumber [If(NotAtStart [MakeUppercase] [MakeLowercase])]), MakeLowercase, LoopWhile(IsLetter [If(IsNumber [MoveRight] [Drop])]), LoopWhile(IsUppercase [If(IsLetter [MakeUppercase] [MoveRight])]), Drop, MakeUppercase])", "cost_per_iteration": [[5, 2], [10, 1], [14, 0]], "number_of_iterations": 15}
{"file": "strings/1-6-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0068909999999999805, "program_length": 6, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 1, 0, 2, 0, 0, 1], "explored_per_size_sequence": [0, 2, 0, 3], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[2, 5], [3, 1], [4, 0]], "number_of_iterations": 5}
{"file": "strings/1-6-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010657000000000139, "program_length": 24, "number_of_explored_programs": 44, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 4, 1, 0, 3, 4, 2, 3, 4, 4, 1, 2, 6, 1, 1, 0, 3, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 8, 8, 10, 9, 3, 3, 1, 1], "program": "Program([LoopWhile(IsLowercase [If(IsNotSpace [MakeLowercase] [MoveLeft])]), Drop, LoopWhile(IsLowercase [If(IsNotLowercase [MoveRight] [Drop])]), LoopWhile(AtEnd [If(NotAtStart [MoveRight] [MakeUppercase])]), LoopWhile(IsUppercase [If(AtEnd [MoveRight] [MakeUppercase])]), Drop, LoopWhile(AtEnd [MakeLowercase, MakeUppercase]), LoopWhile(IsLowercase [Drop, MoveRight])])", "cost_per_iteration": [[13, 5], [35, 3], [44, 0]], "number_of_iterations": 45}
{"file": "strings/1-1-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010250000000000092, "program_length": 6, "number_of_explored_programs": 62, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 4, 2, 1, 8, 8, 7, 5, 3, 6, 9, 0, 3, 3, 0, 1, 2], "explored_per_size_sequence": [0, 9, 13, 17, 23], "program": "Program([MakeUppercase, Drop, LoopWhile(IsUppercase [If(NotAtStart [MoveRight] [MakeUppercase])])])", "cost_per_iteration": [[66, 0]], "number_of_iterations": 67}
{"file": "strings/1-1-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006708000000000158, "program_length": 10, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 2], "explored_per_size_sequence": [0, 1, 2, 3, 3], "program": "Program([LoopWhile(IsLetter [If(IsNotUppercase [MakeUppercase] [MakeLowercase])]), LoopWhile(IsNumber [If(IsNotNumber [Drop] [MakeLowercase])]), MakeLowercase, Drop])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-1-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0068709999999998495, "program_length": 1, "number_of_explored_programs": 8, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 3, 1, 0, 2, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 5, 1, 2], "program": "Program([Drop])", "cost_per_iteration": [[7, 0]], "number_of_iterations": 8}
{"file": "strings/1-1-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006940000000000168, "program_length": 1, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 3, 0, 0, 1, 2, 0, 0, 0, 0, 2, 1], "explored_per_size_sequence": [0, 4, 2, 1, 2], "program": "Program([Drop])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-1-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006757000000000346, "program_length": 5, "number_of_explored_programs": 3, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 1, 2], "program": "Program([LoopWhile(IsNumber [If(IsLetter [MakeLowercase] [MoveLeft])]), Drop])", "cost_per_iteration": [[2, 0]], "number_of_iterations": 3}
{"file": "strings/1-1-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0065590000000002036, "program_length": 1, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2], "explored_per_size_sequence": [0, 3, 0, 0, 2], "program": "Program([Drop])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/1-1-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007013999999999854, "program_length": 5, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 0, 1, 2, 2, 0, 0, 1, 0, 1, 0, 1], "explored_per_size_sequence": [0, 2, 3, 2, 2], "program": "Program([LoopWhile(IsLetter [If(AtEnd [MakeUppercase] [MakeLowercase])]), Drop])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-1-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006864999999999899, "program_length": 9, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 4, 1, 0, 1, 1, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 2, 1, 3], "program": "Program([LoopWhile(IsSpace [If(IsLetter [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-1-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0067509999999999515, "program_length": 5, "number_of_explored_programs": 4, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 1, 0, 2, 0, 1], "explored_per_size_sequence": [0, 1, 2, 0, 1], "program": "Program([LoopWhile(IsLetter [If(AtStart [MoveLeft] [Drop])]), Drop])", "cost_per_iteration": [[3, 0]], "number_of_iterations": 4}
{"file": "strings/1-2-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.014476999999999851, "program_length": 26, "number_of_explored_programs": 71, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 2, 1, 0, 1, 2, 1, 2, 4, 3, 1, 1, 5, 4, 4, 3, 4, 4, 3, 5, 3, 4, 3, 2, 1, 1, 2, 2, 0, 0, 1, 2], "explored_per_size_sequence": [0, 3, 5, 3, 10, 6, 10, 9, 6, 7, 6, 4, 1, 1], "program": "Program([LoopWhile(AtStart [If(IsNotLetter [MoveRight] [Drop])]), LoopWhile(IsLowercase [If(AtStart [MoveLeft] [Drop])]), MoveLeft, Drop, LoopWhile(IsNotLetter [Drop, Drop]), LoopWhile(IsSpace [If(IsLetter [MoveRight] [MakeUppercase])]), Drop, LoopWhile(IsLowercase [If(AtStart [MoveLeft] [Drop])]), LoopWhile(NotAtStart [MakeUppercase, MoveRight]), Drop])", "cost_per_iteration": [[2, 9], [3, 5], [33, 4], [37, 3], [59, 2], [62, 1], [71, 0]], "number_of_iterations": 72}
{"file": "strings/1-2-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.2748050000000002, "program_length": 9, "number_of_explored_programs": 2537, "search_depth": 1, "time_destroy": 0.01, "time_repair": 0.069, "time_cost": 0.131, "explored_per_size_tokens": [0, 5, 18, 29, 65, 105, 130, 124, 174, 205, 186, 191, 205, 207, 173, 123, 97, 124, 76, 48, 55, 40, 31, 20, 12, 8, 18, 10, 6, 11, 8, 5, 8, 2, 5, 1, 2, 3, 2, 3, 1, 0, 0, 0, 1], "explored_per_size_sequence": [0, 24, 120, 262, 390, 483, 475, 363, 232, 84, 41, 16, 26, 7, 9, 4, 1], "program": "Program([MakeLowercase, LoopWhile(IsNotUppercase [MakeLowercase, MoveRight]), MoveLeft, LoopWhile(NotAtStart [Drop, MoveLeft]), Drop])", "cost_per_iteration": [[1, 10], [2, 8], [6, 7], [10, 6], [22, 4], [109, 1], [2730, 0]], "number_of_iterations": 2731}
{"file": "strings/1-2-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01571200000000017, "program_length": 27, "number_of_explored_programs": 97, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 1, 0, 1, 0, 2, 2, 2, 2, 0, 4, 3, 6, 9, 8, 6, 10, 7, 7, 3, 7, 3, 1, 2, 1, 4, 1, 3, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 3, 4, 6, 3, 3, 10, 17, 14, 12, 5, 9, 8, 0, 1, 1], "program": "Program([LoopWhile(IsSpace [If(IsNotLetter [MakeUppercase] [Drop])]), MakeUppercase, Drop, Drop, Drop, LoopWhile(IsSpace [If(IsNotNumber [MoveLeft] [MakeLowercase])]), MoveRight, MoveLeft, LoopWhile(IsLowercase [Drop, MakeLowercase]), MoveRight, MoveLeft, Drop, LoopWhile(IsNumber [If(IsNotLowercase [MakeLowercase] [MoveLeft])]), Drop, Drop, Drop])", "cost_per_iteration": [[2, 10], [11, 9], [21, 8], [27, 7], [55, 6], [85, 5], [93, 1], [96, 0]], "number_of_iterations": 97}
{"file": "strings/1-2-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007791999999999799, "program_length": 10, "number_of_explored_programs": 14, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 0, 1, 1, 2, 0, 0, 0, 3, 2, 3, 0, 1, 0, 1], "explored_per_size_sequence": [0, 1, 2, 6, 2, 2, 1], "program": "Program([LoopWhile(IsLetter [If(IsLowercase [MakeUppercase] [Drop])]), Drop, LoopWhile(IsNotUppercase [MakeLowercase, Drop]), MakeUppercase, MakeUppercase])", "cost_per_iteration": [[7, 10], [11, 8], [13, 0]], "number_of_iterations": 14}
{"file": "strings/1-2-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.08207599999999982, "program_length": 20, "number_of_explored_programs": 546, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.019, "time_cost": 0.034, "explored_per_size_tokens": [0, 2, 1, 2, 2, 0, 7, 4, 10, 7, 6, 17, 13, 21, 22, 30, 36, 30, 35, 48, 45, 33, 24, 28, 30, 12, 17, 16, 10, 5, 4, 4, 8, 3, 1, 5, 3, 2, 1, 0, 1, 1], "explored_per_size_sequence": [0, 3, 1, 4, 7, 11, 21, 39, 78, 86, 102, 83, 76, 24, 10, 1], "program": "Program([Drop, Drop, MakeUppercase, MakeUppercase, Drop, LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MoveRight])]), Drop, LoopWhile(IsNumber [If(NotAtStart [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MakeLowercase])]), Drop])", "cost_per_iteration": [[1, 10], [3, 9], [21, 8], [29, 4], [31, 3], [86, 2], [180, 1], [551, 0]], "number_of_iterations": 552}
{"file": "strings/1-2-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.013830000000000009, "program_length": 17, "number_of_explored_programs": 76, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 1, 0, 1, 4, 2, 0, 1, 4, 3, 3, 1, 3, 6, 3, 2, 5, 4, 3, 3, 9, 4, 4, 1, 2, 2, 2, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 3, 5, 3, 3, 6, 10, 11, 10, 17, 4, 4], "program": "Program([Drop, LoopWhile(IsLowercase [Drop, Drop]), Drop, MoveRight, Drop, LoopWhile(IsNumber [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(IsSpace [If(IsNotSpace [MoveRight] [MoveLeft])]), Drop, Drop])", "cost_per_iteration": [[0, 10], [5, 9], [15, 5], [21, 4], [23, 3], [24, 1], [76, 0]], "number_of_iterations": 77}
{"file": "strings/1-2-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.024169000000000107, "program_length": 23, "number_of_explored_programs": 170, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.009, "explored_per_size_tokens": [0, 2, 1, 1, 0, 4, 5, 4, 3, 1, 6, 1, 2, 3, 5, 8, 4, 9, 12, 15, 9, 15, 11, 13, 8, 7, 4, 4, 8, 3, 1, 1], "explored_per_size_sequence": [0, 3, 5, 6, 11, 6, 5, 1, 2, 7, 8, 17, 16, 23, 31, 16, 8, 5], "program": "Program([Drop, LoopWhile(IsLowercase [If(IsNumber [MakeUppercase] [Drop])]), Drop, LoopWhile(IsNumber [Drop, MakeLowercase]), Drop, MoveRight, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [Drop])]), MoveLeft, Drop, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[0, 10], [14, 9], [34, 7], [40, 5], [55, 4], [59, 3], [68, 2], [88, 1], [171, 0]], "number_of_iterations": 172}
{"file": "strings/1-2-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06081599999999998, "program_length": 17, "number_of_explored_programs": 402, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.024, "explored_per_size_tokens": [0, 2, 0, 0, 2, 1, 2, 1, 9, 8, 7, 7, 12, 19, 21, 18, 22, 28, 26, 16, 24, 35, 27, 12, 19, 17, 16, 9, 8, 9, 7, 5, 2, 3, 4, 2, 1, 0, 0, 1], "explored_per_size_sequence": [0, 4, 2, 8, 11, 26, 38, 43, 68, 63, 54, 41, 29, 7, 3, 3, 2], "program": "Program([Drop, Drop, Drop, MakeUppercase, LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), MakeUppercase, Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MoveLeft])]), MakeUppercase, Drop, MakeUppercase])", "cost_per_iteration": [[3, 10], [12, 9], [25, 7], [72, 5], [78, 3], [89, 2], [120, 1], [401, 0]], "number_of_iterations": 402}
{"file": "strings/1-2-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.05556699999999992, "program_length": 17, "number_of_explored_programs": 325, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.012, "time_cost": 0.019, "explored_per_size_tokens": [0, 0, 0, 1, 3, 3, 3, 10, 6, 8, 13, 19, 17, 13, 26, 26, 17, 20, 30, 24, 12, 18, 14, 14, 11, 7, 3, 1, 2, 2, 2], "explored_per_size_sequence": [0, 0, 5, 6, 12, 25, 45, 45, 69, 48, 35, 29, 6], "program": "Program([LoopWhile(IsNumber [MakeLowercase, MoveLeft]), Drop, Drop, Drop, LoopWhile(IsLowercase [If(AtStart [Drop] [MakeUppercase])]), Drop, Drop, LoopWhile(IsNotLetter [Drop, MakeUppercase]), Drop, Drop])", "cost_per_iteration": [[1, 10], [14, 9], [20, 8], [24, 7], [58, 2], [158, 1], [327, 0]], "number_of_iterations": 328}
{"file": "strings/1-3-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.012321000000000026, "program_length": 22, "number_of_explored_programs": 64, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 0, 3, 2, 3, 3, 5, 5, 8, 8, 5, 3, 3, 0, 3, 2, 4, 1, 0, 0, 2, 2, 0, 0, 1], "explored_per_size_sequence": [0, 2, 1, 8, 16, 12, 7, 8, 3, 2, 5], "program": "Program([MakeUppercase, LoopWhile(IsLowercase [If(IsLetter [Drop] [MoveRight])]), MoveRight, Drop, Drop, LoopWhile(AtEnd [If(NotAtStart [MakeUppercase] [Drop])]), Drop, LoopWhile(IsSpace [If(IsLowercase [MakeUppercase] [Drop])]), LoopWhile(IsUppercase [If(IsSpace [MoveLeft] [MakeLowercase])]), Drop])", "cost_per_iteration": [[4, 4], [7, 3], [23, 2], [42, 1], [63, 0]], "number_of_iterations": 64}
{"file": "strings/1-3-2.pl", "test_cost": 1.1111111111111112, "train_cost": 0, "execution_time": 0.11732799999999965, "program_length": 9, "number_of_explored_programs": 1550, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.036, "time_cost": 0.046, "explored_per_size_tokens": [0, 5, 20, 43, 129, 173, 170, 166, 150, 143, 150, 109, 82, 70, 41, 34, 28, 10, 10, 7, 1, 5, 1, 2, 1], "explored_per_size_sequence": [0, 67, 173, 265, 393, 294, 196, 129, 14, 16, 3], "program": "Program([MakeUppercase, LoopWhile(IsLowercase [If(IsNumber [MoveLeft] [MakeUppercase])]), LoopWhile(NotAtEnd [MoveRight, Drop]), Drop])", "cost_per_iteration": [[7, 3], [14, 2], [79, 1], [1781, 0]], "number_of_iterations": 1782}
{"file": "strings/1-3-3.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.223395, "program_length": 8, "number_of_explored_programs": 2836, "search_depth": 2, "time_destroy": 0.011, "time_repair": 0.066, "time_cost": 0.093, "explored_per_size_tokens": [0, 0, 0, 14, 30, 61, 127, 211, 238, 277, 321, 270, 231, 201, 192, 190, 141, 76, 72, 63, 41, 23, 22, 9, 8, 4, 6, 1, 4, 2, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 60, 195, 311, 521, 548, 504, 318, 226, 61, 51, 25, 6, 8], "program": "Program([MakeUppercase, MoveRight, Drop, Drop, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 6], [5, 5], [6, 4], [7, 3], [34, 2], [54, 1], [3152, 0]], "number_of_iterations": 3153}
{"file": "strings/1-3-4.pl", "test_cost": 0.4444444444444444, "train_cost": 0, "execution_time": 0.15575699999999992, "program_length": 10, "number_of_explored_programs": 2257, "search_depth": 1, "time_destroy": 0.008, "time_repair": 0.048, "time_cost": 0.062, "explored_per_size_tokens": [0, 5, 16, 40, 102, 190, 239, 228, 279, 225, 227, 164, 152, 137, 103, 59, 38, 30, 8, 10, 5], "explored_per_size_sequence": [0, 42, 138, 273, 379, 505, 423, 319, 166, 12], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsUppercase [If(NotAtStart [MakeUppercase] [MakeLowercase])]), Drop, Drop, Drop, Drop])", "cost_per_iteration": [[1, 4], [5, 1], [2589, 0]], "number_of_iterations": 2590}
{"file": "strings/1-3-5.pl", "test_cost": 1.3333333333333333, "train_cost": 0, "execution_time": 0.02009300000000014, "program_length": 13, "number_of_explored_programs": 207, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.006, "explored_per_size_tokens": [0, 3, 8, 7, 14, 23, 22, 16, 20, 25, 13, 18, 12, 10, 5, 2, 1, 4, 4], "explored_per_size_sequence": [0, 6, 25, 35, 45, 43, 24, 12, 9, 7, 1], "program": "Program([MakeLowercase, LoopWhile(IsSpace [If(IsNotUppercase [MakeUppercase] [MoveRight])]), MakeUppercase, LoopWhile(IsNotLetter [MoveRight, MoveRight]), MoveRight, Drop, Drop, Drop])", "cost_per_iteration": [[1, 3], [67, 2], [73, 1], [214, 0]], "number_of_iterations": 215}
{"file": "strings/1-3-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.015968999999999678, "program_length": 11, "number_of_explored_programs": 137, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.003, "time_cost": 0.004, "explored_per_size_tokens": [0, 3, 5, 4, 7, 11, 18, 15, 12, 8, 16, 9, 9, 9, 6, 2, 1, 2], "explored_per_size_sequence": [0, 10, 20, 24, 41, 22, 16, 4], "program": "Program([MoveRight, LoopWhile(NotAtEnd [Drop, MakeUppercase]), Drop, MakeLowercase, MakeLowercase, LoopWhile(IsLowercase [If(NotAtEnd [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[3, 3], [8, 1], [142, 0]], "number_of_iterations": 143}
{"file": "strings/1-3-7.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.13101200000000013, "program_length": 10, "number_of_explored_programs": 1368, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.039, "time_cost": 0.053, "explored_per_size_tokens": [0, 2, 10, 22, 33, 78, 97, 111, 125, 141, 141, 126, 105, 88, 74, 79, 43, 35, 28, 10, 13, 4, 2, 1], "explored_per_size_sequence": [0, 4, 42, 108, 196, 245, 293, 232, 161, 87], "program": "Program([MakeUppercase, LoopWhile(IsUppercase [If(IsLowercase [MoveLeft] [MoveRight])]), Drop, Drop, MoveRight, Drop, Drop])", "cost_per_iteration": [[4, 4], [11, 3], [44, 2], [98, 1], [1455, 0]], "number_of_iterations": 1456}
{"file": "strings/1-3-8.pl", "test_cost": 0.2222222222222222, "train_cost": 0, "execution_time": 0.36766500000000013, "program_length": 8, "number_of_explored_programs": 3834, "search_depth": 2, "time_destroy": 0.019, "time_repair": 0.115, "time_cost": 0.153, "explored_per_size_tokens": [0, 5, 22, 86, 219, 324, 343, 431, 452, 430, 335, 302, 249, 263, 108, 105, 85, 35, 18, 17, 4, 1], "explored_per_size_sequence": [0, 141, 419, 688, 838, 761, 470, 333, 167, 12, 5], "program": "Program([MakeUppercase, LoopWhile(AtStart [If(AtEnd [MakeUppercase] [MoveRight])]), LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[7, 4], [10, 3], [41, 2], [51, 1], [4459, 0]], "number_of_iterations": 4460}
{"file": "strings/1-3-9.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.02526699999999993, "program_length": 9, "number_of_explored_programs": 231, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.008, "explored_per_size_tokens": [0, 2, 0, 5, 11, 10, 8, 8, 11, 13, 15, 12, 25, 15, 12, 20, 20, 10, 6, 8, 11, 2, 2, 2, 2, 0, 1], "explored_per_size_sequence": [0, 7, 17, 29, 32, 33, 54, 27, 23, 9], "program": "Program([LoopWhile(AtStart [MoveRight, Drop]), MakeLowercase, LoopWhile(NotAtEnd [Drop, Drop]), Drop, MakeUppercase])", "cost_per_iteration": [[4, 4], [25, 3], [55, 1], [232, 0]], "number_of_iterations": 233}
{"file": "strings/1-4-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010936000000000057, "program_length": 4, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 0, 0, 1, 1], "program": "Program([MakeUppercase, MakeLowercase, MakeLowercase, MakeUppercase])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/1-4-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00789799999999996, "program_length": 5, "number_of_explored_programs": 24, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 1, 1, 2, 1, 4, 1, 3, 0, 5, 1, 3], "explored_per_size_sequence": [0, 4, 2, 9, 9], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsLetter [MakeUppercase] [MoveRight])])])", "cost_per_iteration": [[27, 0]], "number_of_iterations": 28}
{"file": "strings/1-4-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007696000000000147, "program_length": 10, "number_of_explored_programs": 26, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 4, 1, 3, 2, 2, 4, 3, 1, 1, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 5, 10, 6, 5], "program": "Program([MakeUppercase, LoopWhile(IsSpace [If(IsUppercase [Drop] [MoveRight])]), LoopWhile(IsNumber [If(NotAtStart [Drop] [MakeUppercase])]), MoveRight])", "cost_per_iteration": [[25, 0]], "number_of_iterations": 26}
{"file": "strings/1-4-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.0065349999999999575, "program_length": 1, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 2, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 2], "explored_per_size_sequence": [0, 1, 4, 0, 4], "program": "Program([MakeUppercase])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-4-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006527999999999867, "program_length": 5, "number_of_explored_programs": 9, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 1, 1, 0, 2, 1, 1, 0, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 2, 4, 3], "program": "Program([LoopWhile(AtEnd [If(IsUppercase [Drop] [MakeUppercase])]), MakeUppercase])", "cost_per_iteration": [[8, 0]], "number_of_iterations": 9}
{"file": "strings/1-4-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006149000000000182, "program_length": 5, "number_of_explored_programs": 2, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 0, 1, 0, 1], "program": "Program([MakeUppercase, LoopWhile(IsLowercase [If(NotAtEnd [MakeLowercase] [MoveRight])])])", "cost_per_iteration": [[1, 0]], "number_of_iterations": 2}
{"file": "strings/1-4-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00796600000000014, "program_length": 5, "number_of_explored_programs": 30, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 1, 2, 2, 4, 4, 3, 2, 2, 2, 2, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 3, 6, 12, 9], "program": "Program([LoopWhile(AtEnd [If(NotAtEnd [MakeUppercase] [MoveLeft])]), MakeUppercase])", "cost_per_iteration": [[29, 0]], "number_of_iterations": 30}
{"file": "strings/1-4-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.008173999999999904, "program_length": 9, "number_of_explored_programs": 28, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 2, 3, 3, 4, 3, 1, 3, 1, 1, 2, 1, 1, 2, 0, 0, 1], "explored_per_size_sequence": [0, 7, 7, 6, 8], "program": "Program([LoopWhile(IsNumber [If(IsLetter [MoveLeft] [MakeLowercase])]), MakeLowercase, LoopWhile(IsLowercase [If(IsNotLetter [MoveLeft] [MakeUppercase])])])", "cost_per_iteration": [[28, 0]], "number_of_iterations": 29}
{"file": "strings/1-4-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.006556000000000228, "program_length": 9, "number_of_explored_programs": 5, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.0, "explored_per_size_tokens": [0, 0, 1, 0, 0, 0, 1, 2, 0, 1], "explored_per_size_sequence": [0, 0, 1, 2, 2], "program": "Program([MakeLowercase, LoopWhile(AtStart [If(IsNotUppercase [MakeUppercase] [MoveRight])]), LoopWhile(AtEnd [If(IsNumber [MakeUppercase] [MoveRight])])])", "cost_per_iteration": [[4, 0]], "number_of_iterations": 5}
{"file": "strings/1-5-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.036607000000000056, "program_length": 7, "number_of_explored_programs": 445, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.01, "time_cost": 0.013, "explored_per_size_tokens": [0, 5, 19, 25, 77, 78, 49, 35, 40, 33, 30, 9, 18, 18, 0, 4, 5], "explored_per_size_sequence": [0, 64, 136, 131, 114], "program": "Program([MakeLowercase, LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [MoveLeft])]), Drop, MakeLowercase])", "cost_per_iteration": [[511, 0]], "number_of_iterations": 512}
{"file": "strings/1-5-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.00942299999999996, "program_length": 6, "number_of_explored_programs": 46, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 4, 1, 4, 5, 5, 6, 4, 5, 3, 5, 1, 0, 1, 0, 0, 2], "explored_per_size_sequence": [0, 10, 9, 15, 12], "program": "Program([LoopWhile(IsLowercase [If(IsNotLetter [MakeUppercase] [MoveRight])]), MakeLowercase, Drop])", "cost_per_iteration": [[48, 0]], "number_of_iterations": 49}
{"file": "strings/1-5-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.024792999999999843, "program_length": 10, "number_of_explored_programs": 273, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.008, "explored_per_size_tokens": [0, 5, 14, 11, 54, 37, 22, 16, 21, 37, 26, 1, 10, 15, 2, 1, 1], "explored_per_size_sequence": [0, 49, 73, 72, 79], "program": "Program([LoopWhile(AtEnd [If(IsNotNumber [MoveLeft] [MoveRight])]), LoopWhile(IsLowercase [If(IsNumber [MakeUppercase] [MoveRight])]), MakeUppercase, Drop])", "cost_per_iteration": [[322, 0]], "number_of_iterations": 323}
{"file": "strings/1-5-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.03267700000000007, "program_length": 6, "number_of_explored_programs": 223, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.01, "explored_per_size_tokens": [0, 5, 6, 13, 30, 37, 32, 17, 14, 24, 16, 3, 12, 9, 0, 2, 3], "explored_per_size_sequence": [0, 39, 58, 65, 61], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotLetter [MakeLowercase] [MoveRight])]), Drop])", "cost_per_iteration": [[251, 0]], "number_of_iterations": 252}
{"file": "strings/1-5-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.06425199999999975, "program_length": 8, "number_of_explored_programs": 812, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.019, "time_cost": 0.026, "explored_per_size_tokens": [0, 5, 22, 53, 149, 104, 94, 68, 62, 73, 59, 24, 39, 40, 5, 7, 8], "explored_per_size_sequence": [0, 141, 176, 244, 251], "program": "Program([LoopWhile(IsSpace [If(IsLowercase [MakeLowercase] [MakeUppercase])]), LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), Drop])", "cost_per_iteration": [[1001, 0]], "number_of_iterations": 1002}
{"file": "strings/1-5-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02700199999999997, "program_length": 5, "number_of_explored_programs": 300, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.007, "time_cost": 0.009, "explored_per_size_tokens": [0, 5, 13, 19, 47, 43, 33, 30, 18, 39, 24, 4, 10, 10, 1, 3, 1], "explored_per_size_sequence": [0, 50, 69, 99, 82], "program": "Program([LoopWhile(IsLowercase [If(IsNotLowercase [MakeUppercase] [MoveRight])]), Drop])", "cost_per_iteration": [[346, 0]], "number_of_iterations": 347}
{"file": "strings/1-5-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.007749000000000006, "program_length": 9, "number_of_explored_programs": 15, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.0, "time_cost": 0.001, "explored_per_size_tokens": [0, 3, 0, 1, 1, 2, 1, 0, 1, 2, 2, 1, 0, 1], "explored_per_size_sequence": [0, 5, 3, 4, 3], "program": "Program([LoopWhile(IsLowercase [If(IsNotNumber [MoveRight] [MakeUppercase])]), LoopWhile(IsLetter [If(IsNotUppercase [MoveLeft] [MoveRight])]), Drop])", "cost_per_iteration": [[14, 0]], "number_of_iterations": 15}
{"file": "strings/1-5-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009786000000000072, "program_length": 8, "number_of_explored_programs": 48, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 4, 4, 4, 9, 3, 4, 4, 2, 5, 2, 0, 3, 3, 1], "explored_per_size_sequence": [0, 13, 8, 13, 14], "program": "Program([LoopWhile(IsLetter [MoveRight, MakeLowercase]), LoopWhile(AtStart [If(NotAtStart [MakeLowercase] [MoveRight])]), Drop])", "cost_per_iteration": [[52, 0]], "number_of_iterations": 53}
{"file": "strings/1-5-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.014766999999999975, "program_length": 8, "number_of_explored_programs": 91, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 5, 8, 4, 12, 11, 7, 12, 10, 6, 7, 0, 4, 2, 0, 2, 1], "explored_per_size_sequence": [0, 18, 28, 22, 23], "program": "Program([LoopWhile(IsLetter [If(IsLowercase [MoveRight] [MakeLowercase])]), LoopWhile(IsLetter [MoveLeft, MoveLeft]), Drop])", "cost_per_iteration": [[95, 0]], "number_of_iterations": 96}
{"file": "strings/1-6-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010200999999999905, "program_length": 14, "number_of_explored_programs": 36, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 1, 1, 3, 3, 2, 3, 2, 3, 2, 2, 1, 3, 1, 6, 0, 0, 0, 2], "explored_per_size_sequence": [0, 3, 5, 6, 8, 4, 7, 2, 1], "program": "Program([MakeLowercase, LoopWhile(IsLowercase [If(IsNotLowercase [MoveLeft] [Drop])]), LoopWhile(IsLetter [If(IsNotNumber [MoveRight] [Drop])]), LoopWhile(IsNumber [If(IsNotNumber [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[8, 3], [12, 2], [15, 1], [35, 0]], "number_of_iterations": 36}
{"file": "strings/1-6-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010406999999999833, "program_length": 7, "number_of_explored_programs": 40, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 1, 2, 2, 2, 2, 4, 6, 0, 4, 2, 4, 0, 2, 3, 2, 1, 1, 0, 1], "explored_per_size_sequence": [0, 1, 4, 8, 7, 5, 7, 5, 3], "program": "Program([MakeLowercase, LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveRight])]), MakeUppercase, Drop])", "cost_per_iteration": [[0, 7], [6, 6], [9, 1], [39, 0]], "number_of_iterations": 40}
{"file": "strings/1-6-3.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.01091199999999981, "program_length": 6, "number_of_explored_programs": 44, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 2, 3, 4, 4, 5, 3, 0, 3, 4, 6, 2, 2, 1, 1, 2, 1, 1], "explored_per_size_sequence": [0, 4, 7, 11, 11, 6, 4, 1], "program": "Program([Drop, Drop, MakeLowercase, Drop, Drop, MoveRight])", "cost_per_iteration": [[6, 3], [24, 1], [45, 0]], "number_of_iterations": 46}
{"file": "strings/1-6-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010438999999999865, "program_length": 13, "number_of_explored_programs": 44, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 1, 1, 1, 1, 2, 0, 0, 0, 2, 3, 2, 0, 1, 1, 7, 3, 2, 6, 1, 3, 1, 1, 2, 0, 1, 1, 0, 1], "explored_per_size_sequence": [0, 2, 3, 3, 3, 4, 4, 13, 6, 1, 2, 2, 1], "program": "Program([Drop, LoopWhile(AtEnd [If(IsNotUppercase [MoveRight] [MakeUppercase])]), LoopWhile(IsNotLowercase [MoveLeft, MakeLowercase]), LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[3, 5], [6, 4], [23, 3], [43, 0]], "number_of_iterations": 44}
{"file": "strings/1-6-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.011728000000000183, "program_length": 19, "number_of_explored_programs": 51, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 2, 1, 3, 0, 3, 2, 2, 1, 9, 3, 0, 3, 2, 2, 1, 1, 1, 1, 4, 2, 0, 2, 2, 0, 0, 2, 0, 0, 2], "explored_per_size_sequence": [0, 3, 6, 10, 10, 3, 5, 5, 4, 3, 0, 1, 1], "program": "Program([LoopWhile(IsNumber [If(AtEnd [Drop] [MoveLeft])]), LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeUppercase])]), MakeLowercase, LoopWhile(AtEnd [If(IsNotUppercase [MakeUppercase] [MoveLeft])]), MakeLowercase, MakeLowercase, LoopWhile(IsSpace [If(IsLowercase [MakeLowercase] [Drop])])])", "cost_per_iteration": [[26, 5], [28, 2], [34, 1], [50, 0]], "number_of_iterations": 51}
{"file": "strings/1-6-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.017686000000000313, "program_length": 23, "number_of_explored_programs": 63, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 0, 0, 1, 0, 1, 1, 3, 2, 2, 2, 2, 1, 2, 2, 3, 6, 3, 2, 7, 9, 4, 1, 3, 3, 1, 1, 1], "explored_per_size_sequence": [0, 0, 1, 3, 6, 6, 6, 14, 12, 8, 5, 2], "program": "Program([LoopWhile(IsNumber [If(IsLowercase [MakeUppercase] [Drop])]), Drop, LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [MoveRight])]), MakeUppercase, Drop, MakeLowercase, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveRight])]), LoopWhile(IsUppercase [If(IsNotLowercase [MoveLeft] [Drop])]), MakeUppercase, Drop, MoveRight])", "cost_per_iteration": [[2, 7], [6, 6], [13, 2], [19, 1], [62, 0]], "number_of_iterations": 63}
{"file": "strings/1-6-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.010918999999999901, "program_length": 16, "number_of_explored_programs": 41, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.002, "explored_per_size_tokens": [0, 0, 2, 0, 2, 3, 2, 2, 5, 2, 2, 2, 3, 1, 0, 3, 4, 8], "explored_per_size_sequence": [0, 2, 6, 6, 6, 7, 8, 4, 2], "program": "Program([LoopWhile(IsLetter [If(IsNotLetter [MoveLeft] [Drop])]), MakeUppercase, MakeLowercase, LoopWhile(IsUppercase [If(AtEnd [Drop] [MoveRight])]), Drop, LoopWhile(IsNumber [If(IsLetter [Drop] [MakeUppercase])]), MoveRight])", "cost_per_iteration": [[5, 1], [41, 0]], "number_of_iterations": 42}
{"file": "strings/1-6-8.pl", "test_cost": 2.4444444444444446, "train_cost": 0, "execution_time": 0.008665000000000145, "program_length": 6, "number_of_explored_programs": 24, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 0, 1, 1, 2, 1, 2, 2, 3, 2, 1, 4, 0, 1, 2, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 1, 2, 3, 3, 2, 7, 3, 0, 1, 1, 1], "program": "Program([Drop, Drop, MakeLowercase, MakeUppercase, Drop, Drop])", "cost_per_iteration": [[3, 3], [9, 2], [12, 1], [23, 0]], "number_of_iterations": 24}
{"file": "strings/1-6-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.009041999999999994, "program_length": 16, "number_of_explored_programs": 31, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.001, "time_cost": 0.001, "explored_per_size_tokens": [0, 1, 0, 0, 2, 4, 1, 1, 5, 3, 0, 1, 1, 3, 1, 2, 2, 1, 1, 0, 0, 1, 1], "explored_per_size_sequence": [0, 3, 4, 5, 5, 3, 2, 6, 1, 1, 1], "program": "Program([MakeLowercase, MakeUppercase, LoopWhile(AtEnd [If(IsNotSpace [MoveRight] [MakeLowercase])]), Drop, LoopWhile(IsLowercase [If(NotAtEnd [Drop] [MakeUppercase])]), LoopWhile(IsUppercase [If(IsNotLetter [MakeUppercase] [Drop])]), Drop])", "cost_per_iteration": [[8, 7], [12, 6], [25, 5], [29, 4], [31, 0]], "number_of_iterations": 32}
{"file": "strings/1-7-1.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.2762819999999997, "program_length": 16, "number_of_explored_programs": 2723, "search_depth": 1, "time_destroy": 0.01, "time_repair": 0.068, "time_cost": 0.129, "explored_per_size_tokens": [0, 3, 3, 2, 17, 25, 46, 64, 96, 121, 150, 177, 230, 225, 218, 240, 244, 168, 153, 130, 115, 77, 56, 50, 35, 23, 18, 15, 8, 7, 4, 2, 1], "explored_per_size_sequence": [0, 8, 15, 19, 89, 203, 340, 426, 568, 472, 328, 181, 51, 15, 8], "program": "Program([MoveRight, MakeLowercase, LoopWhile(IsLetter [MakeLowercase, Drop]), MakeUppercase, LoopWhile(NotAtEnd [Drop, MoveRight]), MakeLowercase, LoopWhile(IsLowercase [If(IsNotNumber [Drop] [MakeLowercase])]), MoveLeft, Drop])", "cost_per_iteration": [[46, 7], [59, 5], [78, 4], [95, 3], [102, 2], [385, 1], [2878, 0]], "number_of_iterations": 2879}
{"file": "strings/1-7-2.pl", "test_cost": 5.888888888888889, "train_cost": 0, "execution_time": 0.8070310000000003, "program_length": 23, "number_of_explored_programs": 6003, "search_depth": 2, "time_destroy": 0.03, "time_repair": 0.212, "time_cost": 0.366, "explored_per_size_tokens": [0, 2, 0, 2, 2, 5, 9, 9, 18, 46, 54, 132, 215, 313, 405, 517, 615, 580, 595, 532, 445, 390, 302, 270, 175, 131, 103, 60, 36, 18, 12, 2, 2, 4, 1, 1], "explored_per_size_sequence": [0, 2, 5, 12, 18, 24, 78, 176, 376, 688, 996, 1080, 993, 761, 489, 260, 38, 7], "program": "Program([MoveRight, Drop, Drop, Drop, MoveRight, Drop, LoopWhile(AtStart [If(IsNotLowercase [MoveLeft] [MoveRight])]), MakeLowercase, LoopWhile(AtEnd [If(NotAtEnd [MakeLowercase] [MakeUppercase])]), Drop, Drop, MoveRight, MoveRight, Drop, Drop, Drop, Drop])", "cost_per_iteration": [[2, 8], [15, 7], [16, 6], [29, 5], [137, 4], [142, 3], [148, 2], [2375, 1], [6413, 0]], "number_of_iterations": 6414}
{"file": "strings/1-7-3.pl", "test_cost": 0.2222222222222222, "train_cost": 0, "execution_time": 6.29527, "program_length": 14, "number_of_explored_programs": 44981, "search_depth": 18, "time_destroy": 0.25, "time_repair": 1.64, "time_cost": 3.023, "explored_per_size_tokens": [0, 5, 25, 233, 934, 1195, 1255, 1759, 3098, 3742, 3781, 3474, 3752, 4750, 4159, 2902, 2509, 2199, 1897, 1305, 623, 601, 485, 132, 71, 80, 15], "explored_per_size_sequence": [0, 721, 2699, 5555, 8345, 9816, 8428, 5809, 3186, 422], "program": "Program([LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), Drop, LoopWhile(IsLetter [If(IsLowercase [Drop] [MoveRight])]), Drop, MoveRight, LoopWhile(NotAtEnd [Drop, Drop])])", "cost_per_iteration": [[55, 16], [57, 2], [8216, 1], [55405, 0]], "number_of_iterations": 55406}
{"file": "strings/1-7-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 1.0658339999999988, "program_length": 21, "number_of_explored_programs": 6053, "search_depth": 3, "time_destroy": 0.033, "time_repair": 0.256, "time_cost": 0.507, "explored_per_size_tokens": [0, 5, 3, 5, 3, 4, 3, 11, 13, 6, 48, 57, 72, 105, 171, 213, 301, 375, 409, 493, 514, 483, 429, 399, 380, 333, 261, 214, 179, 137, 111, 70, 75, 49, 31, 28, 22, 14, 13, 3, 4, 4, 2, 0, 1], "explored_per_size_sequence": [0, 11, 11, 10, 45, 64, 87, 189, 340, 439, 533, 589, 523, 559, 523, 502, 455, 438, 352, 186, 111, 62, 20, 4], "program": "Program([LoopWhile(IsLowercase [If(IsUppercase [MakeLowercase] [MoveLeft])]), MoveRight, LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [Drop])]), Drop, MoveRight, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [Drop])]), Drop, MoveRight, LoopWhile(IsLowercase [If(IsNotLetter [MakeLowercase] [Drop])])])", "cost_per_iteration": [[43, 9], [54, 8], [55, 7], [62, 6], [73, 5], [85, 4], [89, 3], [95, 1], [6386, 0]], "number_of_iterations": 6387}
{"file": "strings/1-7-5.pl", "test_cost": 1, "train_cost": 1, "execution_time": 10.000062, "program_length": 34, "number_of_explored_programs": 63055, "search_depth": 25, "time_destroy": 0.392, "time_repair": 2.666, "time_cost": 4.664, "explored_per_size_tokens": [0, 5, 25, 130, 456, 794, 941, 1729, 3151, 4552, 4965, 5248, 5218, 6000, 6178, 5065, 4031, 3512, 3072, 2505, 1600, 1005, 1068, 670, 264, 259, 152, 90, 72, 69, 33, 49, 41, 24, 18, 18, 9, 11, 3, 6, 4, 2, 4, 1, 3, 1, 2], "explored_per_size_sequence": [0, 278, 1876, 4993, 8805, 12398, 12879, 10476, 6818, 3070, 273, 355, 317, 223, 149, 62, 35, 30, 16, 2], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MoveLeft])]), MakeUppercase, LoopWhile(AtStart [Drop, MakeUppercase]), Drop, MakeUppercase, LoopWhile(IsLowercase [If(IsNotUppercase [MakeUppercase] [MakeLowercase])]), MoveRight, MakeLowercase, LoopWhile(IsLowercase [If(IsNotSpace [Drop] [MoveLeft])]), LoopWhile(IsSpace [If(IsNumber [MakeLowercase] [MoveRight])]), LoopWhile(IsSpace [If(IsNotSpace [MakeUppercase] [MoveRight])]), LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [Drop])])])", "cost_per_iteration": [[0, 12], [121, 7], [129, 6], [241, 2], [290, 1]], "number_of_iterations": 75008}
{"file": "strings/1-8-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 5.9656009999999995, "program_length": 15, "number_of_explored_programs": 44910, "search_depth": 20, "time_destroy": 0.292, "time_repair": 1.778, "time_cost": 2.639, "explored_per_size_tokens": [0, 5, 25, 341, 1851, 3210, 3716, 3741, 4403, 5605, 5114, 3617, 3216, 3057, 2364, 1701, 910, 961, 627, 171, 127, 127, 15, 3, 1, 1, 1], "explored_per_size_sequence": [0, 1333, 4268, 7867, 11121, 9205, 6849, 3828, 434, 3, 2], "program": "Program([LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeUppercase])]), Drop, LoopWhile(AtEnd [If(IsUppercase [MakeUppercase] [MoveLeft])]), LoopWhile(AtStart [If(IsNotLetter [MoveRight] [Drop])]), MoveLeft, Drop])", "cost_per_iteration": [[8, 10], [14, 3], [3365, 2], [58086, 1], [58134, 0]], "number_of_iterations": 58135}
{"file": "strings/1-8-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.053354000000000124, "program_length": 21, "number_of_explored_programs": 216, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.011, "time_cost": 0.023, "explored_per_size_tokens": [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 2, 4, 2, 5, 6, 4, 6, 8, 8, 14, 12, 10, 18, 11, 8, 10, 10, 11, 6, 6, 14, 7, 5, 5, 4, 8, 2, 1, 2, 2, 0, 0, 0, 1], "explored_per_size_sequence": [0, 1, 1, 4, 0, 0, 3, 17, 14, 24, 39, 21, 46, 22, 16, 5, 3], "program": "Program([MakeLowercase, Drop, LoopWhile(IsUppercase [If(NotAtEnd [MoveRight] [MakeLowercase])]), LoopWhile(IsNotSpace [MoveRight, MakeUppercase]), Drop, MoveLeft, MoveLeft, MoveLeft, LoopWhile(IsLowercase [Drop, MakeLowercase]), LoopWhile(IsUppercase [If(IsNumber [MoveRight] [MakeUppercase])]), Drop])", "cost_per_iteration": [[5, 9], [6, 7], [7, 6], [8, 5], [30, 4], [42, 3], [52, 1], [217, 0]], "number_of_iterations": 218}
{"file": "strings/1-8-3.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.032096000000000124, "program_length": 16, "number_of_explored_programs": 146, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.006, "time_cost": 0.012, "explored_per_size_tokens": [0, 2, 0, 0, 2, 1, 2, 0, 2, 1, 3, 2, 4, 8, 0, 7, 9, 9, 12, 9, 10, 11, 13, 8, 7, 7, 4, 4, 4, 3, 0, 0, 1, 1], "explored_per_size_sequence": [0, 4, 2, 5, 1, 2, 4, 10, 3, 17, 28, 15, 19, 19, 10, 3, 4], "program": "Program([Drop, LoopWhile(IsLetter [If(AtEnd [MoveLeft] [Drop])]), Drop, MakeUppercase, Drop, Drop, LoopWhile(IsNumber [If(IsSpace [MakeLowercase] [MakeUppercase])]), Drop, Drop, MakeUppercase])", "cost_per_iteration": [[9, 6], [14, 4], [15, 2], [52, 1], [146, 0]], "number_of_iterations": 147}
{"file": "strings/1-8-4.pl", "test_cost": 0.8888888888888888, "train_cost": 0, "execution_time": 0.04248099999999999, "program_length": 29, "number_of_explored_programs": 190, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.017, "explored_per_size_tokens": [0, 0, 1, 2, 0, 0, 2, 0, 1, 0, 1, 1, 1, 6, 4, 4, 9, 9, 8, 7, 11, 9, 15, 11, 11, 10, 16, 14, 7, 5, 8, 4, 4, 2, 1, 1, 1, 2, 1, 0, 1], "explored_per_size_sequence": [0, 0, 1, 4, 1, 4, 5, 10, 9, 8, 8, 13, 19, 28, 22, 16, 19, 10, 8, 5], "program": "Program([LoopWhile(IsNotLowercase [Drop, Drop]), LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveRight])]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MoveLeft])]), LoopWhile(AtStart [If(IsNotUppercase [Drop] [MoveRight])]), Drop, MoveLeft, MakeUppercase, Drop, LoopWhile(IsSpace [If(IsNotLowercase [MakeUppercase] [MakeLowercase])]), MakeUppercase, Drop, Drop, MakeLowercase, Drop, Drop])", "cost_per_iteration": [[3, 11], [6, 8], [31, 7], [49, 6], [52, 4], [118, 3], [192, 0]], "number_of_iterations": 193}
{"file": "strings/1-8-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.019623999999999864, "program_length": 15, "number_of_explored_programs": 72, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.003, "time_cost": 0.005, "explored_per_size_tokens": [0, 3, 0, 1, 9, 4, 7, 8, 7, 6, 6, 2, 6, 4, 1, 3, 1, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 6, 15, 13, 22, 9, 2, 3, 1, 0, 0, 1], "program": "Program([LoopWhile(IsLetter [MakeLowercase, Drop]), Drop, Drop, LoopWhile(IsNumber [If(IsLetter [MoveRight] [MoveLeft])]), MakeLowercase, LoopWhile(IsLetter [If(IsNotLetter [MoveRight] [Drop])]), Drop])", "cost_per_iteration": [[6, 6], [51, 5], [56, 4], [69, 1], [72, 0]], "number_of_iterations": 73}
{"file": "strings/1-8-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.02362300000000017, "program_length": 19, "number_of_explored_programs": 103, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.007, "explored_per_size_tokens": [0, 2, 2, 0, 4, 6, 3, 3, 3, 4, 5, 3, 4, 7, 1, 5, 7, 3, 4, 5, 3, 4, 5, 2, 3, 6, 3, 4, 0, 1, 1], "explored_per_size_sequence": [0, 6, 10, 9, 12, 6, 5, 8, 10, 8, 14, 6, 6, 3], "program": "Program([MakeUppercase, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsNotLowercase [MakeLowercase] [Drop])]), Drop, MakeUppercase, Drop, LoopWhile(IsLetter [If(IsUppercase [MoveLeft] [Drop])]), LoopWhile(AtEnd [If(NotAtStart [Drop] [MoveLeft])]), Drop])", "cost_per_iteration": [[17, 11], [24, 7], [54, 6], [58, 2], [61, 1], [103, 0]], "number_of_iterations": 104}
{"file": "strings/1-8-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.029516999999999793, "program_length": 19, "number_of_explored_programs": 155, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.005, "time_cost": 0.01, "explored_per_size_tokens": [0, 0, 0, 1, 1, 1, 2, 1, 2, 1, 1, 3, 7, 6, 8, 9, 7, 5, 6, 8, 7, 7, 5, 6, 7, 7, 5, 4, 5, 4, 6, 7, 3, 3, 3, 2, 2, 1, 0, 0, 0, 1, 0, 1], "explored_per_size_sequence": [0, 2, 1, 2, 7, 7, 14, 12, 19, 17, 11, 15, 17, 9, 10, 7, 5], "program": "Program([LoopWhile(IsUppercase [If(IsNotLetter [MoveLeft] [MakeLowercase])]), LoopWhile(IsLowercase [If(AtStart [Drop] [MoveRight])]), MakeUppercase, Drop, MakeLowercase, LoopWhile(IsNotSpace [Drop, MakeLowercase]), Drop, LoopWhile(IsSpace [If(AtStart [MoveRight] [Drop])])])", "cost_per_iteration": [[3, 5], [34, 4], [48, 3], [65, 2], [92, 1], [154, 0]], "number_of_iterations": 155}
{"file": "strings/1-8-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.016387999999999625, "program_length": 23, "number_of_explored_programs": 65, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.003, "explored_per_size_tokens": [0, 2, 3, 3, 5, 7, 3, 1, 6, 7, 2, 2, 3, 2, 3, 5, 3, 1, 2, 1, 1, 1, 1, 1], "explored_per_size_sequence": [0, 7, 9, 12, 9, 5, 7, 4, 4, 6, 2], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [Drop])]), Drop, MakeLowercase, MakeUppercase, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveRight])]), LoopWhile(IsLetter [If(NotAtStart [MoveLeft] [Drop])]), LoopWhile(IsLowercase [If(IsLetter [MakeLowercase] [MakeUppercase])]), LoopWhile(IsNumber [MakeUppercase, Drop]), Drop])", "cost_per_iteration": [[10, 10], [11, 9], [13, 8], [27, 7], [38, 6], [44, 5], [46, 4], [64, 0]], "number_of_iterations": 65}
{"file": "strings/1-8-9.pl", "test_cost": 5, "train_cost": 0, "execution_time": 0.0365249999999997, "program_length": 15, "number_of_explored_programs": 196, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.008, "time_cost": 0.012, "explored_per_size_tokens": [0, 1, 1, 1, 6, 3, 4, 5, 4, 8, 6, 3, 10, 5, 8, 11, 12, 16, 13, 15, 9, 8, 6, 10, 6, 8, 5, 3, 4, 1, 2, 1, 1], "explored_per_size_sequence": [0, 3, 4, 7, 12, 5, 11, 13, 15, 31, 45, 30, 9, 9, 2], "program": "Program([Drop, Drop, LoopWhile(AtEnd [If(NotAtEnd [MoveRight] [MoveLeft])]), Drop, Drop, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeLowercase])]), MakeUppercase, Drop, MakeUppercase])", "cost_per_iteration": [[1, 7], [34, 6], [36, 4], [40, 2], [48, 1], [198, 0]], "number_of_iterations": 199}
{"file": "strings/1-9-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.2961509999999996, "program_length": 24, "number_of_explored_programs": 1962, "search_depth": 1, "time_destroy": 0.012, "time_repair": 0.081, "time_cost": 0.13, "explored_per_size_tokens": [0, 4, 11, 9, 16, 37, 50, 62, 113, 139, 163, 152, 170, 182, 183, 141, 114, 109, 82, 71, 50, 37, 24, 11, 13, 11, 4, 2, 2], "explored_per_size_sequence": [0, 18, 77, 167, 318, 373, 393, 314, 196, 91, 12, 3], "program": "Program([LoopWhile(IsLetter [If(AtEnd [MakeLowercase] [MoveRight])]), MoveRight, LoopWhile(IsSpace [If(AtEnd [MakeUppercase] [MakeLowercase])]), LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), LoopWhile(AtStart [MoveRight, MakeLowercase]), LoopWhile(IsLetter [If(IsLowercase [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLetter [Drop, MakeUppercase]), Drop])", "cost_per_iteration": [[2, 8], [28, 6], [111, 5], [120, 2], [2124, 1], [2148, 0]], "number_of_iterations": 2149}
{"file": "strings/1-9-2.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.07050100000000015, "program_length": 11, "number_of_explored_programs": 517, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.017, "time_cost": 0.029, "explored_per_size_tokens": [0, 5, 11, 6, 11, 23, 23, 22, 32, 50, 43, 36, 44, 54, 31, 26, 18, 23, 21, 7, 9, 13, 6, 0, 3], "explored_per_size_sequence": [0, 9, 34, 62, 68, 83, 87, 78, 58, 23, 7, 8], "program": "Program([LoopWhile(IsLetter [MoveRight, MoveRight]), Drop, LoopWhile(IsNotSpace [Drop, MakeLowercase]), MakeLowercase, Drop, MakeUppercase, MakeLowercase])", "cost_per_iteration": [[39, 8], [60, 6], [86, 2], [165, 1], [536, 0]], "number_of_iterations": 537}
{"file": "strings/1-9-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.6929659999999993, "program_length": 15, "number_of_explored_programs": 6329, "search_depth": 3, "time_destroy": 0.028, "time_repair": 0.18, "time_cost": 0.318, "explored_per_size_tokens": [0, 4, 8, 21, 58, 103, 180, 259, 346, 403, 403, 432, 526, 606, 656, 511, 374, 351, 287, 267, 181, 98, 104, 76, 20, 18, 13, 5, 2, 2, 4, 2, 1, 0, 3, 1, 2, 2], "explored_per_size_sequence": [0, 14, 153, 412, 854, 1172, 1379, 1101, 775, 425, 20, 13, 8, 1, 1, 1], "program": "Program([LoopWhile(NotAtEnd [MoveRight, MakeLowercase]), Drop, LoopWhile(IsLetter [If(NotAtStart [MoveLeft] [MoveRight])]), Drop, LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeLowercase])]), Drop, MakeLowercase])", "cost_per_iteration": [[63, 10], [117, 9], [127, 8], [148, 5], [150, 3], [7364, 1], [7370, 0]], "number_of_iterations": 7371}
{"file": "strings/1-9-4.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.05850000000000044, "program_length": 8, "number_of_explored_programs": 419, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.024, "explored_per_size_tokens": [0, 4, 2, 6, 6, 17, 13, 13, 19, 29, 42, 22, 33, 27, 42, 33, 27, 17, 20, 13, 9, 8, 3, 5, 7, 0, 2], "explored_per_size_sequence": [0, 8, 20, 30, 71, 87, 71, 63, 43, 20, 6], "program": "Program([MoveRight, MoveRight, MoveRight, MoveRight, LoopWhile(NotAtEnd [MakeUppercase, Drop]), Drop])", "cost_per_iteration": [[20, 4], [25, 3], [26, 2], [41, 1], [425, 0]], "number_of_iterations": 426}
{"file": "strings/1-9-5.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.6591229999999992, "program_length": 16, "number_of_explored_programs": 5680, "search_depth": 3, "time_destroy": 0.026, "time_repair": 0.174, "time_cost": 0.3, "explored_per_size_tokens": [0, 5, 18, 40, 89, 125, 138, 169, 296, 424, 462, 411, 455, 545, 515, 347, 319, 324, 301, 179, 114, 133, 95, 49, 36, 29, 17, 14, 10, 5, 4, 3, 3, 2, 2, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 63, 282, 569, 905, 1161, 995, 764, 500, 179, 94, 68, 50, 21, 19, 7, 1, 2], "program": "Program([LoopWhile(AtStart [If(IsLowercase [MakeUppercase] [MoveRight])]), LoopWhile(NotAtEnd [MakeLowercase, MoveRight]), LoopWhile(IsLetter [If(NotAtStart [MoveLeft] [Drop])]), Drop, LoopWhile(IsLetter [Drop, MakeUppercase]), Drop])", "cost_per_iteration": [[1, 11], [7, 10], [20, 9], [28, 8], [34, 7], [35, 4], [6475, 1], [6550, 0]], "number_of_iterations": 6551}
{"file": "strings/1-9-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.7099779999999996, "program_length": 19, "number_of_explored_programs": 5437, "search_depth": 2, "time_destroy": 0.025, "time_repair": 0.179, "time_cost": 0.326, "explored_per_size_tokens": [0, 2, 3, 9, 18, 18, 53, 70, 71, 111, 165, 213, 231, 254, 321, 426, 362, 353, 336, 385, 360, 314, 259, 260, 213, 148, 140, 85, 67, 39, 43, 25, 26, 13, 13, 4, 7, 4, 4, 6, 0, 1, 0, 1, 1, 2, 1], "explored_per_size_sequence": [0, 5, 7, 63, 175, 294, 459, 591, 562, 583, 593, 547, 542, 448, 296, 154, 56, 21, 20, 10, 6, 2, 3], "program": "Program([MoveRight, LoopWhile(IsNumber [MoveRight, MoveRight]), LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [MoveRight])]), MoveRight, LoopWhile(IsLetter [If(NotAtStart [Drop] [MakeLowercase])]), Drop, LoopWhile(IsLetter [MakeUppercase, Drop]), MakeLowercase, Drop])", "cost_per_iteration": [[25, 11], [27, 10], [39, 9], [59, 8], [63, 6], [64, 5], [92, 3], [5775, 1], [5797, 0]], "number_of_iterations": 5798}
{"file": "strings/1-9-7.pl", "test_cost": Infinity, "train_cost": 1, "execution_time": 10.000015999999999, "program_length": 16, "number_of_explored_programs": 62231, "search_depth": 25, "time_destroy": 0.399, "time_repair": 2.703, "time_cost": 4.595, "explored_per_size_tokens": [0, 0, 3, 2, 2, 10, 12, 50, 162, 450, 718, 1617, 2541, 3407, 4504, 5481, 6351, 7074, 6063, 5201, 4473, 3842, 3417, 2390, 1474, 1343, 869, 304, 239, 166, 40, 9, 8, 3, 2, 2, 2], "explored_per_size_sequence": [0, 3, 9, 8, 20, 111, 1816, 4718, 8209, 11708, 12409, 10849, 7847, 4137, 224, 98, 38, 27], "program": "Program([LoopWhile(IsNotSpace [MakeLowercase, Drop]), Drop, LoopWhile(IsLetter [If(IsSpace [MoveRight] [Drop])]), Drop, Drop, Drop, MakeLowercase, MakeLowercase, MakeUppercase, MoveRight, Drop])", "cost_per_iteration": [[8, 10], [23, 8], [26, 7], [51, 6], [98, 5], [107, 4], [136, 2], [3707, 1]], "number_of_iterations": 74579}
{"file": "strings/1-9-8.pl", "test_cost": 2.5555555555555554, "train_cost": 0, "execution_time": 0.11642499999999956, "program_length": 23, "number_of_explored_programs": 671, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.02, "time_cost": 0.045, "explored_per_size_tokens": [0, 5, 7, 5, 15, 12, 4, 7, 5, 7, 11, 7, 17, 21, 19, 37, 28, 33, 35, 38, 41, 28, 25, 25, 40, 37, 19, 22, 28, 21, 14, 29, 12, 6, 2, 7, 0, 0, 1, 1], "explored_per_size_sequence": [0, 15, 21, 19, 21, 11, 11, 18, 31, 38, 71, 59, 59, 47, 44, 42, 42, 39, 29, 25, 14, 13, 2], "program": "Program([LoopWhile(NotAtEnd [MoveRight, MakeLowercase]), Drop, Drop, Drop, Drop, Drop, MakeLowercase, Drop, LoopWhile(IsLowercase [If(IsLetter [Drop] [MakeUppercase])]), LoopWhile(IsLetter [If(NotAtStart [MoveRight] [Drop])]), LoopWhile(IsLetter [If(IsUppercase [Drop] [MakeUppercase])]), Drop])", "cost_per_iteration": [[64, 11], [65, 9], [117, 8], [122, 7], [163, 6], [164, 5], [165, 4], [173, 3], [232, 1], [680, 0]], "number_of_iterations": 681}
{"file": "strings/1-9-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.9289090000000009, "program_length": 21, "number_of_explored_programs": 6640, "search_depth": 3, "time_destroy": 0.038, "time_repair": 0.252, "time_cost": 0.414, "explored_per_size_tokens": [0, 5, 20, 45, 141, 154, 199, 212, 358, 512, 530, 442, 444, 576, 646, 472, 345, 317, 306, 237, 176, 142, 106, 69, 43, 38, 29, 22, 12, 13, 11, 3, 6, 5, 1, 0, 3], "explored_per_size_sequence": [0, 107, 360, 735, 1156, 1343, 1180, 848, 503, 121, 81, 82, 65, 35, 14, 10], "program": "Program([MakeLowercase, MakeUppercase, LoopWhile(IsNumber [If(IsNotUppercase [MoveRight] [Drop])]), MoveRight, LoopWhile(IsLetter [If(IsUppercase [Drop] [MoveRight])]), MoveRight, LoopWhile(IsLetter [If(IsNotSpace [Drop] [MakeUppercase])]), Drop, LoopWhile(IsUppercase [Drop, MakeUppercase]), Drop])", "cost_per_iteration": [[136, 11], [201, 10], [207, 9], [210, 8], [214, 5], [248, 4], [7448, 1], [7608, 0]], "number_of_iterations": 7609}
{"file": "strings/1-10-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.039017999999998665, "program_length": 42, "number_of_explored_programs": 189, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.009, "time_cost": 0.014, "explored_per_size_tokens": [0, 5, 9, 12, 17, 26, 18, 5, 14, 16, 10, 2, 6, 5, 8, 4, 5, 2, 1, 2, 3, 1, 1, 1, 3, 4, 0, 2, 0, 1, 1, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 25, 47, 39, 38, 10, 7, 6, 2, 1, 1, 3, 2, 4, 0, 3, 1], "program": "Program([LoopWhile(IsSpace [If(IsNotLowercase [MoveLeft] [MakeLowercase])]), LoopWhile(IsLetter [If(AtEnd [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsUppercase [If(IsNumber [MoveRight] [Drop])]), MakeUppercase, Drop, LoopWhile(AtStart [If(IsNumber [Drop] [MoveLeft])]), MoveRight, MakeLowercase, MoveLeft, LoopWhile(IsLowercase [If(IsNotUppercase [Drop] [MoveLeft])]), LoopWhile(IsUppercase [If(NotAtEnd [MakeLowercase] [MoveLeft])]), LoopWhile(AtEnd [If(IsLowercase [MoveRight] [MakeLowercase])]), LoopWhile(IsUppercase [If(IsNotSpace [MakeLowercase] [MoveRight])]), LoopWhile(IsNumber [Drop, MakeLowercase]), MoveLeft])", "cost_per_iteration": [[151, 5], [154, 4], [188, 3], [189, 2], [196, 1], [203, 0]], "number_of_iterations": 204}
{"file": "strings/1-10-2.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.688680999999999, "program_length": 10, "number_of_explored_programs": 5872, "search_depth": 3, "time_destroy": 0.036, "time_repair": 0.21, "time_cost": 0.291, "explored_per_size_tokens": [0, 5, 25, 129, 393, 537, 511, 485, 646, 645, 571, 344, 345, 394, 266, 119, 159, 137, 26, 51, 33, 11, 16, 6, 2, 4, 5, 4, 0, 2, 1], "explored_per_size_sequence": [0, 283, 758, 1311, 1590, 1094, 639, 85, 56, 32, 19, 5], "program": "Program([MoveRight, LoopWhile(IsLowercase [If(IsUppercase [MoveLeft] [MoveRight])]), MoveRight, Drop, LoopWhile(IsNotUppercase [MakeLowercase, Drop])])", "cost_per_iteration": [[63, 3], [166, 2], [6680, 1], [7047, 0]], "number_of_iterations": 7048}
{"file": "strings/1-10-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.07041399999999953, "program_length": 25, "number_of_explored_programs": 473, "search_depth": 1, "time_destroy": 0.003, "time_repair": 0.017, "time_cost": 0.027, "explored_per_size_tokens": [0, 5, 9, 19, 16, 11, 21, 15, 27, 32, 22, 26, 26, 35, 30, 24, 23, 30, 13, 20, 16, 10, 8, 12, 9, 10, 0, 1, 1, 1, 1], "explored_per_size_sequence": [0, 19, 33, 61, 59, 54, 55, 64, 45, 45, 24, 9, 3, 2], "program": "Program([MoveRight, LoopWhile(IsLetter [If(IsNumber [MakeUppercase] [MoveRight])]), Drop, LoopWhile(IsLowercase [If(AtEnd [MakeUppercase] [MoveRight])]), LoopWhile(AtEnd [If(NotAtStart [MakeUppercase] [MakeLowercase])]), MoveRight, LoopWhile(IsSpace [If(IsNumber [MoveLeft] [MakeUppercase])]), LoopWhile(IsLetter [If(IsUppercase [MakeLowercase] [Drop])]), MoveLeft, Drop])", "cost_per_iteration": [[95, 4], [140, 3], [257, 2], [406, 1], [501, 0]], "number_of_iterations": 502}
{"file": "strings/1-10-4.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.14798100000000058, "program_length": 19, "number_of_explored_programs": 1642, "search_depth": 1, "time_destroy": 0.006, "time_repair": 0.04, "time_cost": 0.065, "explored_per_size_tokens": [0, 5, 16, 32, 61, 114, 116, 125, 127, 149, 181, 151, 132, 105, 96, 74, 46, 37, 30, 17, 5, 10, 5, 4, 3, 1], "explored_per_size_sequence": [0, 32, 126, 225, 336, 357, 276, 203, 87], "program": "Program([MakeUppercase, MoveRight, LoopWhile(IsLetter [If(IsNumber [MoveLeft] [MoveRight])]), MoveRight, LoopWhile(IsLetter [MakeLowercase, Drop]), Drop, LoopWhile(IsUppercase [If(IsNotLowercase [MoveLeft] [Drop])]), LoopWhile(AtStart [If(IsLetter [MakeUppercase] [MoveRight])])])", "cost_per_iteration": [[17, 5], [43, 4], [273, 3], [1838, 1], [1839, 0]], "number_of_iterations": 1840}
{"file": "strings/1-10-5.pl", "test_cost": Infinity, "train_cost": 0, "execution_time": 0.022255000000000358, "program_length": 13, "number_of_explored_programs": 203, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.007, "explored_per_size_tokens": [0, 5, 10, 15, 27, 29, 14, 16, 21, 27, 10, 1, 9, 11, 3, 3, 1, 0, 0, 0, 0, 0, 1], "explored_per_size_sequence": [0, 32, 55, 56, 54, 3, 2, 0, 1], "program": "Program([LoopWhile(IsLetter [If(IsNumber [Drop] [MoveRight])]), MakeLowercase, LoopWhile(IsSpace [If(IsNotSpace [MakeLowercase] [Drop])]), LoopWhile(IsNotSpace [Drop, Drop]), MoveLeft])", "cost_per_iteration": [[216, 6], [223, 1], [227, 0]], "number_of_iterations": 228}
{"file": "strings/1-10-6.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.27377699999999994, "program_length": 24, "number_of_explored_programs": 2774, "search_depth": 2, "time_destroy": 0.012, "time_repair": 0.073, "time_cost": 0.119, "explored_per_size_tokens": [0, 5, 22, 62, 160, 188, 160, 169, 175, 211, 245, 194, 231, 222, 157, 112, 117, 124, 78, 30, 41, 40, 10, 12, 6, 0, 1, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 128, 280, 465, 662, 568, 397, 233, 29, 7, 2, 1, 2], "program": "Program([MoveRight, LoopWhile(AtEnd [If(IsNotLetter [MoveLeft] [MoveRight])]), LoopWhile(IsNotUppercase [MakeLowercase, MoveRight]), LoopWhile(IsLetter [If(IsNotNumber [Drop] [MakeLowercase])]), MoveLeft, MoveRight, Drop, MoveRight, LoopWhile(AtEnd [If(IsLetter [MoveRight] [MakeUppercase])]), LoopWhile(IsNumber [If(NotAtStart [MakeLowercase] [MakeUppercase])])])", "cost_per_iteration": [[44, 5], [57, 4], [63, 3], [3153, 1], [3189, 0]], "number_of_iterations": 3190}
{"file": "strings/1-10-7.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.01454000000000022, "program_length": 19, "number_of_explored_programs": 70, "search_depth": 1, "time_destroy": 0.0, "time_repair": 0.002, "time_cost": 0.004, "explored_per_size_tokens": [0, 5, 7, 1, 8, 4, 13, 3, 6, 7, 7, 1, 2, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1], "explored_per_size_sequence": [0, 12, 19, 17, 15, 1, 1, 0, 2, 0, 3], "program": "Program([LoopWhile(IsLetter [If(IsSpace [MakeLowercase] [MoveRight])]), LoopWhile(IsLetter [If(AtStart [MoveRight] [Drop])]), Drop, LoopWhile(IsNotSpace [Drop, MakeUppercase]), MakeLowercase, MoveRight, LoopWhile(AtStart [If(IsNotSpace [MakeUppercase] [MakeLowercase])]), MoveLeft])", "cost_per_iteration": [[70, 6], [72, 5], [75, 2], [78, 0]], "number_of_iterations": 79}
{"file": "strings/1-10-8.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.14328999999999947, "program_length": 20, "number_of_explored_programs": 1123, "search_depth": 1, "time_destroy": 0.005, "time_repair": 0.033, "time_cost": 0.062, "explored_per_size_tokens": [0, 5, 20, 25, 77, 73, 78, 71, 84, 127, 95, 64, 62, 78, 58, 49, 33, 39, 19, 15, 11, 9, 9, 3, 8, 2, 1, 5, 1, 0, 2], "explored_per_size_sequence": [0, 69, 143, 233, 277, 182, 125, 36, 27, 21, 10], "program": "Program([LoopWhile(IsLowercase [If(NotAtStart [MoveLeft] [Drop])]), MoveRight, MakeLowercase, LoopWhile(IsLowercase [If(IsLetter [MoveRight] [Drop])]), LoopWhile(IsSpace [If(IsUppercase [MakeUppercase] [Drop])]), Drop, LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), MoveRight])", "cost_per_iteration": [[175, 5], [1096, 1], [1252, 0]], "number_of_iterations": 1253}
{"file": "strings/1-10-9.pl", "test_cost": 0, "train_cost": 0, "execution_time": 7.4485529999999995, "program_length": 14, "number_of_explored_programs": 56850, "search_depth": 24, "time_destroy": 0.353, "time_repair": 2.25, "time_cost": 3.224, "explored_per_size_tokens": [0, 5, 5, 3, 11, 16, 41, 175, 611, 2224, 3938, 5258, 6294, 7030, 6149, 5577, 4673, 4084, 3677, 2432, 1531, 1500, 888, 295, 225, 170, 24, 8, 2, 2, 0, 0, 0, 0, 0, 1, 1], "explored_per_size_sequence": [0, 13, 20, 18, 47, 146, 1581, 4357, 7508, 10751, 11588, 9581, 7292, 3872, 75, 0, 1], "program": "Program([MoveRight, MoveRight, MoveLeft, LoopWhile(IsLowercase [If(AtEnd [MakeLowercase] [MoveRight])]), Drop, Drop, Drop, LoopWhile(IsLetter [If(AtStart [MakeUppercase] [Drop])])])", "cost_per_iteration": [[79, 4], [85, 3], [183, 2], [613, 1], [70230, 0]], "number_of_iterations": 70231}
{"file": "strings/1-11-1.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.35090600000000016, "program_length": 16, "number_of_explored_programs": 2212, "search_depth": 1, "time_destroy": 0.012, "time_repair": 0.088, "time_cost": 0.15, "explored_per_size_tokens": [0, 5, 7, 14, 16, 38, 54, 64, 118, 153, 166, 167, 166, 160, 169, 171, 154, 131, 106, 95, 81, 43, 39, 40, 14, 9, 9, 11, 5, 1, 2, 0, 3, 1], "explored_per_size_sequence": [0, 23, 113, 236, 352, 441, 394, 333, 180, 81, 17, 19, 12, 7, 4], "program": "Program([LoopWhile(IsSpace [If(IsNotNumber [MoveLeft] [MakeUppercase])]), MakeUppercase, MoveRight, LoopWhile(IsLetter [If(NotAtEnd [Drop] [MakeUppercase])]), Drop, MoveRight, LoopWhile(IsLowercase [If(NotAtStart [Drop] [MoveLeft])])])", "cost_per_iteration": [[14, 8], [32, 6], [48, 4], [60, 3], [61, 2], [88, 1], [2444, 0]], "number_of_iterations": 2445}
{"file": "strings/1-11-2.pl", "test_cost": 1.5555555555555556, "train_cost": 0, "execution_time": 0.0446989999999996, "program_length": 18, "number_of_explored_programs": 368, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.01, "time_cost": 0.017, "explored_per_size_tokens": [0, 5, 6, 10, 16, 14, 14, 24, 28, 31, 32, 24, 28, 22, 23, 22, 13, 15, 10, 11, 4, 8, 0, 3, 2, 2, 1], "explored_per_size_sequence": [0, 14, 29, 49, 63, 62, 60, 42, 25, 12, 8, 1, 3], "program": "Program([MoveRight, MakeUppercase, LoopWhile(IsUppercase [Drop, MakeUppercase]), Drop, LoopWhile(IsLowercase [If(IsNotNumber [MakeLowercase] [MoveLeft])]), MakeUppercase, MoveRight, LoopWhile(IsNumber [If(NotAtEnd [MakeLowercase] [MakeUppercase])]), Drop, Drop])", "cost_per_iteration": [[10, 3], [31, 2], [322, 1], [375, 0]], "number_of_iterations": 376}
{"file": "strings/1-11-3.pl", "test_cost": 0, "train_cost": 0, "execution_time": 0.022987000000000535, "program_length": 16, "number_of_explored_programs": 108, "search_depth": 1, "time_destroy": 0.001, "time_repair": 0.004, "time_cost": 0.008, "explored_per_size_tokens": [0, 2, 2, 2, 7, 6, 6, 7, 13, 10, 4, 6, 15, 4, 3, 5, 2, 2, 8, 0, 1, 2, 1], "explored_per_size_sequence": [0, 6, 8, 17, 16, 18, 24, 7, 7, 5], "program": "Program([MoveRight, LoopWhile(IsLetter [If(AtEnd [MakeUppercase] [Drop])]), Drop, MakeUppercase, MoveRight, LoopWhile(AtStart [If(IsNotSpace [MoveLeft] [MakeUppercase])]), LoopWhile(IsLetter [If(IsSpace [MoveLeft] [Drop])])])", "cost_per_iteration": [[22, 10], [42, 9], [65, 5], [79, 1], [107, 0]], "number_of_iterations": 108}
{"file": "strings/1-11-4.pl", "test_cost": 2.111111111111111, "train_cost": 0, "execution_time": 0.05816599999999994, "program_length": 19, "number_of_explored_programs": 346, "search_depth": 1, "time_destroy": 0.002, "time_repair": 0.013, "time_cost": 0.024, "explored_per_size_tokens": [0, 0, 2, 0, 2, 3, 6, 7, 11, 12, 12, 9, 14, 17, 15, 19, 22, 30, 19, 26, 21, 17, 14, 13, 18, 11, 7, 4, 5, 2, 2, 2, 1, 1, 1, 1], "explored_per_size_sequence": [0, 0, 3, 7, 15, 33, 41, 42, 63, 53, 50, 26, 8, 4, 1], "program": "Program([LoopWhile(IsLetter [If(IsUppercase [MoveRight] [Drop])]), Drop, MoveRight, Drop, LoopWhile(IsSpace [Drop, MakeLowercase]), MoveRight, Drop, MakeUppercase, MakeLowercase, MoveLeft, LoopWhile(IsLowercase [If(IsNotLowercase [MoveRight] [Drop])])])", "cost_per_iteration": [[1, 7], [2, 6], [14, 5], [48, 4], [55, 2], [307, 1], [347, 0]], "number_of_iterations": 348}
