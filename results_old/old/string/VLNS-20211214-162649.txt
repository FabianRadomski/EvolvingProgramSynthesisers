{"file": "strings/9-271-1.pl", "test_cost": 3.5, "train_cost": 3.3333333333333335, "execution_time": 10.000241, "program_length": 34, "number_of_explored_programs": 18938, "search_depth": 6, "time_destroy": 0.08, "time_repair": 0.704, "time_cost": 8.251, "program": "Program([MakeLowercase, LoopWhile(IsNumber [MoveRight]), MakeUppercase, Drop, MoveRight, LoopWhile(IsNotSpace [Drop]), MoveRight, Drop, Drop, LoopWhile(IsLowercase [Drop]), MoveRight, MoveLeft, LoopWhile(IsSpace [Drop]), MakeUppercase, LoopWhile(IsLowercase [MoveLeft]), LoopWhile(IsLowercase [MakeUppercase]), LoopWhile(IsNotLowercase [MoveLeft]), LoopWhile(IsNotLowercase [MoveRight]), MakeUppercase, LoopWhile(IsLowercase [Drop]), Drop, MoveLeft, LoopWhile(IsLowercase [Drop]), MakeLowercase])", "cost_per_iteration": [[4, 17.33], [12, 16.33], [42, 11.33], [67, 10.33], [112, 9.33], [117, 8.33], [146, 4.78], [398, 4.33], [2167, 4.22], [3103, 3.89], [3155, 3.44], [3209, 3.33]], "number_of_iterations": 19104}
{"file": "strings/9-271-2.pl", "test_cost": 3.5, "train_cost": 3.3333333333333335, "execution_time": 10.000497, "program_length": 30, "number_of_explored_programs": 18603, "search_depth": 7, "time_destroy": 0.079, "time_repair": 0.689, "time_cost": 8.282, "program": "Program([LoopWhile(IsNotNumber [MoveLeft]), LoopWhile(IsNotLowercase [MoveRight]), MoveRight, Drop, LoopWhile(AtEnd [MakeLowercase]), LoopWhile(IsNumber [Drop]), MakeLowercase, MoveLeft, LoopWhile(IsLowercase [Drop]), LoopWhile(IsLowercase [MoveLeft]), Drop, MoveLeft, LoopWhile(AtEnd [MoveRight]), Drop, MakeUppercase, Drop, LoopWhile(IsLetter [Drop]), LoopWhile(IsSpace [MoveRight]), MakeUppercase, LoopWhile(NotAtEnd [MoveRight])])", "cost_per_iteration": [[13, 17.11], [50, 16.11], [60, 15.11], [68, 11.67], [92, 10.67], [93, 8.78], [160, 7], [161, 6.11], [399, 6], [413, 5.56], [518, 5.33], [519, 4.33], [553, 3.89], [645, 3.33]], "number_of_iterations": 18758}
{"file": "strings/9-271-3.pl", "test_cost": 3.5, "train_cost": 3.3333333333333335, "execution_time": 10.000846999999998, "program_length": 20, "number_of_explored_programs": 17940, "search_depth": 5, "time_destroy": 0.076, "time_repair": 0.776, "time_cost": 7.977, "program": "Program([MoveRight, LoopWhile(IsNotLetter [MoveRight]), MakeUppercase, LoopWhile(IsLetter [Drop]), MoveLeft, Drop, Drop, MoveLeft, LoopWhile(IsLetter [MoveRight]), MoveRight, LoopWhile(IsLetter [Drop]), MoveRight, MakeUppercase, MakeUppercase, LoopWhile(IsNotUppercase [Drop])])", "cost_per_iteration": [[1, 16.11], [9, 10.67], [38, 7.67], [39, 6.67], [116, 5.67], [121, 5.22], [437, 4.89], [1242, 4.56], [2707, 3.89], [2710, 3.56], [2735, 3.44], [4120, 3.33]], "number_of_iterations": 18019}
{"file": "strings/9-271-4.pl", "test_cost": 8, "train_cost": 2.3333333333333335, "execution_time": 10.000155999999999, "program_length": 23, "number_of_explored_programs": 19265, "search_depth": 7, "time_destroy": 0.082, "time_repair": 0.75, "time_cost": 8.114, "program": "Program([LoopWhile(IsLetter [Drop]), LoopWhile(IsNotLetter [MoveRight]), MakeUppercase, MoveRight, LoopWhile(IsLetter [Drop]), Drop, MakeUppercase, Drop, MakeLowercase, LoopWhile(IsLetter [Drop]), MoveLeft, LoopWhile(IsNotUppercase [Drop]), Drop, Drop, LoopWhile(IsNotUppercase [MakeUppercase]), LoopWhile(IsLowercase [Drop])])", "cost_per_iteration": [[43, 16.44], [56, 12.44], [68, 5], [70, 4], [76, 3], [121, 2.33]], "number_of_iterations": 19377}
{"file": "strings/9-271-5.pl", "test_cost": 7, "train_cost": 2.5555555555555554, "execution_time": 10.000097, "program_length": 60, "number_of_explored_programs": 17907, "search_depth": 5, "time_destroy": 0.076, "time_repair": 0.771, "time_cost": 8.001, "program": "Program([MoveRight, LoopWhile(IsUppercase [Drop]), LoopWhile(IsNotLowercase [MoveRight, MoveRight]), MakeLowercase, LoopWhile(IsUppercase [Drop, Drop]), MoveRight, LoopWhile(AtStart [MoveLeft]), MakeLowercase, Drop, LoopWhile(IsUppercase [MoveRight]), MoveLeft, LoopWhile(IsNotSpace [Drop, MakeLowercase]), MoveLeft, MoveRight, LoopWhile(AtStart [MakeUppercase, MakeLowercase]), Drop, LoopWhile(AtStart [MoveLeft, MoveLeft]), MoveRight, MoveLeft, LoopWhile(IsNotSpace [Drop]), MoveLeft, LoopWhile(AtEnd [MoveRight, MakeLowercase]), MoveRight, LoopWhile(IsNumber [MoveRight, Drop]), LoopWhile(IsSpace [MoveRight, MakeUppercase]), MoveRight, MoveLeft, LoopWhile(IsNotUppercase [MoveRight, MakeLowercase]), MoveLeft, LoopWhile(IsLetter [MoveRight, MakeLowercase]), MoveLeft, MakeLowercase, Drop, MoveRight, MoveRight, MoveLeft])", "cost_per_iteration": [[7, 16.67], [40, 9.56], [88, 8.56], [163, 6.56], [202, 5.56], [206, 5.44], [226, 5], [367, 4.67], [399, 4.56], [5536, 4.22], [5542, 3.89], [5551, 3.22], [5610, 2.89], [7128, 2.56]], "number_of_iterations": 17996}
